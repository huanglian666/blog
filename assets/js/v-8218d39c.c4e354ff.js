"use strict";(self.webpackChunkhuanglian=self.webpackChunkhuanglian||[]).push([[9376],{89217:(n,a,s)=>{s.r(a),s.d(a,{data:()=>e});const e={key:"v-8218d39c",path:"/tool/maven/01_Maven%E5%9F%BA%E7%A1%80.html",title:"",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"一、传统项目开发存在的问题",slug:"一、传统项目开发存在的问题",children:[]},{level:2,title:"二、Maven简介",slug:"二、maven简介",children:[]},{level:2,title:"三、搭建Maven环境",slug:"三、搭建maven环境",children:[{level:3,title:"3.1、准备工作",slug:"_3-1、准备工作",children:[]},{level:3,title:"3.2、下载Maven",slug:"_3-2、下载maven",children:[]},{level:3,title:"3.3、解压安装包",slug:"_3-3、解压安装包",children:[]},{level:3,title:"3.4、配置环境变量",slug:"_3-4、配置环境变量",children:[]},{level:3,title:"3.5、验证",slug:"_3-5、验证",children:[]},{level:3,title:"3.6、配置Maven",slug:"_3-6、配置maven",children:[]}]},{level:2,title:"四、Maven的核心概念",slug:"四、maven的核心概念",children:[{level:3,title:"4.1、Maven工程约定目录结构",slug:"_4-1、maven工程约定目录结构",children:[]},{level:3,title:"4.2、POM文件",slug:"_4-2、pom文件",children:[]},{level:3,title:"4.3、仓库",slug:"_4-3、仓库",children:[]},{level:3,title:"4.4、Maven的生命周期及相关命令",slug:"_4-4、maven的生命周期及相关命令",children:[]}]},{level:2,title:"五、Maven在IDEA中的使用",slug:"五、maven在idea中的使用",children:[{level:3,title:"5.1、Idea关联Maven",slug:"_5-1、idea关联maven",children:[]},{level:3,title:"5.2、创建普通Maven项目",slug:"_5-2、创建普通maven项目",children:[]},{level:3,title:"5.3、创建及部署Web项目",slug:"_5-3、创建及部署web项目",children:[]}]},{level:2,title:"六、依赖作用范围",slug:"六、依赖作用范围",children:[{level:3,title:"6.1、什么是依赖作用范围",slug:"_6-1、什么是依赖作用范围",children:[]},{level:3,title:"6.2、如何设置",slug:"_6-2、如何设置",children:[]},{level:3,title:"6.3、依赖作用范围详解",slug:"_6-3、依赖作用范围详解",children:[]}]},{level:2,title:"七、常见问题",slug:"七、常见问题",children:[]}],filePathRelative:"tool/maven/01_Maven基础.md",git:{updatedTime:1661237516e3,contributors:[{name:"黄健",email:"huang.jian@trs.com.cn",commits:1}]}}},87789:(n,a,s)=>{s.r(a),s.d(a,{default:()=>m});var e=s(66252);const t=s.p+"assets/img/image-20210915230201811.0e0277c8.png",p=s.p+"assets/img/image-20210915230509527.476ae36e.png",o=s.p+"assets/img/image-20210915231213260.e0343530.png",c=s.p+"assets/img/image-20210915232827677.d7d2235b.png",l=s.p+"assets/img/image-20210915233334555.982dbe4e.png",u=s.p+"assets/img/image-20210915233537337.7a798beb.png",i=s.p+"assets/img/image-20210915235144968.d551403b.png",r=s.p+"assets/img/image-20210915235358454.39f9cf71.png",d=s.p+"assets/img/2020031511252294.5ec62c3b.png",k=(0,e.uE)('<h2 id="一、传统项目开发存在的问题" tabindex="-1"><a class="header-anchor" href="#一、传统项目开发存在的问题" aria-hidden="true">#</a> 一、传统项目开发存在的问题</h2><blockquote><ul><li>项目中需要的数量众多的<code>jar</code>包，需要手动下载并引入，并且多个项目需要的<code>jar</code>包存在重复的问题；</li><li>项目中需要的<code>jar</code>包有版本兼容的问题， 需要手动解决；</li><li>项目中需要的<code>jar</code>包又依赖其它的<code>jar</code>包，需要手动解决；</li><li>一个项目做成一个工程，造成工程比较庞大，需要使用多模块来划分项目。</li></ul><p>为了解决上述问题，我们引入<code>Maven</code>（读音[&#39;meɪv(ə)n]或[&#39;mevn] ）。</p></blockquote><h2 id="二、maven简介" tabindex="-1"><a class="header-anchor" href="#二、maven简介" aria-hidden="true">#</a> 二、Maven简介</h2><blockquote><p><code>Maven</code>是<code>Apache</code>软件基金会组织维护的一款自动化构建(<code>build</code>)工具，专注服务于<code>Java</code>平台的<strong>项目构建和依赖管理</strong>。<code>Maven</code>这个单词的本意是：<strong>专家，内行</strong>。</p><p><code>Maven</code>是目前最流行的自动化构建工具，对于生产环境下多框架、多模块整合开发有重要作用，<code>Maven</code>是一款在大型项目开发过程中不可或缺的重要工具 。</p><p><code>Maven</code>的主要功能：</p><ul><li><code>Maven</code>可以整合多个项目之间的引用关系， 我们可以根据业务和分层需要任意拆分一个项目 ；</li><li><code>Maven</code>提供规范的管理各个常用<code>jar</code>包及其各个版本， 并且可以自动下载和引入项目中；</li><li><code>Maven</code>可以根据指定版本自动解决<code>jar</code>包版本兼容问题；</li><li><code>Maven</code>可以把<code>jar</code>包所依赖的其它<code>jar</code>包自动下载并引入项目。</li></ul><p>类似的构建工具还有：<code>Ant</code>、<code>Gradle</code>。</p><p><code>构建</code>，从开始到结束有多个步骤，涉及到多个环节的协同工作。</p><ol><li>清理：删除以前的编译结果，为重新编译做好准备；</li><li>编译：将<code>Java</code>源程序编译为字节码文件；</li><li>测试：针对项目中的关键点进行测试，确保项目在迭代开发过程中关键点的正确性；</li><li>报告：在每一次测试后以标准的格式记录和展示测试结果；</li><li>打包：将一个包含诸多文件的工程封装为一个压缩文件用于安装或部署。<code>Java</code>工程对应<code>jar</code>包，<code>Web</code>工程对应<code>war</code>包；</li><li>安装：在<code>Maven</code>环境下特指将打包的结果（<code>jar</code>包或<code>war</code>包）安装到本地仓库中；</li><li>部署：将打包的结果部署到远程仓库或将<code>war</code>包部署到服务器上运行。</li></ol></blockquote><h2 id="三、搭建maven环境" tabindex="-1"><a class="header-anchor" href="#三、搭建maven环境" aria-hidden="true">#</a> 三、搭建Maven环境</h2><h3 id="_3-1、准备工作" tabindex="-1"><a class="header-anchor" href="#_3-1、准备工作" aria-hidden="true">#</a> 3.1、准备工作</h3><blockquote><p>由于<code>Maven</code>本身是基于<code>Java</code>开发的，所以要求必须安装<code>JDK</code>。<code>Maven3.3+</code>需要<code>JDK1.7</code>或以上版本才能运行。</p><p>验证<code>JDK</code>是否安装并且能正常运行，在<code>DOS</code>窗口中运行下面的命令：</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ javac -version\n$ java -version\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_3-2、下载maven" tabindex="-1"><a class="header-anchor" href="#_3-2、下载maven" aria-hidden="true">#</a> 3.2、下载Maven</h3><blockquote><p>下载地址：<code>https://maven.apache.org/download.cgi</code></p><p>选择<code>apache-maven-3.6.3-bin.zip</code>下载。</p></blockquote><h3 id="_3-3、解压安装包" tabindex="-1"><a class="header-anchor" href="#_3-3、解压安装包" aria-hidden="true">#</a> 3.3、解压安装包</h3><blockquote><p>使用解压软件将下载的安装包并放置到一个<code>没有中文和空格</code>的目录下。</p><p>目录说明：</p><ul><li><code>bin</code>：存放了<code>Maven</code>中的可执行程序，后续我们会使用这些程序；</li><li><code>boot</code>：含有<code>plexus-classworlds</code>类加载器框架，<code>Maven</code>使用该框架加载自己的类库；</li><li><code>conf</code>：存放了<code>Maven</code>的配置文件，后续我们会对里面的<code>setting.xml</code>进行配置；</li><li><code>lib</code>：含有<code>Maven</code>运行时所需要的<code>Java</code>类库。</li></ul></blockquote><h3 id="_3-4、配置环境变量" tabindex="-1"><a class="header-anchor" href="#_3-4、配置环境变量" aria-hidden="true">#</a> 3.4、配置环境变量</h3><blockquote><p>参考<code>JDK</code>环境变量的配置，这里我们需要进行如下操作：</p><ol><li>新建环境变量<code>MAVEN_HOME</code>，值：<code>Maven</code>中<code>bin</code>的上一级目录的全路径；</li><li>修改<code>Path</code>环境变量，添加：<code>%MAVEN_HOME%\\bin</code>。</li></ol></blockquote><h3 id="_3-5、验证" tabindex="-1"><a class="header-anchor" href="#_3-5、验证" aria-hidden="true">#</a> 3.5、验证</h3><blockquote><p>在命令行窗口中运行下面的命令:</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ mvn -version\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote><p>如果出现了版本相关内容的输出，说明<code>Maven</code>配置成功。</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>Apache Maven <span class="token number">3.6</span>.3 <span class="token punctuation">(</span>cecedd343002696d0abb50b32b541b8a6ba2883f<span class="token punctuation">)</span>\nMaven home: C:<span class="token punctuation">\\</span>DevApp<span class="token punctuation">\\</span>Maven<span class="token punctuation">\\</span>apache-maven-3.6.3<span class="token punctuation">\\</span>bin<span class="token punctuation">\\</span><span class="token punctuation">..</span>\nJava version: <span class="token number">1.8</span>.0_261, vendor: Oracle Corporation, runtime: C:<span class="token punctuation">\\</span>DevApp<span class="token punctuation">\\</span>Java<span class="token punctuation">\\</span>jdk1.8.0_261<span class="token punctuation">\\</span>jre\nDefault locale: zh_CN, platform encoding: GBK\nOS name: <span class="token string">&quot;windows 10&quot;</span>, version: <span class="token string">&quot;10.0&quot;</span>, arch: <span class="token string">&quot;amd64&quot;</span>, family: <span class="token string">&quot;windows&quot;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="_3-6、配置maven" tabindex="-1"><a class="header-anchor" href="#_3-6、配置maven" aria-hidden="true">#</a> 3.6、配置Maven</h3><blockquote><p>上面的安装过程并不能满足我们的需求，我们还要对<code>Maven</code>进行配置。<strong>以下的配置均在<code>conf</code>目录下的<code>setting.xml</code>文件中进行</strong>。</p><p><strong>这些都不需要记，用到的时候直接拷贝就可以。</strong></p></blockquote><h4 id="_3-6-1、配置本地仓库位置" tabindex="-1"><a class="header-anchor" href="#_3-6-1、配置本地仓库位置" aria-hidden="true">#</a> 3.6.1、配置本地仓库位置</h4><blockquote><p>在生活中，仓库是用来存放东西的，在<code>Maven</code>中，仓库是用来存放<code>jar</code>包的，配置本地仓库是用来配置<code>jar</code>包在本地的存放位置。</p><p>配置方式：</p></blockquote><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>localRepository</span><span class="token punctuation">&gt;</span></span>本地仓库位置，没有中文和空格的目录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>localRepository</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote><p>案例：</p></blockquote><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>localRepository</span><span class="token punctuation">&gt;</span></span>C:/DevApp/Maven/repository<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>localRepository</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="_3-6-2、配置远程仓库位置" tabindex="-1"><a class="header-anchor" href="#_3-6-2、配置远程仓库位置" aria-hidden="true">#</a> 3.6.2、配置远程仓库位置</h4><blockquote><p>本地仓库不可能存放所有的<code>jar</code>包，对于本地没有的<code>jar</code>包，需要从远程仓库镜像下载。</p><p>默认的远程仓库，在国内下载十分缓慢，我们有必要配置一个速度更快的仓库。</p><p>在国内，我们一般使用阿里云的镜像，配置如下：</p></blockquote><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token comment">&lt;!-- 阿里云仓库 --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirror</span><span class="token punctuation">&gt;</span></span>\n   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">&gt;</span></span>alimaven<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span>\n   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>aliyun maven<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>\n   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">&gt;</span></span>http://maven.aliyun.com/nexus/content/groups/public/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">&gt;</span></span>\n   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirrorOf</span><span class="token punctuation">&gt;</span></span>central<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirrorOf</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirror</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h4 id="_3-6-3、配置maven默认的jdk" tabindex="-1"><a class="header-anchor" href="#_3-6-3、配置maven默认的jdk" aria-hidden="true">#</a> 3.6.3、配置Maven默认的JDK</h4><blockquote><p><code>Maven</code>默认的<code>JDK</code>是<code>1.5</code>版本的，我们需要将<code>JDK</code>版本修改成<code>1.8</code>版本的，配置如下：</p></blockquote><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profiles</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profile</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">&gt;</span></span>jdk-1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activation</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activeByDefault</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activeByDefault</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>jdk</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>jdk</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activation</span><span class="token punctuation">&gt;</span></span>\n        \n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.source</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.source</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.target</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.target</span><span class="token punctuation">&gt;</span></span>\n\t\t\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.compilerVersion</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.compilerVersion</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profile</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profiles</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token comment">&lt;!-- 让增加的 profile生效 --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activeProfiles</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activeProfile</span><span class="token punctuation">&gt;</span></span>jdk-1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activeProfile</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activeProfiles</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h2 id="四、maven的核心概念" tabindex="-1"><a class="header-anchor" href="#四、maven的核心概念" aria-hidden="true">#</a> 四、Maven的核心概念</h2><h3 id="_4-1、maven工程约定目录结构" tabindex="-1"><a class="header-anchor" href="#_4-1、maven工程约定目录结构" aria-hidden="true">#</a> 4.1、Maven工程约定目录结构</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>demo(Maven工程的根目录，目录名可以自定义)\n|-- pom.xml(Maven工程的核心配置文件)\n|-- src(存放源码的目录)\n    |-- main(主程序，简单来说就是我们写的非测试代码)\n    |   |-- java(主程序的Java代码)\n    |   |-- resources(主程序的配置文件，xml文件，properties文件等)\n    |-- test(测试程序)\n        |-- java(测试程序的Java代码)\n        |-- resources(测试程序的配置文件，xml文件，properties文件等)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><blockquote><p>下面我们通过案例体会一下<code>Maven</code>的使用（了解就可以，真正用的时候我们还是用<code>IDE</code>），步骤如下：</p><ol><li>按照上面的目录结构将所有的文件夹都创建好，pom.xml中的内容如下：</li></ol></blockquote><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>\n  <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span>\n\n\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.qfedu<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>demo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n\n\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>\n\t\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>java.version</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>java.version</span><span class="token punctuation">&gt;</span></span>\n\t\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource.delimiter</span><span class="token punctuation">&gt;</span></span>@<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource.delimiter</span><span class="token punctuation">&gt;</span></span>\n\t\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.source</span><span class="token punctuation">&gt;</span></span>${java.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.source</span><span class="token punctuation">&gt;</span></span>\n\t\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.target</span><span class="token punctuation">&gt;</span></span>${java.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.target</span><span class="token punctuation">&gt;</span></span>\n\t\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project.build.sourceEncoding</span><span class="token punctuation">&gt;</span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project.build.sourceEncoding</span><span class="token punctuation">&gt;</span></span>\n\t\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project.reporting.outputEncoding</span><span class="token punctuation">&gt;</span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project.reporting.outputEncoding</span><span class="token punctuation">&gt;</span></span>\n\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><blockquote><ol start="2"><li>在<code>main/java</code>目录下新建包<code>com.qfedu.demo</code>，并在包下新建文件<code>MyApp.java</code>，代码如下：</li></ol></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>qfedu<span class="token punctuation">.</span>demo</span><span class="token punctuation">;</span>\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyApp</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><blockquote><ol start="3"><li>在<code>main/resources</code>目录下创建配置文件<code>conf.properties</code>，里面不需要有内容；</li><li>进入<code>pom.xml</code>所在的目录，也就是<code>demo</code>目录，打开<code>dos</code>窗口，执行<code>mvn compile</code>，这个命令目的是编译程序;</li><li>执行完成命令后，<code>demo</code>目录下生成了<code>target</code>目录，<code>main/java</code>下的<code>java</code>文件编译后生成的<code>class</code>文件在<code>target/classes</code>目录中，<code>main/resources</code>目录下的配置文件，也出现在了<code>target/classes</code>目录中。</li></ol></blockquote><h3 id="_4-2、pom文件" tabindex="-1"><a class="header-anchor" href="#_4-2、pom文件" aria-hidden="true">#</a> 4.2、POM文件</h3><blockquote><p><code>Project Object Model</code>，项目对象模型。<code>Maven</code>把一个项目的结构和内容抽象成一个模型，在<code>xml</code>文件中进行声明，以方便进行构建和描述，<code>pom.xml</code>是<code>Maven</code>的灵魂。所以，<code>Maven</code>环境搭建好之后，所有的学习和操作都是关于<code>pom.xml</code>的。</p><p><code>pom</code>文件中的常用标签：</p><ul><li><code>modelVersion</code>：<code>Maven</code>模型的版本，对于<code>Maven2</code>和<code>Maven3</code>来说，它只能是<code>4.0.0</code>；</li><li><code>groupId</code>：组织<code>id</code>，一般是公司域名的倒写；</li><li><code>artifactId</code>：项目名称，也是模块名称，对应 <code>groupId</code> 中项目中的子项目；</li><li><code>version</code>：项目的版本号；</li><li><code>groupId、artifactId、version</code>三个元素生成了一个<code>Maven</code>项目的基本坐标，在众多的<code>Maven</code>项目中可以唯一定位到某一个项目。坐标也决定着将来项目在仓库中的路径及名称；</li><li><code>packaging</code>：项目打包的类型，可以是<code> jar、 war、 rar、 ear、 pom</code>，默认是<code>jar</code>；</li><li><code>dependencies和dependency</code>：<code>Maven</code>的一个重要作用就是管理<code>jar</code>包，为了一个项目可以构建或运行，项目中不可避免的，会依赖很多其他的<code>jar</code>包，在<code>Maven</code>中，这些<code>jar</code>就被称为<strong>依赖</strong>，使用标签<code>dependency</code>来配置。 而这种依赖的配置正是通过坐标来定位的，由此我们也不难看出，<code>Maven</code>把所有的<code>jar</code>包也都视为项目存在了；</li><li><code>properties</code>：定义属性；</li><li><code>build</code>：表示与构建相关的配置；</li><li><code>parent</code>：在<code>Maven</code>中，如果多个模块都需要声明相同的配置，例如： <code>groupId</code>、<code>version</code>、有相同的依赖、或者相同的组件配置等， 也有<code>类似Java的继承机制</code>，用<code>parent</code>声明要继承的父工程的<code>pom</code>配置；</li><li><code>modules</code>：在<code>Maven</code>的多模块开发中，为了统一构建整个项目的所有模块，可以提供一个额外的模块，该模块打包方式为<code>pom</code>，并且在其中使用<code>modules</code>聚合的其它模块，这样通过本模块就可以一键自动识别模块间的依赖关系来构建所有模块，叫<code>Maven</code>的聚合；</li><li><code>parent、modules</code>在多模块项目中使用，暂时可以不用了解。</li></ul></blockquote><h3 id="_4-3、仓库" tabindex="-1"><a class="header-anchor" href="#_4-3、仓库" aria-hidden="true">#</a> 4.3、仓库</h3><h4 id="_4-3-1、仓库是什么" tabindex="-1"><a class="header-anchor" href="#_4-3-1、仓库是什么" aria-hidden="true">#</a> 4.3.1、仓库是什么</h4><blockquote><p>仓库是存放东西的，<code>Maven</code>中的仓库是用来存放<code>jar</code>包的，<code>Maven</code>的仓库可以存放：</p><ul><li><code>Maven</code>的插件，本质上也是一些<code>jar</code>，这些<code>jar</code>可以完成一定的功能；</li><li>自己开发的项目的模块，最终也可以打成<code>jar</code>包放在仓库中；</li><li>第三方框架或工具的<code>jar</code>包，比如：<code>MySQL</code>、<code>Spring</code>的<code>jar</code>包。</li></ul></blockquote><h4 id="_4-3-2、分类" tabindex="-1"><a class="header-anchor" href="#_4-3-2、分类" aria-hidden="true">#</a> 4.3.2、分类</h4><blockquote><p><strong>本地仓库</strong>，存在于当前电脑上，默认存放在<code>用户目录/.m2/repository</code>，为本机上所有的<code>Maven</code>工程服务，我们也可以通过<code>Maven</code>的配置文件<code>conf/setting.xml</code>修改本地仓库所在的目录，在之前我们已经修改了本地仓库的位置。</p><p><strong>远程仓库</strong>，不在本机上，通过网路才能使用，多台电脑可以通过网络使用。分类：</p><ul><li>中央仓库： 通过<code>Internet</code>访问，为全世界所有<code>Maven</code>工程服务；</li><li>中央仓库的镜像：架设在不同位置，欧洲，美洲，亚洲等每个洲都有若干的服务器，为中央仓库分担流量。减轻中央仓库的访问，下载的压力。所在洲的用户首先访问的是本洲的镜像服务器；</li><li>私服：在局域网环境中部署的服务器，为当前局域网范围内的所有<code>Maven</code>工程服务。 公司中常常使用这种方式。</li></ul><p>在之前我们已经修改了远程仓库的配置，将远程仓库修改成了阿里云的镜像。</p></blockquote><h4 id="_4-3-3、maven对仓库的使用" tabindex="-1"><a class="header-anchor" href="#_4-3-3、maven对仓库的使用" aria-hidden="true">#</a> 4.3.3、Maven对仓库的使用</h4><blockquote><p>首先查找本地仓库---&gt;私服（如果配置了私服）---&gt;镜像仓库---&gt;中央仓库</p><p>如果所有的仓库都没有，那么构建失败。</p></blockquote><h3 id="_4-4、maven的生命周期及相关命令" tabindex="-1"><a class="header-anchor" href="#_4-4、maven的生命周期及相关命令" aria-hidden="true">#</a> 4.4、Maven的生命周期及相关命令</h3><blockquote><p><code>Maven</code>的生命周期就是<code>Maven</code>构建项目的过程，包括：清理，编译，测试，报告，打包，安装，部署。</p><p><code>Maven</code>提供一个项目构建的模型，把编译、测试、打包、部署等都对应成一个个的生命周期阶段， 并对每一个阶段提供相应的命令，开发人员只需要掌握一小堆命令，就可以完成项目的构建过程。</p><ul><li><code>mvn clean</code>：清理（会删除原来编译和测试的目录，即<code>target</code>目录，但是已经<code>install</code>到仓库里的包不会删除）；</li><li><code>mvn compile</code>：编译主程序 （会在当前目录下生成一个<code>target</code>，里边存放编译主程序之后生成的字节码文件）；</li><li><code>mvn test-compile</code>：编译测试程序（会在当前目录下生成一个<code>target</code>，里边存放编译测试程序之后生成的字节码文件）；</li><li><code>mvn test</code>： 测试（会生成一个目录<code>surefire-reports</code>，保存测试结果）；</li><li><code>mvn package</code>：打包主程序（会编译、编译测试、测试、并且按照<code>pom.xml</code>配置把主程序打包生成<code>jar</code>包或者<code>war</code>包）；</li><li><code>mvn install</code>：安装主程序（会把本工程打包，并且按照本工程的坐标保存到本地仓库中）；</li><li><code>mvn deploy</code>：部署主程序（会把本工程打包，按照本工程的坐标保存到本地库中，并且还会保存到私服仓库中，还会自动把项目部署到<code>web</code>容器中)。</li></ul></blockquote><h2 id="五、maven在idea中的使用" tabindex="-1"><a class="header-anchor" href="#五、maven在idea中的使用" aria-hidden="true">#</a> 五、Maven在IDEA中的使用</h2><h3 id="_5-1、idea关联maven" tabindex="-1"><a class="header-anchor" href="#_5-1、idea关联maven" aria-hidden="true">#</a> 5.1、Idea关联Maven</h3><blockquote><p>在全局设置中进行如下操作：</p><ul><li>选择本地<code>Maven</code>版本；</li><li>选择本地<code>Maven</code>的配置文件；</li><li>选择本地仓储的位置。</li></ul></blockquote><p><img src="_pic/image-20210915174255897.png" alt="image-20210915174255897" title=":size=70%"></p><h3 id="_5-2、创建普通maven项目" tabindex="-1"><a class="header-anchor" href="#_5-2、创建普通maven项目" aria-hidden="true">#</a> 5.2、创建普通Maven项目</h3><h4 id="_5-2-1、新建项目" tabindex="-1"><a class="header-anchor" href="#_5-2-1、新建项目" aria-hidden="true">#</a> 5.2.1、新建项目</h4><blockquote><p>在新建项目界面，选择<code>Maven</code>并选择<code>SDK</code>的版本。</p></blockquote><p><img src="_pic/image-20210915222013868.png" alt="image-20210915222013868" title=":size=70%"></p><blockquote><p>为项目命名，选择项目存放位置，设置项目的<code>GAV</code>坐标</p></blockquote><p><img src="_pic/image-20210915222359899.png" alt="image-20210915222359899"></p><h4 id="_5-2-2、导入依赖" tabindex="-1"><a class="header-anchor" href="#_5-2-2、导入依赖" aria-hidden="true">#</a> 5.2.2、导入依赖</h4><blockquote><p>这里以导入<code>MySQL</code>驱动举例</p></blockquote><h5 id="_5-2-2-1、查找依赖" tabindex="-1"><a class="header-anchor" href="#_5-2-2-1、查找依赖" aria-hidden="true">#</a> 5.2.2.1、查找依赖</h5><blockquote><p>网址：<code>https://mvnrepository.com/</code></p><p>进入网站后，搜索<code>mysql</code></p></blockquote><p><img src="_pic/image-20210915230055051.png" alt="image-20210915230055051"></p><blockquote><p>进入上图中的链接，出现线图所示的界面，该界面罗列了MySQL驱动所有版本</p></blockquote><p><img src="'+t+'" alt="image-20210915230201811"></p><blockquote><p>按照上图的示例，选择<code>5.1.49</code>，出现如下图所示界面</p></blockquote><p><img src="'+p+'" alt="image-20210915230509527"></p><h5 id="_5-2-2-2、导入依赖到项目中" tabindex="-1"><a class="header-anchor" href="#_5-2-2-2、导入依赖到项目中" aria-hidden="true">#</a> 5.2.2.2、导入依赖到项目中</h5><blockquote><p>将上面查到的<code>MySQL</code>驱动的<code>GAV</code>坐标拷贝到项目的<code>pom.xml</code>文件中。</p></blockquote><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">&quot;</span></span>\n         <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>\n         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.qfedu<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mvntest<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.source</span><span class="token punctuation">&gt;</span></span>8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.source</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.target</span><span class="token punctuation">&gt;</span></span>8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.target</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>\n        <span class="token comment">&lt;!-- MySQL驱动坐标 --&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>5.1.49<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n            <span class="token comment">&lt;!-- 关于scope后续会讲到 --&gt;</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>runtime<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h5 id="_5-2-2-3、同步依赖" tabindex="-1"><a class="header-anchor" href="#_5-2-2-3、同步依赖" aria-hidden="true">#</a> 5.2.2.3、同步依赖</h5><blockquote><p>引入坐标后，同步依赖，确认导入。</p><p>单击<code>pom.xml</code>右上角的图标，同步依赖，<code>Idea2020</code>无法自动同步，只能<strong>手动同步</strong>依赖。</p><p>手动同步依赖之后，右上角的图标消失。</p></blockquote><p><img src="'+o+'" alt="image-20210915231213260"></p><h4 id="_5-2-3、测试" tabindex="-1"><a class="header-anchor" href="#_5-2-3、测试" aria-hidden="true">#</a> 5.2.3、测试</h4><blockquote><p>在<code>src/main</code>下新建<code>Java</code>类，运行<code>main</code>方法测试。</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>qfedu<span class="token punctuation">.</span>test</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">Connection</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">DriverManager</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">PreparedStatement</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">ResultSet</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyTest</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>\n        <span class="token comment">//四大参数</span>\n        <span class="token class-name">String</span> driverName <span class="token operator">=</span> <span class="token string">&quot;com.mysql.jdbc.Driver&quot;</span><span class="token punctuation">;</span>\n        <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">&quot;jdbc:mysql://localhost:3306/mydbjdbc?useSSL=false&quot;</span><span class="token punctuation">;</span>\n        <span class="token class-name">String</span> username <span class="token operator">=</span> <span class="token string">&quot;root&quot;</span><span class="token punctuation">;</span>\n        <span class="token class-name">String</span> password <span class="token operator">=</span> <span class="token string">&quot;root&quot;</span><span class="token punctuation">;</span>\n\n        <span class="token comment">//SQL语句</span>\n        <span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">&quot;select * from user&quot;</span><span class="token punctuation">;</span>\n\n        <span class="token comment">//加载驱动</span>\n        <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>driverName<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">//获取连接</span>\n        <span class="token class-name">Connection</span> connection <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> username<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">//获取PreparedStatement</span>\n        <span class="token class-name">PreparedStatement</span> statement <span class="token operator">=</span> connection<span class="token punctuation">.</span><span class="token function">prepareStatement</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">//发送SQL</span>\n        <span class="token class-name">ResultSet</span> rSet <span class="token operator">=</span> statement<span class="token punctuation">.</span><span class="token function">executeQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">//处理结果</span>\n        <span class="token keyword">while</span><span class="token punctuation">(</span>rSet<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token class-name">String</span> u <span class="token operator">=</span> rSet<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name">String</span> p <span class="token operator">=</span> rSet<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;password&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>u <span class="token operator">+</span> <span class="token string">&quot;:&quot;</span> <span class="token operator">+</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token comment">//释放资源</span>\n        rSet<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        statement<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br></div></div><h3 id="_5-3、创建及部署web项目" tabindex="-1"><a class="header-anchor" href="#_5-3、创建及部署web项目" aria-hidden="true">#</a> 5.3、创建及部署Web项目</h3><blockquote><p>创建<code>Maven</code>版本的<code>web</code>项目，可以基于普通<code>Maven</code>项目进行。</p></blockquote><h4 id="_5-3-1、修改打包方式" tabindex="-1"><a class="header-anchor" href="#_5-3-1、修改打包方式" aria-hidden="true">#</a> 5.3.1、修改打包方式</h4><blockquote><p>在pom.xml中设置<code>packaging</code></p></blockquote><p><img src="'+c+'" alt="image-20210915232827677"></p><h4 id="_5-3-2、引入web开发相关依赖" tabindex="-1"><a class="header-anchor" href="#_5-3-2、引入web开发相关依赖" aria-hidden="true">#</a> 5.3.2、引入web开发相关依赖</h4><blockquote><p>这里需要引入<code>JSP</code>和<code>Servlet</code>依赖</p></blockquote><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token comment">&lt;!-- servlet --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>javax.servlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>javax.servlet-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.1.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n<span class="token comment">&lt;!-- jsp --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>javax.servlet.jsp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>javax.servlet.jsp-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.3.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n<span class="token comment">&lt;!-- jstl --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>jstl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>jstl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h4 id="_5-3-3、修改项目结构" tabindex="-1"><a class="header-anchor" href="#_5-3-3、修改项目结构" aria-hidden="true">#</a> 5.3.3、修改项目结构</h4><blockquote><p>此时项目中没有存放<code>web</code>资源及配置文件的目录，按照下图的操作创建<code>web.xml</code>，注意路径的写法（需要补全相关内容）。</p></blockquote><p><img src="'+l+'" alt="image-20210915233334555"></p><blockquote><p>创建存放<code>web</code>资源的目录，这里按照图示操作，不需要修改任何内容，最后单击<code>OK</code>就可以了。</p></blockquote><p><img src="'+u+'" alt="image-20210915233537337"></p><blockquote><p>完成上述操作，项目<code>src/main</code>目录下会产生<code>webapp</code>目录，这个目录和之前<code>JavaWeb</code>阶段的<code>web</code>目录作用和地位是一样的。这个目录中包括<code>WEB-INF</code>目录，<code>WEB-INF</code>中包括<code>web.xml</code>文件。后续开发过程中的<code>JSP</code>文件都放在这个目录下。</p><p>之前我们在这个目录下创建<code>lib</code>目录，用来存放<code>jar</code>包，由于我们现在创建的是<code>Maven</code>工程，导入<code>jar</code>包直接在<code>pom.xml</code>中导入就可以了。</p></blockquote><h4 id="_5-3-4、编写代码" tabindex="-1"><a class="header-anchor" href="#_5-3-4、编写代码" aria-hidden="true">#</a> 5.3.4、编写代码</h4><blockquote><p>新建<code>Servlet</code>代码如下</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>qfedu<span class="token punctuation">.</span>servlet</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>\n\n<span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;TestServlet&quot;</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">&quot;/TestServlet&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>\n        response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;p&gt;Hello World&lt;/p&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>\n\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h4 id="_5-3-5、部署web项目" tabindex="-1"><a class="header-anchor" href="#_5-3-5、部署web项目" aria-hidden="true">#</a> 5.3.5、部署Web项目</h4><blockquote><p>在<code>Tomcat</code>中部署项目，整个过程和<code>JavaWeb</code>阶段中部署项目过程完全相同。</p></blockquote><p><img src="'+i+'" alt="image-20210915235144968"></p><p><img src="'+r+'" alt="image-20210915235358454"></p><h4 id="_5-3-6、测试" tabindex="-1"><a class="header-anchor" href="#_5-3-6、测试" aria-hidden="true">#</a> 5.3.6、测试</h4><blockquote><p>启动<code>Tomcat</code>，访问<code>Servlet</code>测试。</p></blockquote><h2 id="六、依赖作用范围" tabindex="-1"><a class="header-anchor" href="#六、依赖作用范围" aria-hidden="true">#</a> 六、依赖作用范围</h2><h3 id="_6-1、什么是依赖作用范围" tabindex="-1"><a class="header-anchor" href="#_6-1、什么是依赖作用范围" aria-hidden="true">#</a> 6.1、什么是依赖作用范围</h3><blockquote><p><code>jar</code>包生效的时间段，即<code>jar</code>的生命周期</p></blockquote><h3 id="_6-2、如何设置" tabindex="-1"><a class="header-anchor" href="#_6-2、如何设置" aria-hidden="true">#</a> 6.2、如何设置</h3><blockquote><p>在<code>pom.xml</code>中设置依赖时使用<code>scope</code>设置</p></blockquote><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token comment">&lt;!-- MySQL驱动坐标 --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>5.1.49<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>runtime<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n<span class="token comment">&lt;!-- servlet --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>javax.servlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>javax.servlet-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.1.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n<span class="token comment">&lt;!-- jsp --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>javax.servlet.jsp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>javax.servlet.jsp-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.3.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>provided<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h3 id="_6-3、依赖作用范围详解" tabindex="-1"><a class="header-anchor" href="#_6-3、依赖作用范围详解" aria-hidden="true">#</a> 6.3、依赖作用范围详解</h3><blockquote><p><code>compile</code> ：为<strong>默认的</strong>依赖有效范围。如果在定义依赖关系的时候，没有明确指定依赖有效范围的话，则默认采用该依赖有效范围。此种依赖，在编译、运行、测试时均有效。</p><p><code>provided</code> ：在编译、测试时有效，但是在运行时无效。<code>provided</code>意味着打包的时候可以不用包进去，别的设施(Web Container)会提供。事实上该依赖理论上可以参与编译，测试，运行等周期。例如：<code>servlet-api</code>，运行项目时，容器已经提供，就不需要<code>Maven</code>重复地引入一遍了。</p><p><code>runtime</code> ：在运行、测试时有效，但是在编译代码时无效。说实话在终端的项目（非开源，企业内部系统）中，和<code>compile</code>区别不是很大。例如：<code>JDBC</code>驱动实现，项目代码编译只需要<code>JDK</code>提供的<code>JDBC</code>接口，只有在测试或运行项目时才需要实现上述接口的具体<code>JDBC</code>驱动。</p><p><code>test</code> ：只在测试时有效，包括测试代码的编译，执行。例如：<code>Junit</code>。</p><p><code>system</code> ：在编译、测试时有效，但是在<strong>运行时无效</strong>。和<code>provided</code>的区别是，使用<code>system</code>范围的依赖时必须通过<code>systemPath</code>元素显式地指定依赖文件的路径。由于此类依赖不是通过<code>Maven</code>仓库解析的，而且往往与本机系统绑定，可能造成构建的不可移植，因此应该谨慎使用。</p></blockquote><h2 id="七、常见问题" tabindex="-1"><a class="header-anchor" href="#七、常见问题" aria-hidden="true">#</a> 七、常见问题</h2><blockquote><p><code>Idea</code>中<code>Maven</code>项目依赖出现红色波浪线。</p></blockquote><p><img src="'+d+'" alt="" title=":size=70%"></p><blockquote><p>原因：网络原因导致下载资源到一半没成功</p><p>如何解决：单击<code>Idea Maven</code>窗口上方的刷新按钮</p></blockquote><p><img src="_pic/image-20210916101723051.png" alt="image-20210916101723051"></p><blockquote><p>如果还不能解决，可以在<code>Windows</code>下新建如下内容的<code>.bat</code>文件，运行，再单击刷新按钮。</p><p>注意<code>REPOSITORY_PATH</code>的值。</p></blockquote><div class="language-powershell ext-powershell line-numbers-mode"><pre class="language-powershell"><code><span class="token function">set</span> REPOSITORY_PATH=本地仓库的绝对路径\nrem 正在搜索<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n<span class="token keyword">for</span> <span class="token operator">/</span>f <span class="token string">&quot;delims=&quot;</span> <span class="token operator">%</span><span class="token operator">%</span>i in <span class="token punctuation">(</span><span class="token string">&#39;dir /b /s &quot;%REPOSITORY_PATH%\\*lastUpdated*&quot;&#39;</span><span class="token punctuation">)</span> <span class="token keyword">do</span> <span class="token punctuation">(</span>\n    <span class="token function">del</span> <span class="token operator">/</span>s <span class="token operator">/</span>q <span class="token operator">%</span><span class="token operator">%</span>i\n<span class="token punctuation">)</span>\nrem 搜索完毕\npause\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>',117),g={},m=(0,s(83744).Z)(g,[["render",function(n,a){return k}]])}}]);