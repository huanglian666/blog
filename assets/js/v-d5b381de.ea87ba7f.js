"use strict";(self.webpackChunkhuanglian=self.webpackChunkhuanglian||[]).push([[2342],{61058:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-d5b381de",path:"/web/javaweb/04_JSP%E8%BF%9B%E9%98%B6_EL_JSTL.html",title:"",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"一、JSP指令",slug:"一、jsp指令",children:[{level:3,title:"1.1、page指令",slug:"_1-1、page指令",children:[]},{level:3,title:"1.2、include指令",slug:"_1-2、include指令",children:[]},{level:3,title:"1.3、taglib指令",slug:"_1-3、taglib指令",children:[]}]},{level:2,title:"二、JSP九大内置对象",slug:"二、jsp九大内置对象",children:[{level:3,title:"2.1、简要说明",slug:"_2-1、简要说明",children:[]},{level:3,title:"2.2、pageContext",slug:"_2-2、pagecontext",children:[]}]},{level:2,title:"三、JSP动作标签（了解）",slug:"三、jsp动作标签-了解",children:[{level:3,title:"3.1、include标签",slug:"_3-1、include标签",children:[]},{level:3,title:"3.2、forward",slug:"_3-2、forward",children:[]}]},{level:2,title:"四、EL表达式",slug:"四、el表达式",children:[{level:3,title:"4.1、概述",slug:"_4-1、概述",children:[]},{level:3,title:"4.2、EL表达式使用",slug:"_4-2、el表达式使用",children:[]},{level:3,title:"4.3、EL表达式运算符",slug:"_4-3、el表达式运算符",children:[]},{level:3,title:"4.4、EL的隐式对象",slug:"_4-4、el的隐式对象",children:[]}]},{level:2,title:"五、JSTL",slug:"五、jstl",children:[{level:3,title:"5.1、目前存在的问题",slug:"_5-1、目前存在的问题",children:[]},{level:3,title:"5.2、什么是JSTL",slug:"_5-2、什么是jstl",children:[]},{level:3,title:"5.3、JSTL的作用",slug:"_5-3、jstl的作用",children:[]},{level:3,title:"5.4、如何使用JSTL",slug:"_5-4、如何使用jstl",children:[]},{level:3,title:"5.5、JSTL核心标签",slug:"_5-5、jstl核心标签",children:[]},{level:3,title:"5.6、登录案例升级",slug:"_5-6、登录案例升级",children:[]},{level:3,title:"5.7、MVC设计模式",slug:"_5-7、mvc设计模式",children:[]}]}],filePathRelative:"web/javaweb/04_JSP进阶_EL_JSTL.md",git:{updatedTime:1661237516e3,contributors:[{name:"黄健",email:"huang.jian@trs.com.cn",commits:1}]}}},36504:(n,s,a)=>{a.r(s),a.d(s,{default:()=>o});var e=a(66252);const t=a.p+"assets/img/image-20210909162304967.7500880b.png",p=(0,e.uE)('<h2 id="一、jsp指令" tabindex="-1"><a class="header-anchor" href="#一、jsp指令" aria-hidden="true">#</a> 一、JSP指令</h2><blockquote><p>JSP指令用来设置与整个JSP页面相关的属性。</p><p>语法格式：<code>指令格式：&lt;%@指令名 attr1=&quot;&quot; attr2=&quot;&quot; %&gt;</code>。</p><p>一般都会把JSP指令放到JSP文件的最上方，但这不是必须的。</p><p>常用指令：</p><ul><li><p><code>page </code>：定义页面的依赖属性，比如脚本语言、error页面、缓存需求等等；</p></li><li><p><code>include</code>：包含其他文件；</p></li><li><p><code>taglib </code>：引入标签库的定义，可以是自定义标签。</p></li></ul></blockquote><h3 id="_1-1、page指令" tabindex="-1"><a class="header-anchor" href="#_1-1、page指令" aria-hidden="true">#</a> 1.1、page指令</h3><blockquote><p>page指令是最为常用的指定，也是属性最多的属性，page指令没有必须属性，都是可选属性，例如<code>&lt;%@page %&gt;</code>，没有给出任何属性也是可以的。</p><p>关于pageEncoding和contentType：</p><ul><li>pageEncoding <ul><li>指定当前JSP页面的编码</li><li>这个编码是给服务器看的，服务器需要知道当前JSP使用的编码，不然服务器无法正确把JSP编译成java文件</li><li>这个编码只需要与真实的页面编码一致即可</li></ul></li><li>contentType <ul><li>设置响应字符流的编码</li><li>设置content-type响应头</li></ul></li><li>无论是page指令的pageEncoding还是contentType，它们的默认值都是ISO-8859-1，ISO-8859-1是无法显示中文的，所以JSP页面中存在中文的话，一定要设置这两个属性</li><li>两者关系 <ul><li>当pageEncoding和contentType只出现一个时，那么另一个的值与出现的值相同。</li><li>如果两个都不出现，那么两个属性的值都是ISO-8859-1。</li></ul></li></ul><p>import属性：对应java代码中的import语句，用来导入包。</p></blockquote><h3 id="_1-2、include指令" tabindex="-1"><a class="header-anchor" href="#_1-2、include指令" aria-hidden="true">#</a> 1.2、include指令</h3><blockquote><ul><li>include指令表示静态包含，即目的是把多个JSP合并成一个JSP文件。</li><li>include指令只有一个属性：file，指定要包含的页面</li><li>a.jsp页面中使用include指令包含了b.jsp，那么在编译a.jsp时，会把两个文件合并成一个文件再编译成.java。</li></ul></blockquote><h3 id="_1-3、taglib指令" tabindex="-1"><a class="header-anchor" href="#_1-3、taglib指令" aria-hidden="true">#</a> 1.3、taglib指令</h3><blockquote><p>学习jstl标签使用，后面再讲</p></blockquote><h2 id="二、jsp九大内置对象" tabindex="-1"><a class="header-anchor" href="#二、jsp九大内置对象" aria-hidden="true">#</a> 二、JSP九大内置对象</h2><h3 id="_2-1、简要说明" tabindex="-1"><a class="header-anchor" href="#_2-1、简要说明" aria-hidden="true">#</a> 2.1、简要说明</h3><blockquote><p>JSP内置对象：在JSP中无需创建就可以使用的9个对象。</p><p>九大内置对象如下：</p><ul><li><code>out(JspWriter)</code>：等同与response.getWriter()，用来向客户端发送文本数据</li><li><code>config(ServletConfig)</code>：对应”真身”中的ServletConfig</li><li><code>page(当前JSP的真身类型)</code>：当前JSP页面的“this”，即当前对象</li><li><code>pageContext(PageContext)</code>：页面上下文对象，它是最后一个没讲的域对象</li><li><code>exception(Throwable)</code>：只有在错误页面中可以使用这个对象</li><li><code>request(HttpServletRequest)</code>：即HttpServletRequest类的对象（注意）</li><li><code>response(HttpServletResponse)</code>：即HttpServletResponse类的对象（注意）</li><li><code>application(ServletContext)</code>：即ServletContext类的对象（注意）</li><li><code>session(HttpSession)</code>：即HttpSession类的对象，不是每个JSP页面中都可以使用，如果在某个JSP页面中设置<code>&lt;%@page session=”false”%&gt;</code>，说明这个页面不能使用session</li></ul><p>使用情况</p><ul><li>极少使用：config、page、exception</li><li>不是每个JSP页面都可以使用：exception、session</li></ul></blockquote><h3 id="_2-2、pagecontext" tabindex="-1"><a class="header-anchor" href="#_2-2、pagecontext" aria-hidden="true">#</a> 2.2、pageContext</h3><blockquote><p>主要功能：</p><ul><li>域对象功能</li><li>代理其它域对象功能</li><li>获取其他内置对象</li></ul></blockquote><h4 id="_2-2-1、域对象功能" tabindex="-1"><a class="header-anchor" href="#_2-2-1、域对象功能" aria-hidden="true">#</a> 2.2.1、域对象功能</h4><blockquote><p>表示当前页面 和其他域对象一样，他们都有共同的方法：</p><ul><li><code>void setAttribute(String name, Object value)</code></li><li><code>Object getAttribute(String name)</code></li><li><code>void removeAttribute(String name)</code></li></ul></blockquote><div class="language-jsp ext-jsp line-numbers-mode"><pre class="language-jsp"><code>&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;测试Page域对象&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;%\n    \t//在page域中存放数据\n        pageContext.setAttribute(&quot;name&quot;, &quot;zhangsan&quot;);\n    %&gt;\n\n    &lt;%\n    \t//从page域中获取数据\n        System.out.println(pageContext.getAttribute(&quot;name&quot;));\n    %&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h4 id="_2-2-2、代理其他域对象" tabindex="-1"><a class="header-anchor" href="#_2-2-2、代理其他域对象" aria-hidden="true">#</a> 2.2.2、代理其他域对象</h4><blockquote><p>可以使用pageContext向request、session、application对象中存取数据，“一个顶四个”</p><p><code>void setAttribute(String name, Object value, int scope)</code>：在指定范围中添加数据</p><p><code>Object getAttribute(String name, int scope)</code>：获取指定范围的数据</p><p><code>void removeAttribute(String name, int scope)</code>：移除指定范围的数据</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>pageContext<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;x&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;X&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\npageContext<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;x&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;XX&quot;</span><span class="token punctuation">,</span> <span class="token class-name">PageContext</span><span class="token punctuation">.</span>REQUEST_SCOPE<span class="token punctuation">)</span><span class="token punctuation">;</span>\npageContext<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;x&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;XXX&quot;</span><span class="token punctuation">,</span> <span class="token class-name">PageContext</span><span class="token punctuation">.</span>SESSION_SCOPE<span class="token punctuation">)</span><span class="token punctuation">;</span>\npageContext<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;x&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;XXXX&quot;</span><span class="token punctuation">,</span> <span class="token class-name">PageContext</span><span class="token punctuation">.</span>APPLICATION_SCOPE<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><blockquote><p>创建Servlet</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>\n\n<span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;MServlet&quot;</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">&quot;/MServlet&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>\n        <span class="token comment">//获取Session</span>\n        <span class="token class-name">HttpSession</span> session <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">//在Session域中存放数据</span>\n        session<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;lisi&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>\n        <span class="token function">doGet</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><blockquote><p>创建测试的JSP</p></blockquote><div class="language-jsp ext-jsp line-numbers-mode"><pre class="language-jsp"><code>&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;Title&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;%\n        //通过page域从session中获取数据\n        Object name = pageContext.getAttribute(&quot;name&quot;, PageContext.SESSION_SCOPE);\n        System.out.println(name);\n    %&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><blockquote><p><code>Object findAttribute(String name)</code>：依次在<code>page、request、session、application</code>范围查找名称为name的数据，如果找到就停止查找。这说明在这个范围内有相同名称的数据，那么page范围的优先级最高</p></blockquote><div class="language-jsp ext-jsp line-numbers-mode"><pre class="language-jsp"><code>&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;\n    pageEncoding=&quot;UTF-8&quot;%&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;Insert title here&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\t&lt;%\n\t\n\t\tpageContext.setAttribute(&quot;key&quot;, &quot;page_value&quot;);\n\t\trequest.setAttribute(&quot;key&quot;, &quot;request_value&quot;);\n\t\tsession.setAttribute(&quot;key&quot;, &quot;session_value&quot;);\n\t\tapplication.setAttribute(&quot;key&quot;, &quot;app_value&quot;);\n\t%&gt;\n\t\n\t&lt;%\n    \t//全域查找\n\t\tString value = (String)pageContext.findAttribute(&quot;key&quot;);\n\t\tout.print(value);\n\t%&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h4 id="_2-2-3、获取其他内置对象" tabindex="-1"><a class="header-anchor" href="#_2-2-3、获取其他内置对象" aria-hidden="true">#</a> 2.2.3、获取其他内置对象</h4><blockquote><p>一个pageContext对象等于所有内置对象，即1个当9个。这是因为可以使用pageContext对象获取其它8个内置对象。</p><p><code>JspWriter getOut()</code>：获取out内置对象</p><p><code>ServletConfig getServletConfig()</code>：获取config内置对象</p><p><code>Object getPage()</code>：获取page内置对象</p><p><code>ServletRequest getRequest()</code>：获取request内置对象</p><p><code>ServletResponse getResponse()</code>：获取response内置对象</p><p><code>HttpSession getSession()</code>：获取session内置对象</p><p><code>ServletContext getServletContext()</code>：获取application内置对象</p><p><code>Exception getException()</code>：获取exception内置对象</p></blockquote><div class="language-jsp ext-jsp line-numbers-mode"><pre class="language-jsp"><code>&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;Title&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;%\n    \t//获取application对象\n        System.out.println(pageContext.getServletContext().getContextPath());\n    %&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="三、jsp动作标签-了解" tabindex="-1"><a class="header-anchor" href="#三、jsp动作标签-了解" aria-hidden="true">#</a> 三、JSP动作标签（了解）</h2><blockquote><p>动作标签的作用是用来简化Java脚本的，JSP动作标签是JavaWeb内置的动作标签，它们是已经定义好的动作标签，我们可以拿来直接使用。</p></blockquote><h3 id="_3-1、include标签" tabindex="-1"><a class="header-anchor" href="#_3-1、include标签" aria-hidden="true">#</a> 3.1、include标签</h3><blockquote><p>语法：<code>&lt;jsp:include page=&quot;相对URL地址&quot; /&gt;</code></p><p>作用：包含其它JSP页面</p><p>与include指令区别：</p><ul><li>include指令是在编译级别完成的包含，即把当前JSP和被包含的JSP合并成一个JSP，然后再编译成一个Servlet；</li><li>include动作标签是在运行级别完成的包含，即当前JSP和被包含的JSP都会各自生成Servlet，然后在执行当前JSP的Servlet时完成包含另一个JSP的Servlet。它与RequestDispatcher的include()方法是相同的。</li></ul><p>被包含的JSP：a.jsp</p></blockquote><div class="language-jsp ext-jsp line-numbers-mode"><pre class="language-jsp"><code>&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;Title&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;p&gt;11111111111&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><blockquote><p>b.jsp</p></blockquote><div class="language-jsp ext-jsp line-numbers-mode"><pre class="language-jsp"><code>&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;Title&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;jsp:include page=&quot;a.jsp&quot; /&gt;\n    &lt;p&gt;222222222222&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="_3-2、forward" tabindex="-1"><a class="header-anchor" href="#_3-2、forward" aria-hidden="true">#</a> 3.2、forward</h3><blockquote><p>forward标签的作用是请求转发！forward标签的作用与<code>RequestDispatcher.forward()</code>方法相同</p></blockquote><h2 id="四、el表达式" tabindex="-1"><a class="header-anchor" href="#四、el表达式" aria-hidden="true">#</a> 四、EL表达式</h2><h3 id="_4-1、概述" tabindex="-1"><a class="header-anchor" href="#_4-1、概述" aria-hidden="true">#</a> 4.1、概述</h3><blockquote><p>EL：Expression Language，表达式语言。在JSP页面中可以直接使用，从JSP2.0开始，代替JSP脚本，非Java开发人员也可以使用。</p></blockquote><h3 id="_4-2、el表达式使用" tabindex="-1"><a class="header-anchor" href="#_4-2、el表达式使用" aria-hidden="true">#</a> 4.2、EL表达式使用</h3><blockquote><ul><li>用于替换作用域对象<code>.getAttribute(&quot;name&quot;)</code>, 并将从域中获取的数据进行显示；</li><li>EL用来代替<code>&lt;%=...%&gt;</code>，<code>&lt;%=...%&gt;</code>代表输出。</li></ul></blockquote><h4 id="_4-2-1、el表达式应用-获取基本类型、字符串" tabindex="-1"><a class="header-anchor" href="#_4-2-1、el表达式应用-获取基本类型、字符串" aria-hidden="true">#</a> 4.2.1、EL表达式应用（获取基本类型、字符串）</h4><blockquote><p><code>${scope.name}</code>获取具体某个作用域中的数据；</p><p><code>${name}</code>获取作用域中的数据，逐级查找（pageContext、request、session、application）</p><p>EL和JSP脚本的区别</p><ul><li><code>&lt;%=request.getAttribute() %&gt;</code> 没有找到返回null</li><li><code>${requestScope.name}</code>没找到返回&quot;&quot;</li></ul></blockquote><div class="language-jsp ext-jsp line-numbers-mode"><pre class="language-jsp"><code>&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;el初步&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;%\n        //在request域总存放数据 String\n        pageContext.setAttribute(&quot;name&quot;, &quot;Bob&quot;);\n        request.setAttribute(&quot;name&quot;, &quot;Zhangsan&quot;);\n        request.setAttribute(&quot;age&quot;, 10);\n        session.setAttribute(&quot;name&quot;, &quot;Jim&quot;);\n        application.setAttribute(&quot;name&quot;, &quot;Lucy&quot;);\n    %&gt;\n\n    &lt;%-- 使用EL表达式获取某个域中的数据并在网页上显示\n        作用域 xxxScope\n     --%&gt;\n    &lt;p&gt;${requestScope.name}&lt;/p&gt;\n    &lt;p&gt;${requestScope.age}&lt;/p&gt;\n    &lt;hr/&gt;\n    &lt;%--\n        全域查找\n            如果没有限定xxxScope，会按照pageContext,request,session,application的顺序进行查找\n     --%&gt;\n    &lt;p&gt;${name}&lt;/p&gt;\n    &lt;hr/&gt;\n    &lt;%--\n        JSP脚本和EL表达式的区别\n     --%&gt;\n    &lt;p&gt;&lt;%=request.getAttribute(&quot;abc&quot;)%&gt;&lt;/p&gt;\n    &lt;p&gt;${requestScope.abc}&lt;/p&gt;\n    &lt;hr/&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><h4 id="_4-2-2、el表达式应用-获取引用类型" tabindex="-1"><a class="header-anchor" href="#_4-2-2、el表达式应用-获取引用类型" aria-hidden="true">#</a> 4.2.2、EL表达式应用（获取引用类型）</h4><blockquote><p>使用EL获取作用域中的对象调用属性时，只能访问对象的get方法，必须遵守命名规范定义</p><p>创建实体类</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**\n * 表示Person的实体类\n */</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token class-name">Integer</span> id<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token class-name">Integer</span> age<span class="token punctuation">;</span>\n\n\t<span class="token comment">//set,get</span>\n    <span class="token comment">//toString</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><blockquote><p>EL表达式演示</p></blockquote><div class="language-jsp ext-jsp line-numbers-mode"><pre class="language-jsp"><code>&lt;%@ page import=&quot;com.qf.entity.Person&quot; %&gt;\n&lt;%@ page import=&quot;java.util.List&quot; %&gt;\n&lt;%@ page import=&quot;java.util.ArrayList&quot; %&gt;\n&lt;%@ page import=&quot;java.util.Map&quot; %&gt;\n&lt;%@ page import=&quot;java.util.HashMap&quot; %&gt;\n&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;el表达式处理复杂类型&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;%\n        Person p = new Person();\n        p.setId(100);\n        p.setName(&quot;Tom&quot;);\n        p.setAge(20);\n\n        Person p1 = new Person();\n        p1.setId(200);\n        p1.setName(&quot;zs&quot;);\n        p1.setAge(21);\n        //将Person对象存放在域当中\n        request.setAttribute(&quot;person&quot;, p);\n\n        int[] arr = {1, 2, 100, 50};\n        request.setAttribute(&quot;arr&quot;, arr);\n\n        List&lt;String&gt; names = new ArrayList&lt;&gt;();\n        names.add(&quot;zs&quot;);\n        names.add(&quot;ls&quot;);\n        names.add(&quot;ww&quot;);\n        request.setAttribute(&quot;names&quot;, names);\n\n        List&lt;Person&gt; persons = new ArrayList&lt;&gt;();\n        persons.add(p);\n        persons.add(p1);\n        request.setAttribute(&quot;persons&quot;, persons);\n\n        Map&lt;String, Object&gt; map = new HashMap&lt;&gt;();\n        map.put(&quot;name&quot;, &quot;zs&quot;);\n        map.put(&quot;addr&quot;, &quot;qd&quot;);\n        request.setAttribute(&quot;map&quot;, map);\n    %&gt;\n    &lt;%--\n        通过EL表达式在页面上显示对象中的属性\n        前提：属性要有对应的set和get方法\n     --%&gt;\n    &lt;p&gt;${requestScope.person.id}&lt;/p&gt;\n    &lt;p&gt;${requestScope.person.name}&lt;/p&gt;\n    &lt;p&gt;${requestScope.person.age}&lt;/p&gt;\n    &lt;hr/&gt;\n    &lt;%--\n        int[]\n            1 2 100 1000\n        List&lt;String&gt;\n            &quot;111&quot; &quot;222&quot; &quot;333&quot;\n        List&lt;Person&gt;\n        Map&lt;String, Object&gt;\n    --%&gt;\n    &lt;%--\n        通过EL表达式在页面上显示数组中的元素\n    --%&gt;\n    &lt;p&gt;${requestScope.arr[3]}&lt;/p&gt;\n    &lt;hr/&gt;\n    &lt;%--\n        通过EL表达式在页面上显示集合中的元素，集合中存放的是简单类型（基本数据类型 + String）\n    --%&gt;\n    &lt;p&gt;${names[2]}&lt;/p&gt;\n    &lt;hr/&gt;\n\n    &lt;%--\n        通过EL表达式在页面上显示集合(List, Map)中的元素，集合中存放的是复杂类型（除了String类型之外的引用数据类型）\n    --%&gt;\n    &lt;p&gt;${persons[0].id}&lt;/p&gt;\n    &lt;p&gt;${persons[0].name}&lt;/p&gt;\n    &lt;p&gt;${persons[0].age}&lt;/p&gt;\n    &lt;hr/&gt;\n    &lt;p&gt;${map.name}&lt;/p&gt;\n    &lt;p&gt;${map.addr}&lt;/p&gt;\n    &lt;p&gt;${map[&quot;addr&quot;]}&lt;/p&gt;\n    &lt;hr/&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br></div></div><h3 id="_4-3、el表达式运算符" tabindex="-1"><a class="header-anchor" href="#_4-3、el表达式运算符" aria-hidden="true">#</a> 4.3、EL表达式运算符</h3><blockquote><table><thead><tr><th style="text-align:left;"><strong>操作符</strong></th><th style="text-align:left;"><strong>描述</strong></th></tr></thead><tbody><tr><td style="text-align:left;">.</td><td style="text-align:left;">访问一个Bean属性或者一个映射条目</td></tr><tr><td style="text-align:left;">[]</td><td style="text-align:left;">访问一个数组或者集合的元素</td></tr><tr><td style="text-align:left;">+</td><td style="text-align:left;">加</td></tr><tr><td style="text-align:left;">-</td><td style="text-align:left;">减或负</td></tr><tr><td style="text-align:left;">*</td><td style="text-align:left;">乘</td></tr><tr><td style="text-align:left;">/ or div</td><td style="text-align:left;">除</td></tr><tr><td style="text-align:left;">% or mod</td><td style="text-align:left;">取模</td></tr><tr><td style="text-align:left;">== or eq</td><td style="text-align:left;">测试是否相等</td></tr><tr><td style="text-align:left;">!= or ne</td><td style="text-align:left;">测试是否不等</td></tr><tr><td style="text-align:left;">&lt; or lt</td><td style="text-align:left;">测试是否小于</td></tr><tr><td style="text-align:left;">&gt; or gt</td><td style="text-align:left;">测试是否大于</td></tr><tr><td style="text-align:left;">&lt;= or le</td><td style="text-align:left;">测试是否小于等于</td></tr><tr><td style="text-align:left;">&gt;= or ge</td><td style="text-align:left;">测试是否大于等于</td></tr><tr><td style="text-align:left;">&amp;&amp; or and</td><td style="text-align:left;">测试逻辑与</td></tr><tr><td style="text-align:left;">|| or or</td><td style="text-align:left;">测试逻辑或</td></tr><tr><td style="text-align:left;">! or not</td><td style="text-align:left;">测试取反</td></tr><tr><td style="text-align:left;">empty</td><td style="text-align:left;">测试是否空值</td></tr></tbody></table></blockquote><div class="language-jsp ext-jsp line-numbers-mode"><pre class="language-jsp"><code>&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;el_运算符&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;%\n        request.setAttribute(&quot;num&quot;, 15);\n        request.setAttribute(&quot;name&quot;, &quot;&quot;);\n    %&gt;\n\n    &lt;%-- el运算符 --%&gt;\n    &lt;p&gt;${num + 1}&lt;/p&gt;\n    &lt;p&gt;${num - 1}&lt;/p&gt;\n    &lt;p&gt;${num * 10}&lt;/p&gt;\n    &lt;p&gt;${num / 10}&lt;/p&gt;\n    &lt;p&gt;${num div 10}&lt;/p&gt;\n    &lt;p&gt;${num % 3}&lt;/p&gt;\n    &lt;p&gt;${num mod 3}&lt;/p&gt;\n    &lt;hr/&gt;\n    &lt;p&gt;${num == 15}&lt;/p&gt;\n    &lt;p&gt;${num eq 15}&lt;/p&gt; &lt;%-- eq equals --%&gt;\n    &lt;p&gt;${num != 15}&lt;/p&gt;\n    &lt;p&gt;${num ne 15}&lt;/p&gt;&lt;%-- ne not equals --%&gt;\n    &lt;p&gt;${num lt 20}&lt;/p&gt;&lt;%-- lt less than --%&gt;\n    &lt;p&gt;${num gt 20}&lt;/p&gt;&lt;%-- gt great than --%&gt;\n    &lt;hr/&gt;\n    &lt;p&gt;${true or false}&lt;/p&gt;\n    &lt;hr/&gt;\n    &lt;p&gt;${empty name}&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><blockquote><p>关于<code>empty</code>关键字</p></blockquote><div class="language-jsp ext-jsp line-numbers-mode"><pre class="language-jsp"><code>&lt;% \n\tString s1=&quot;&quot;;\n    pageContext.setAttribute(&quot;s1&quot;, s1);\n    String s2=null;\n    pageContext.setAttribute(&quot;s2&quot;, s2);\n    String s3=&quot;abcdefg&quot;;\n    pageContext.setAttribute(&quot;s3&quot;, s3);\n    List list1 = new ArrayList();\n    pageContext.setAttribute(&quot;list1&quot;, list1);\n%&gt;\n&lt;!-- empty关键只要内容是&quot;空&quot;就返回true --&gt;\n${empty s1}&lt;br&gt;\n${empty s2}&lt;br&gt;\n${empty s3}&lt;br&gt;\n${empty list1}&lt;br&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="_4-4、el的隐式对象" tabindex="-1"><a class="header-anchor" href="#_4-4、el的隐式对象" aria-hidden="true">#</a> 4.4、EL的隐式对象</h3><blockquote><p>EL 表达式语言定义了11个隐式对象</p><table><thead><tr><th style="text-align:left;"><strong>隐含对象</strong></th><th style="text-align:left;"><strong>描述</strong></th></tr></thead><tbody><tr><td style="text-align:left;">pageScope</td><td style="text-align:left;">page作用域</td></tr><tr><td style="text-align:left;">requestScope</td><td style="text-align:left;">request作用域</td></tr><tr><td style="text-align:left;">sessionScope</td><td style="text-align:left;">session作用域</td></tr><tr><td style="text-align:left;">applicationScope</td><td style="text-align:left;">application作用域</td></tr><tr><td style="text-align:left;">param</td><td style="text-align:left;">request对象的参数，字符串</td></tr><tr><td style="text-align:left;">paramValues</td><td style="text-align:left;">request对象的参数，字符串集合</td></tr><tr><td style="text-align:left;">header</td><td style="text-align:left;">HTTP信息头，字符串</td></tr><tr><td style="text-align:left;">headerValues</td><td style="text-align:left;">HTTP信息头，字符串集合</td></tr><tr><td style="text-align:left;">initParam</td><td style="text-align:left;">上下文初始化参数</td></tr><tr><td style="text-align:left;">cookie</td><td style="text-align:left;">Cookie值</td></tr><tr><td style="text-align:left;">pageContext</td><td style="text-align:left;">当前页面的pageContext域对象</td></tr></tbody></table></blockquote><div class="language-jsp ext-jsp line-numbers-mode"><pre class="language-jsp"><code>&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;Title&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;%--\n        访问服务器某个位置的时候\n        协议://主机名:端口  http://localhost:8080\n        项目名：在实际开发中不能写死 - “动”\n        资源的位置\n    --%&gt;\n    &lt;%--&lt;a href=&quot;/el_jstl/loginServlet?username=bob&quot;&gt;登录&lt;/a&gt;--%&gt;\n    &lt;a href=&quot;${pageContext.request.contextPath}/loginServlet?username=bob&quot;&gt;登录&lt;/a&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><blockquote><p>使用EL表达式修改登录案例</p><p>login.jsp</p></blockquote><div class="language-jsp ext-jsp line-numbers-mode"><pre class="language-jsp"><code>&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;登录&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;%\n    String errorMsg = (String)request.getAttribute(&quot;errorMsg&quot;);\n    if(errorMsg != null) {\n%&gt;\n    &lt;p style=&quot;color: red;&quot;&gt;${errorMsg}&lt;/p&gt;\n&lt;%\n    }\n%&gt;\n&lt;form action=&quot;${pageContext.request.contextPath}/LoginServlet&quot; method=&quot;post&quot;&gt;\n    &lt;fieldset style=&quot;width: 300px;&quot;&gt;\n        &lt;legend&gt;用户登录&lt;/legend&gt;\n        &lt;p&gt;\n            &lt;label&gt;账号&lt;/label&gt;\n            &lt;input type=&quot;text&quot; name=&quot;username&quot; placeholder=&quot;请输入用户名&quot; /&gt;\n        &lt;/p&gt;\n        &lt;p&gt;\n            &lt;label&gt;密码&lt;/label&gt;\n            &lt;input type=&quot;password&quot; name=&quot;password&quot; placeholder=&quot;请输入密码&quot; /&gt;\n        &lt;/p&gt;\n        &lt;p&gt;\n            &lt;label&gt;验证码&lt;/label&gt;\n            &lt;input type=&quot;text&quot; name=&quot;code&quot; placeholder=&quot;请输入验证码&quot; /&gt;\n            &lt;img src=&quot;${pageContext.request.contextPath}/CodeServlet&quot; alt=&quot;验证码&quot;&gt;\n        &lt;/p&gt;\n        &lt;p&gt;\n            &lt;button type=&quot;submit&quot;&gt;登录&lt;/button&gt;\n            &lt;button type=&quot;reset&quot;&gt;重置&lt;/button&gt;\n        &lt;/p&gt;\n    &lt;/fieldset&gt;\n&lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><blockquote><p>success.jsp</p></blockquote><div class="language-jsp ext-jsp line-numbers-mode"><pre class="language-jsp"><code>&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;success&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;%\n        String username = (String) session.getAttribute(&quot;username&quot;);\n        if(username != null) {\n    %&gt;\n    &lt;p&gt;欢迎${username}&lt;/p&gt;\n    &lt;p&gt;&lt;a href=&quot;${pageContext.request.contextPath}/LogoutServlet&quot;&gt;注销&lt;/a&gt;&lt;/p&gt;\n    &lt;%\n        } else {\n    %&gt;\n    &lt;p&gt;您还没有登录，请先&lt;a href=&quot;${pageContext.request.contextPath}/login.jsp&quot;&gt;登录&lt;/a&gt;&lt;/p&gt;\n    &lt;%\n        }\n    %&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h2 id="五、jstl" tabindex="-1"><a class="header-anchor" href="#五、jstl" aria-hidden="true">#</a> 五、JSTL</h2><h3 id="_5-1、目前存在的问题" tabindex="-1"><a class="header-anchor" href="#_5-1、目前存在的问题" aria-hidden="true">#</a> 5.1、目前存在的问题</h3><blockquote><p>EL主要是用于作用域获取数据，虽然可以做运算判断，但是得到的都是一个结果，做展示；</p><p>EL不存在流程控制。比如判断；</p><p>EL对于集合只能做单点访问，不能实现遍历操作。比如循环。</p></blockquote><h3 id="_5-2、什么是jstl" tabindex="-1"><a class="header-anchor" href="#_5-2、什么是jstl" aria-hidden="true">#</a> 5.2、什么是JSTL</h3><blockquote><p>JSTL是apache对EL表达式的扩展（也就是说JSTL依赖EL），JSTL是标签语言;</p><p>不是JSP的内置标签，使用时需要导包</p></blockquote><h3 id="_5-3、jstl的作用" tabindex="-1"><a class="header-anchor" href="#_5-3、jstl的作用" aria-hidden="true">#</a> 5.3、JSTL的作用</h3><blockquote><p>可对EL获取到的数据进行逻辑操作；</p><p>与EL合作完成数据的展示。</p></blockquote><h3 id="_5-4、如何使用jstl" tabindex="-1"><a class="header-anchor" href="#_5-4、如何使用jstl" aria-hidden="true">#</a> 5.4、如何使用JSTL</h3><blockquote><ol><li>导入Jar包，standard.jar 和 jstl.jar；</li><li>在JSP页面引入标签库<code>&lt;% @taglib uri=&quot;http://java.sun.com/jsp/jstl/core&quot; prefix=&quot;c&quot;&gt;</code></li></ol></blockquote><h3 id="_5-5、jstl核心标签" tabindex="-1"><a class="header-anchor" href="#_5-5、jstl核心标签" aria-hidden="true">#</a> 5.5、JSTL核心标签</h3><h4 id="_5-5-1、输入输出" tabindex="-1"><a class="header-anchor" href="#_5-5-1、输入输出" aria-hidden="true">#</a> 5.5.1、输入输出</h4><blockquote><p>out标签</p><ul><li>value：可以是字符串常量，也可以是EL表达式</li><li>default：当要输出的内容为null时，会输出default指定的值</li></ul></blockquote><div class="language-jsp ext-jsp line-numbers-mode"><pre class="language-jsp"><code>&lt;!-- 输出字符串aaa --&gt;\n&lt;c:out value=&quot;aaa&quot;/&gt; \n&lt;!-- 输出域属性aaa，其中与${aaa}相同 --&gt;\n&lt;c:out value=&quot;${aaa}&quot;/&gt; \n&lt;!-- 如果${aaa}不存在，那么输出xxx字符串 --&gt;\n&lt;c:out value=&quot;${aaa}&quot; default=&quot;xxx&quot;/&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><blockquote><p>set标签</p></blockquote><div class="language-jsp ext-jsp line-numbers-mode"><pre class="language-jsp"><code>&lt;!-- 创建名为a,值为hello的域属性，范围：pageContext --&gt;\n&lt;c:set var=&quot;a&quot; value=&quot;hello&quot;/&gt; \n&lt;!-- 范围为session --&gt;\n&lt;c:set var=&quot;a&quot; value=&quot;hello&quot; scope=&quot;session&quot;/&gt; \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><blockquote><p>remove标签</p></blockquote><div class="language-jsp ext-jsp line-numbers-mode"><pre class="language-jsp"><code>&lt;!-- 删除名为a的域属性 --&gt;\n&lt;c:remove var=&quot;a&quot;/&gt; \n&lt;!-- 删除page域中名为a的域属性 --&gt;\n&lt;c:remove var=&quot;a&quot; scope=&quot;page&quot;/&gt; \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><blockquote><p>案例</p></blockquote><div class="language-jsp ext-jsp line-numbers-mode"><pre class="language-jsp"><code>&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;\n&lt;%@ taglib prefix=&quot;c&quot; uri=&quot;http://java.sun.com/jsp/jstl/core&quot; %&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;jstl输入输出&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;%--\n        JSTL\n        增强EL表达式的功能，实现复杂的逻辑操作\n     --%&gt;\n    &lt;%-- 输出 --%&gt;\n    &lt;p&gt;&lt;c:out value=&quot;hello world&quot;/&gt;&lt;/p&gt;\n    &lt;p&gt;hello world&lt;/p&gt;\n    &lt;hr/&gt;\n    &lt;%-- 定义变量\n        int age = 10;\n        在域对象中存放数据，默认在page域中存放\n        scope:指定数据存放在哪个域中\n     --%&gt;\n    &lt;c:set var=&quot;name&quot; value=&quot;Zhangsan&quot; /&gt;\n    &lt;p&gt;${pageScope.name}&lt;/p&gt;\n\n    &lt;c:set var=&quot;age&quot; value=&quot;10&quot; scope=&quot;application&quot; /&gt;\n    &lt;p&gt;${age}&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h4 id="_5-5-2、分支结构" tabindex="-1"><a class="header-anchor" href="#_5-5-2、分支结构" aria-hidden="true">#</a> 5.5.2、分支结构</h4><blockquote><p>if标签</p></blockquote><div class="language-jsp ext-jsp line-numbers-mode"><pre class="language-jsp"><code>&lt;!-- 当条件为true时执行标签体内容 --&gt;\n&lt;c:if test=&quot;${条件}&quot;&gt; \n    hello\n&lt;/c:if&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><blockquote><p>choose标签</p></blockquote><div class="language-jsp ext-jsp line-numbers-mode"><pre class="language-jsp"><code>&lt;!--\n\t等同于：\n        if() {\n        } esle if() {\n        } esle if() {\n        } else if() {\n        } else {\n        }\n--&gt;\n&lt;c:choose&gt;\n    &lt;c:when test=&quot;${条件1}&quot;&gt;a&lt;/c:when&gt;\n    &lt;c:when test=&quot;${条件2}&quot;&gt;b&lt;/c:when&gt;\n    &lt;c:when test=&quot;${条件3}&quot;&gt;c&lt;/c:when&gt;\n    &lt;c:otherwise&gt;d&lt;/c:otherwise&gt;\n&lt;/c:choose&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><blockquote><p>案例</p></blockquote><div class="language-jsp ext-jsp line-numbers-mode"><pre class="language-jsp"><code>&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;\n&lt;%@ taglib prefix=&quot;c&quot; uri=&quot;http://java.sun.com/jsp/jstl/core&quot; %&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;jstl分支结构&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;!--\n        if...else\n            if() {\n            }\n\n            if() {\n            } else {\n            }\n\n            if() {\n            } else if(){\n            } else if() {\n            } else {\n            }\n        使用JSTL实现分支结构\n    --&gt;\n    &lt;c:set var=&quot;num&quot; value=&quot;10&quot; /&gt;\n    &lt;c:if test=&quot;${num gt 2}&quot;&gt;\n        ${num}大于2是成立的\n    &lt;/c:if&gt;\n    &lt;hr/&gt;\n\n    &lt;%-- 判断是否及格 --%&gt;\n    &lt;c:set var=&quot;score&quot; value=&quot;80&quot; /&gt;\n    &lt;c:choose&gt;\n        &lt;c:when test=&quot;${score &gt;= 60}&quot;&gt;\n            &lt;p&gt;及格&lt;/p&gt;\n        &lt;/c:when&gt;\n        &lt;c:otherwise&gt;\n            &lt;p&gt;不及格&lt;/p&gt;\n        &lt;/c:otherwise&gt;\n    &lt;/c:choose&gt;\n    &lt;hr/&gt;\n    &lt;c:choose&gt;\n        &lt;c:when test=&quot;${score &gt;= 80}&quot;&gt;\n            &lt;p&gt;优秀&lt;/p&gt;\n        &lt;/c:when&gt;\n        &lt;c:when test=&quot;${score &gt;= 70}&quot;&gt;\n            &lt;p&gt;良好&lt;/p&gt;\n        &lt;/c:when&gt;\n        &lt;c:when test=&quot;${score &gt;= 60}&quot;&gt;\n            &lt;p&gt;及格&lt;/p&gt;\n        &lt;/c:when&gt;\n        &lt;c:otherwise&gt;\n            &lt;p&gt;不及格&lt;/p&gt;\n        &lt;/c:otherwise&gt;\n    &lt;/c:choose&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br></div></div><h4 id="_5-5-3、循环结构" tabindex="-1"><a class="header-anchor" href="#_5-5-3、循环结构" aria-hidden="true">#</a> 5.5.3、循环结构</h4><blockquote><p>forEach标签</p></blockquote><div class="language-jsp ext-jsp line-numbers-mode"><pre class="language-jsp"><code>&lt;!-- \n    var：循环变量\n    begin：设置循环变量从几开始。\n    end：设置循环变量到几结束。\n    step：设置步长！等同与java中的i++，或i+=2。step默认为1\n--&gt;\n&lt;c:forEach var=&quot;i&quot; begin=&quot;1&quot; end=&quot;10&quot; step=&quot;1&quot;&gt;\n    ${i}\n&lt;/c:forEach&gt;\n\n\n&lt;!--\n\t用来输出数组、集合\n    items：指定要循环谁，它可以是一个数组或一个集合\n    var：把数组或集合中的每个元素赋值给var指定的变量\n\n\t可以使用varStatus来创建循环状态变量\n\t\tcount：循环元素的个数\n        index：循环元素的下标\n        first：是否为第一个元素\n        last：是否为最后一个元素\n        current：当前元素\n--&gt;\n&lt;c:forEach items=&quot;${strs }&quot; var=&quot;str&quot;&gt;\n    ${str }&lt;br/&gt;\n&lt;/c:forEach&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><blockquote><p>案例</p></blockquote><div class="language-jsp ext-jsp line-numbers-mode"><pre class="language-jsp"><code>&lt;%@ page import=&quot;java.util.List&quot; %&gt;\n&lt;%@ page import=&quot;java.util.ArrayList&quot; %&gt;\n&lt;%@ page import=&quot;com.qf.entity.Person&quot; %&gt;\n&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;\n&lt;%@ taglib prefix=&quot;c&quot; uri=&quot;http://java.sun.com/jsp/jstl/core&quot; %&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;JSTL循环结构&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;%--\n        循环 - 反复做某件事情\n        1.输出1 2 3 ... 5\n        for(int i = 1; i &lt;= 5; i++) {\n            System.out.println(i);\n        }\n    --%&gt;\n    &lt;c:forEach var=&quot;i&quot; begin=&quot;1&quot; end=&quot;5&quot; step=&quot;1&quot;&gt;\n        &lt;p&gt;${i}&lt;/p&gt;\n    &lt;/c:forEach&gt;\n    &lt;hr/&gt;\n\n    &lt;%--\n        1+2+3+...+100\n\n        int sum = 0;\n        for(int i = 1; i &lt;= 100; i++) {\n            sum = sum + i;\n        }\n        System.out.println(sum);\n\n        2+4+6+8+...+100\n    --%&gt;\n    &lt;c:set var=&quot;sum&quot; value=&quot;0&quot; /&gt;\n    &lt;c:forEach var=&quot;i&quot; begin=&quot;2&quot; end=&quot;100&quot; step=&quot;2&quot;&gt;\n        &lt;c:set var=&quot;sum&quot; value=&quot;${sum + i}&quot; /&gt;\n    &lt;/c:forEach&gt;\n    &lt;p&gt;${sum}&lt;/p&gt;\n    &lt;hr/&gt;\n\n    &lt;%-- 通过jstl遍历一个集合,在h1标题中显示\n        假设集合从servlet中保存到request域中，然后转发到该页面\n     --%&gt;\n    &lt;%\n        List&lt;String&gt; list = new ArrayList&lt;&gt;();\n        list.add(&quot;1111&quot;);\n        list.add(&quot;2222&quot;);\n        list.add(&quot;333&quot;);\n        list.add(&quot;******&quot;);\n\n        request.setAttribute(&quot;list&quot;, list);\n    %&gt;\n    &lt;%--\n        items:表示被遍历的集合\n        var:每一次被遍历到的元素\n\n        int[] arr = {1, 2, 3};\n        for(int i : arr) {\n\n        }\n    --%&gt;\n    &lt;c:forEach items=&quot;${list}&quot; var=&quot;item&quot;&gt;\n        &lt;h1&gt;${item}&lt;/h1&gt;\n    &lt;/c:forEach&gt;\n\n    &lt;hr/&gt;\n    &lt;%\n        //模拟\n        List&lt;Person&gt; persons = new ArrayList&lt;&gt;();\n        Person p = new Person();\n        p.setId(100);\n        p.setName(&quot;Tom&quot;);\n        p.setAge(20);\n\n        Person p1 = new Person();\n        p1.setId(200);\n        p1.setName(&quot;zs&quot;);\n        p1.setAge(21);\n\n        persons.add(p);\n        persons.add(p1);\n\n        request.setAttribute(&quot;persons&quot;, persons);\n        //emp\n    %&gt;\n\n    &lt;table border=&quot;1&quot;&gt;\n        &lt;tr&gt;\n            &lt;th&gt;id&lt;/th&gt;\n            &lt;th&gt;name&lt;/th&gt;\n            &lt;th&gt;age&lt;/th&gt;\n            &lt;th colspan=&quot;2&quot;&gt;opt&lt;/th&gt;\n        &lt;/tr&gt;\n        &lt;c:forEach items=&quot;${persons}&quot; var=&quot;p&quot;&gt;\n            &lt;tr&gt;\n                &lt;td&gt;${p.id}&lt;/td&gt;\n                &lt;td&gt;${p.name}&lt;/td&gt;\n                &lt;td&gt;${p.age}&lt;/td&gt;\n                &lt;td&gt;&lt;a href=&quot;${pageContext.request.contextPath}/xxxServlet?id=${p.id}&quot;&gt;修改&lt;/a&gt;&lt;/td&gt;\n                &lt;td&gt;&lt;a href=&quot;${pageContext.request.contextPath}/aaaServlet?id=${p.id}&quot;&gt;删除&lt;/a&gt;&lt;/td&gt;\n            &lt;/tr&gt;\n        &lt;/c:forEach&gt;\n    &lt;/table&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br></div></div><h3 id="_5-6、登录案例升级" tabindex="-1"><a class="header-anchor" href="#_5-6、登录案例升级" aria-hidden="true">#</a> 5.6、登录案例升级</h3><blockquote><p>修改login.jsp</p></blockquote><div class="language-jsp ext-jsp line-numbers-mode"><pre class="language-jsp"><code>&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;\n&lt;%@ taglib prefix=&quot;c&quot; uri=&quot;http://java.sun.com/jsp/jstl/core&quot; %&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;登录&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;p style=&quot;color: red;&quot;&gt;${errorMsg}&lt;/p&gt;\n&lt;form action=&quot;${pageContext.request.contextPath}/LoginServlet&quot; method=&quot;post&quot;&gt;\n    &lt;fieldset style=&quot;width: 300px;&quot;&gt;\n        &lt;legend&gt;用户登录&lt;/legend&gt;\n        &lt;p&gt;\n            &lt;label&gt;账号&lt;/label&gt;\n            &lt;input type=&quot;text&quot; name=&quot;username&quot; placeholder=&quot;请输入用户名&quot; /&gt;\n        &lt;/p&gt;\n        &lt;p&gt;\n            &lt;label&gt;密码&lt;/label&gt;\n            &lt;input type=&quot;password&quot; name=&quot;password&quot; placeholder=&quot;请输入密码&quot; /&gt;\n        &lt;/p&gt;\n        &lt;p&gt;\n            &lt;label&gt;验证码&lt;/label&gt;\n            &lt;input type=&quot;text&quot; name=&quot;code&quot; placeholder=&quot;请输入验证码&quot; /&gt;\n            &lt;img src=&quot;${pageContext.request.contextPath}/CodeServlet&quot; alt=&quot;验证码&quot;&gt;\n        &lt;/p&gt;\n        &lt;p&gt;\n            &lt;button type=&quot;submit&quot;&gt;登录&lt;/button&gt;\n            &lt;button type=&quot;reset&quot;&gt;重置&lt;/button&gt;\n        &lt;/p&gt;\n    &lt;/fieldset&gt;\n&lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><blockquote><p>修改success.jsp</p></blockquote><div class="language-jsp ext-jsp line-numbers-mode"><pre class="language-jsp"><code>&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;\n&lt;%@ taglib prefix=&quot;c&quot; uri=&quot;http://java.sun.com/jsp/jstl/core&quot; %&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;success&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;c:choose&gt;\n        &lt;c:when test=&quot;${not empty username}&quot;&gt;\n            &lt;p&gt;欢迎${username}&lt;/p&gt;\n            &lt;p&gt;&lt;a href=&quot;${pageContext.request.contextPath}/LogoutServlet&quot;&gt;注销&lt;/a&gt;&lt;/p&gt;\n        &lt;/c:when&gt;\n        &lt;c:otherwise&gt;\n            &lt;p&gt;您还没有登录，请先&lt;a href=&quot;${pageContext.request.contextPath}/login.jsp&quot;&gt;登录&lt;/a&gt;&lt;/p&gt;\n        &lt;/c:otherwise&gt;\n    &lt;/c:choose&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h3 id="_5-7、mvc设计模式" tabindex="-1"><a class="header-anchor" href="#_5-7、mvc设计模式" aria-hidden="true">#</a> 5.7、MVC设计模式</h3><h4 id="_5-7-1、经典的mvc" tabindex="-1"><a class="header-anchor" href="#_5-7-1、经典的mvc" aria-hidden="true">#</a> 5.7.1、经典的MVC</h4><blockquote><p>MVC是软件工程中的一种架构模式，是一种软件设计思想，将数据操作、页面展示、业务逻辑分为三个层级（模块），独立完成，相互调用 ，MVC并不是Java独有的，现在几乎所有的B/S的架构都采用了MVC模式，三个层级如下：</p><ul><li>视图View：视图即是用户看到并与之交互的界面，比如HTML（静态资源），JSP（动态资源）等等；</li><li>控制器Controller：控制器即是控制请求的处理逻辑，对请求进行处理，负责流程跳转(转发和重定向)；</li><li>模型Model：对客观世界的一种代表和模拟(业务模拟、对象模拟)。</li></ul><p>优点：</p><ul><li>低耦合性：模块与模块之间的关联性不强，不与某一种具体实现产生密不可分的关联性；</li><li>高维护性：基于低耦合性，可做到不同层级的功能模块灵活更换、插拔；</li><li>高重用性：相同的数据库操作，可以服务于不同的业务处理。将数据作为独立模块，提高重用性。</li></ul></blockquote><h4 id="_5-7-2、javaweb经典三层框架" tabindex="-1"><a class="header-anchor" href="#_5-7-2、javaweb经典三层框架" aria-hidden="true">#</a> 5.7.2、JavaWeb经典三层框架</h4><blockquote><p>WEB层：包含JSP和Servlet等与WEB相关的内容</p><p>业务层：业务层中不包含JavaWeb API，它只关心业务逻辑</p><p>数据层：封装了对数据库的访问细节，进行最细粒度的增删改查的操作</p></blockquote><p><img src="'+t+'" alt="image-20210909162304967"></p><blockquote><p>调用关系：web层调用---业务层(Service)---数据层(Dao)---DB</p><ul><li>业务处理从前到后</li><li>开发时要从后向前进行</li></ul><p>关于业务：</p><ul><li>转账</li><li>对DAO层方法的组合</li></ul><p>注意：</p><ul><li>业务层(Service)不要出现Java Web API，业务层代码是可重用的，甚至可以应用到非Web环境中；</li><li>业务层不要出现JDBC相关的API；</li><li>JavaBean作为实体类贯穿web层、业务层、数据层，各层之间通过JavaBean或者JavaBean的组合进行数据交互。</li></ul></blockquote><h4 id="_5-7-3、基于javaweb三层架构升级登录案例" tabindex="-1"><a class="header-anchor" href="#_5-7-3、基于javaweb三层架构升级登录案例" aria-hidden="true">#</a> 5.7.3、基于JavaWeb三层架构升级登录案例</h4><blockquote><p>准备工作：</p><ul><li>建库建表</li><li>新建项目</li><li>拷贝Jar包到项目的WEB-INF发lib目录下</li><li>准备jdbc配置文件，放置在src下</li><li>JdbcUtils工具类放在utils包下。</li></ul></blockquote><h5 id="_5-7-3-1、建库建表" tabindex="-1"><a class="header-anchor" href="#_5-7-3-1、建库建表" aria-hidden="true">#</a> 5.7.3.1、建库建表</h5><blockquote><p>SQL语句如下</p></blockquote><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> webtest<span class="token punctuation">;</span>\n<span class="token keyword">USE</span> webtest<span class="token punctuation">;</span>\n\n<span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> <span class="token keyword">user</span><span class="token punctuation">;</span>\n<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">user</span>  <span class="token punctuation">(</span>\n  id <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>\n  username <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  password <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>id<span class="token punctuation">)</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token keyword">user</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;zhangsan&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;123456&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token keyword">user</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;lisi&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;123456&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><blockquote><p>对应的实体类User</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token class-name">Integer</span> id<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> username<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span>\n    \n    <span class="token comment">//set和get</span>\n    <span class="token comment">//toString</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h5 id="_5-7-3-2、dao层" tabindex="-1"><a class="header-anchor" href="#_5-7-3-2、dao层" aria-hidden="true">#</a> 5.7.3.2、Dao层</h5><blockquote><p>Dao层接口</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>qfedu<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">User</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">SQLException</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserDao</span> <span class="token punctuation">{</span>\n    <span class="token class-name">User</span> <span class="token function">findByUsernameAndPassword</span><span class="token punctuation">(</span><span class="token class-name">String</span> username<span class="token punctuation">,</span> <span class="token class-name">String</span> password<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SQLException</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><blockquote><p>Dao层接口实现类</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>qfedu<span class="token punctuation">.</span>dao<span class="token punctuation">.</span></span><span class="token class-name">UserDao</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>qfedu<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">User</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>qfedu<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span><span class="token class-name">JdbcUtils</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>dbutils<span class="token punctuation">.</span></span><span class="token class-name">QueryRunner</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>dbutils<span class="token punctuation">.</span>handlers<span class="token punctuation">.</span></span><span class="token class-name">BeanHandler</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">SQLException</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserDaoImpl</span> <span class="token keyword">implements</span> <span class="token class-name">UserDao</span> <span class="token punctuation">{</span>\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token class-name">User</span> <span class="token function">findByUsernameAndPassword</span><span class="token punctuation">(</span><span class="token class-name">String</span> username<span class="token punctuation">,</span> <span class="token class-name">String</span> password<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SQLException</span> <span class="token punctuation">{</span>\n        <span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">&quot;select * from user where username=? and password=?&quot;</span><span class="token punctuation">;</span>\n        <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> params <span class="token operator">=</span> <span class="token punctuation">{</span>username<span class="token punctuation">,</span> password<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n        <span class="token class-name">QueryRunner</span> qr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryRunner</span><span class="token punctuation">(</span><span class="token class-name">JdbcUtils</span><span class="token punctuation">.</span><span class="token function">getDataSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">User</span> user <span class="token operator">=</span> qr<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>sql<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">BeanHandler</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">,</span> params<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span> user<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h5 id="_5-7-3-3、service层" tabindex="-1"><a class="header-anchor" href="#_5-7-3-3、service层" aria-hidden="true">#</a> 5.7.3.3、Service层</h5><blockquote><p>Service层接口</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>qfedu<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">User</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span>\n    <span class="token class-name">User</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token class-name">String</span> username<span class="token punctuation">,</span> <span class="token class-name">String</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><blockquote><p>Service层实现类对象</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>qfedu<span class="token punctuation">.</span>dao<span class="token punctuation">.</span></span><span class="token class-name">UserDao</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>qfedu<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span><span class="token class-name">UserDaoImpl</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>qfedu<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">User</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>qfedu<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">UserService</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token class-name">SQLException</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token class-name">UserDao</span> userDao <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserDaoImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token class-name">User</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token class-name">String</span> username<span class="token punctuation">,</span> <span class="token class-name">String</span> password<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n        <span class="token keyword">try</span> <span class="token punctuation">{</span>\n            user <span class="token operator">=</span> userDao<span class="token punctuation">.</span><span class="token function">findByUsernameAndPassword</span><span class="token punctuation">(</span>username<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> throwables<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            throwables<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">return</span> user<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h5 id="_5-7-3-4、servlet" tabindex="-1"><a class="header-anchor" href="#_5-7-3-4、servlet" aria-hidden="true">#</a> 5.7.3.4、Servlet</h5><blockquote><p>用于登录验证的Servlet</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>qfedu<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">User</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>qfedu<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">UserService</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>qfedu<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span><span class="token class-name">UserServiceImpl</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>\n\n<span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;LoginServlet&quot;</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">&quot;/LoginServlet&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LoginServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token class-name">UserService</span> userService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserServiceImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>\n        <span class="token comment">//获取登录信息</span>\n        <span class="token class-name">String</span> username <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">String</span> password <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">&quot;password&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">String</span> code <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">&quot;code&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token class-name">HttpSession</span> session <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">//使用用户输入的验证码和生成的验证码进行比较</span>\n        <span class="token class-name">String</span> generateCode <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>session<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;generateCode&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">//忽略大小写比较强</span>\n        <span class="token keyword">if</span><span class="token punctuation">(</span>generateCode<span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token comment">//登录验证</span>\n            <span class="token class-name">User</span> user <span class="token operator">=</span> userService<span class="token punctuation">.</span><span class="token function">login</span><span class="token punctuation">(</span>username<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n            <span class="token keyword">if</span><span class="token punctuation">(</span>user <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token comment">//将成功登录的用户信息放在Session中</span>\n                session<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                request<span class="token punctuation">.</span><span class="token function">getRequestDispatcher</span><span class="token punctuation">(</span><span class="token string">&quot;/success.jsp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forward</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n                request<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;errorMsg&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;用户名或密码错误，请重新登录&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                request<span class="token punctuation">.</span><span class="token function">getRequestDispatcher</span><span class="token punctuation">(</span><span class="token string">&quot;/login.jsp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forward</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n            request<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;errorMsg&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;验证码错误，请重新登录...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            request<span class="token punctuation">.</span><span class="token function">getRequestDispatcher</span><span class="token punctuation">(</span><span class="token string">&quot;/login.jsp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forward</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>\n        <span class="token function">doGet</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br></div></div><blockquote><p>用于生成验证码的Servlet</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>dsna<span class="token punctuation">.</span>util<span class="token punctuation">.</span>images<span class="token punctuation">.</span></span><span class="token class-name">ValidateCode</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>\n\n<span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;CodeServlet&quot;</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">&quot;/CodeServlet&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CodeServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>\n        <span class="token comment">//生成验证码</span>\n        <span class="token class-name">ValidateCode</span> codeImg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ValidateCode</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">String</span> code <span class="token operator">=</span> codeImg<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">//将生成的验证码存放在session中</span>\n        request<span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;generateCode&quot;</span><span class="token punctuation">,</span> code<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">//发送给浏览器</span>\n        codeImg<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>\n        <span class="token function">doGet</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><blockquote><p>用于退出登录的Servlet</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>\n\n<span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;LogoutServlet&quot;</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">&quot;/LogoutServlet&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LogoutServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>\n        <span class="token comment">//让session失效</span>\n        request<span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invalidate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">//重定向到login.jsp</span>\n        response<span class="token punctuation">.</span><span class="token function">sendRedirect</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getContextPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;/login.jsp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>\n        <span class="token function">doGet</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h5 id="_5-7-3-5、相关页面" tabindex="-1"><a class="header-anchor" href="#_5-7-3-5、相关页面" aria-hidden="true">#</a> 5.7.3.5、相关页面</h5><blockquote><p>登录页面login.jsp</p><p>注意这个页面中引入jquery用于实现单击刷新验证码，如果加载jquery不能运行成功，删除out目录重试。</p></blockquote><div class="language-jsp ext-jsp line-numbers-mode"><pre class="language-jsp"><code>&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;\n&lt;%@ taglib prefix=&quot;c&quot; uri=&quot;http://java.sun.com/jsp/jstl/core&quot; %&gt;\n&lt;head&gt;\n    &lt;title&gt;登录&lt;/title&gt;\n    &lt;script src=&quot;${pageContext.request.contextPath}/js/jquery-3.4.1.min.js&quot;&gt;&lt;/script&gt;\n    &lt;script&gt;\n        $(function () {\n            //单击验证码图片，刷新验证码\n            $(&quot;#codeImg&quot;).click(function () {\n                var date = new Date();\n                $(&quot;#codeImg&quot;).prop(&quot;src&quot;, &quot;${pageContext.request.contextPath}/CodeServlet?timeStamp=&quot; + date.getTime());\n            });\n        });\n    &lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;p style=&quot;color: red;&quot;&gt;${errorMsg}&lt;/p&gt;\n&lt;form action=&quot;${pageContext.request.contextPath}/LoginServlet&quot; method=&quot;post&quot;&gt;\n    &lt;fieldset style=&quot;width: 300px;&quot;&gt;\n        &lt;legend&gt;用户登录&lt;/legend&gt;\n        &lt;p&gt;\n            &lt;label&gt;账号&lt;/label&gt;\n            &lt;input type=&quot;text&quot; name=&quot;username&quot; placeholder=&quot;请输入用户名&quot; /&gt;\n        &lt;/p&gt;\n        &lt;p&gt;\n            &lt;label&gt;密码&lt;/label&gt;\n            &lt;input type=&quot;password&quot; name=&quot;password&quot; placeholder=&quot;请输入密码&quot; /&gt;\n        &lt;/p&gt;\n        &lt;p&gt;\n            &lt;label&gt;验证码&lt;/label&gt;\n            &lt;input type=&quot;text&quot; name=&quot;code&quot; placeholder=&quot;请输入验证码&quot; /&gt;\n            &lt;img id=&quot;codeImg&quot; src=&quot;${pageContext.request.contextPath}/CodeServlet&quot; alt=&quot;验证码&quot; /&gt;\n        &lt;/p&gt;\n        &lt;p&gt;\n            &lt;button type=&quot;submit&quot;&gt;登录&lt;/button&gt;\n            &lt;button type=&quot;reset&quot;&gt;重置&lt;/button&gt;\n        &lt;/p&gt;\n    &lt;/fieldset&gt;\n&lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><blockquote><p>成功页面success.jsp</p></blockquote><div class="language-jsp ext-jsp line-numbers-mode"><pre class="language-jsp"><code>&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;success&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;c:choose&gt;\n        &lt;c:when test=&quot;${not empty user}&quot;&gt;\n            &lt;p&gt;欢迎${user.username}&lt;/p&gt;\n            &lt;p&gt;&lt;a href=&quot;${pageContext.request.contextPath}/LogoutServlet&quot;&gt;注销&lt;/a&gt;&lt;/p&gt;\n        &lt;/c:when&gt;\n        &lt;c:otherwise&gt;\n            &lt;p&gt;您还没有登录，请先&lt;a href=&quot;${pageContext.request.contextPath}/login.jsp&quot;&gt;登录&lt;/a&gt;&lt;/p&gt;\n        &lt;/c:otherwise&gt;\n    &lt;/c:choose&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div>',134),l={},o=(0,a(83744).Z)(l,[["render",function(n,s){return p}]])}}]);