"use strict";(self.webpackChunkhuanglian=self.webpackChunkhuanglian||[]).push([[3521],{75897:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-5341655c",path:"/framework/mybatis/01_MyBatis%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8.html",title:"",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"一、MyBatis简介",slug:"一、mybatis简介",children:[{level:3,title:"1.1、JDBC操作（插入数据）",slug:"_1-1、jdbc操作-插入数据",children:[]},{level:3,title:"1.2、JDBC操作（查询数据）",slug:"_1-2、jdbc操作-查询数据",children:[]},{level:3,title:"1.3、JDBC操作的分析",slug:"_1-3、jdbc操作的分析",children:[]},{level:3,title:"1.4、MyBatis是什么",slug:"_1-4、mybatis是什么",children:[]}]},{level:2,title:"二、MyBatis快速入门",slug:"二、mybatis快速入门",children:[{level:3,title:"2.1、MyBatis开发步骤",slug:"_2-1、mybatis开发步骤",children:[]},{level:3,title:"2.2、环境搭建",slug:"_2-2、环境搭建",children:[]},{level:3,title:"2.3、编写测试代码",slug:"_2-3、编写测试代码",children:[]}]},{level:2,title:"三、MyBatis映射文件概述",slug:"三、mybatis映射文件概述",children:[]},{level:2,title:"四、MyBatis进行增删改查操作",slug:"四、mybatis进行增删改查操作",children:[{level:3,title:"4.1、插入数据",slug:"_4-1、插入数据",children:[]},{level:3,title:"4.2、删除数据",slug:"_4-2、删除数据",children:[]},{level:3,title:"4.3、修改数据",slug:"_4-3、修改数据",children:[]},{level:3,title:"4.4、总结",slug:"_4-4、总结",children:[]}]},{level:2,title:"五、MyBatis核心配置文件",slug:"五、mybatis核心配置文件",children:[{level:3,title:"5.1、MyBatis配置文件层次关系",slug:"_5-1、mybatis配置文件层次关系",children:[]},{level:3,title:"5.2、核心配置文件常用配置解析",slug:"_5-2、核心配置文件常用配置解析",children:[]}]}],filePathRelative:"framework/mybatis/01_MyBatis快速入门.md",git:{updatedTime:1661237516e3,contributors:[{name:"黄健",email:"huang.jian@trs.com.cn",commits:1}]}}},86295:(n,s,a)=>{a.r(s),a.d(s,{default:()=>u});var t=a(66252);const p=a.p+"assets/img/jdbc01.7bc63ac0.jpg",e=a.p+"assets/img/jdbc03.f29724b7.jpg",l=a.p+"assets/img/配置文件层级.119c6179.jpg",c=(0,t.uE)('<h2 id="一、mybatis简介" tabindex="-1"><a class="header-anchor" href="#一、mybatis简介" aria-hidden="true">#</a> 一、MyBatis简介</h2><h3 id="_1-1、jdbc操作-插入数据" tabindex="-1"><a class="header-anchor" href="#_1-1、jdbc操作-插入数据" aria-hidden="true">#</a> 1.1、JDBC操作（插入数据）</h3><blockquote><p><img src="'+p+'" alt="jdbc03"></p></blockquote><h3 id="_1-2、jdbc操作-查询数据" tabindex="-1"><a class="header-anchor" href="#_1-2、jdbc操作-查询数据" aria-hidden="true">#</a> 1.2、JDBC操作（查询数据）</h3><blockquote><p><img src="'+e+'" alt="jdbc01"></p></blockquote><h3 id="_1-3、jdbc操作的分析" tabindex="-1"><a class="header-anchor" href="#_1-3、jdbc操作的分析" aria-hidden="true">#</a> 1.3、JDBC操作的分析</h3><blockquote><p>JDBC开发存在的问题：</p><ul><li>代码存在大量重复操作；</li><li>数据库连接创建、释放频繁造成系统资源浪费从而影响系统性能；</li><li>SQL语句在代码中硬编码，造成代码不易维护，实际应用SQL变化的可能较大，SQL变动需要改变Java代码；</li><li>查询操作时，需要手动将结果集中的数据手动封装到实体中。插入操作时，需要手动将实体的数据设置到sql语句的占位符位置。</li></ul><p>解决方案：</p><ul><li>使用工具类对相同的操作进行抽取；</li><li>使用数据库连接池初始化连接资源（C3P0、Druid）；</li><li>将SQL语句抽取到XML配置文件中；</li><li>使用反射、内省等底层技术，实现对象的属性和表的字段自动映射。</li></ul><p>具体技术：</p><ul><li>Hibernate</li><li>MyBatis</li></ul></blockquote><h3 id="_1-4、mybatis是什么" tabindex="-1"><a class="header-anchor" href="#_1-4、mybatis是什么" aria-hidden="true">#</a> 1.4、MyBatis是什么</h3><blockquote><p>MyBatis是一个优秀的基于java的<strong>持久层框架</strong>，它内部封装了JDBC，使开发者只需要关注SQL语句本身，而不需要花费精力去处理加载驱动、创建连接、创建statement等繁杂的过程。</p><p>MyBatis通过XML或注解的方式将要执行的各种statement配置起来，并通过JAVA对象和statement中SQL的动态参数进行映射生成最终执行的SQL语句。</p><p>最后MyBatis框架执行SQL并将结果映射为Java对象并返回。<strong>采用ORM思想</strong>解决了实体和数据库映射的问题，对JDBC进行了封装，屏蔽了JDBC API底层访问细节，使我们不用与JDBC API打交道，就可以完成对数据库的持久化操作</p><p><strong>简单说就是：有一种叫MyBatis的持久层技术，能够代替JDBC，简化JDBC开发。</strong></p></blockquote><h4 id="_1-4-1、orm" tabindex="-1"><a class="header-anchor" href="#_1-4-1、orm" aria-hidden="true">#</a> 1.4.1、ORM</h4><blockquote><p><strong>对象关系映射</strong>（英语：<strong>Object Relational Mapping</strong>，简称<strong>ORM</strong>，或<strong>O/RM</strong>，或<strong>O/R mapping</strong>），是一种程序设计技术，用于实现面向对象编程语言里不同类型系统的数据之间的转换。从效果上说，它其实是创建了一个可在编程语言里使用“虚拟对象数据库”。</p><p><strong>简单的说：就是把数据库表和实体类及实体类的属性对应起来，让我们可以操作实体类就实现操作数据库表。</strong></p><table><thead><tr><th style="text-align:center;">数据库</th><th style="text-align:center;">实体类</th></tr></thead><tbody><tr><td style="text-align:center;">user表</td><td style="text-align:center;">User类</td></tr><tr><td style="text-align:center;">id列</td><td style="text-align:center;">id属性</td></tr><tr><td style="text-align:center;">username列</td><td style="text-align:center;">userName属性</td></tr><tr><td style="text-align:center;">age列</td><td style="text-align:center;">age属性</td></tr></tbody></table></blockquote><h2 id="二、mybatis快速入门" tabindex="-1"><a class="header-anchor" href="#二、mybatis快速入门" aria-hidden="true">#</a> 二、MyBatis快速入门</h2><h3 id="_2-1、mybatis开发步骤" tabindex="-1"><a class="header-anchor" href="#_2-1、mybatis开发步骤" aria-hidden="true">#</a> 2.1、MyBatis开发步骤</h3><blockquote><p>MyBatis官网地址：http://www.mybatis.org/mybatis-3/</p><p>步骤：</p><p>​ 1) 新建Maven项目，导入相关依赖；</p><p>​ 2) 创建user表；</p><p>​ 3) 编写User实体类；</p><p>​ 4) 编写映射文件UserMapper.xml；</p><p>​ 5) 编写核心配置文件SqlMapConfig.xml；</p><p>​ 6) 编写测试类；</p><p>​ 7) 测试。</p></blockquote><h3 id="_2-2、环境搭建" tabindex="-1"><a class="header-anchor" href="#_2-2、环境搭建" aria-hidden="true">#</a> 2.2、环境搭建</h3><h4 id="_2-2-1、新建项目-导入相关jar包" tabindex="-1"><a class="header-anchor" href="#_2-2-1、新建项目-导入相关jar包" aria-hidden="true">#</a> 2.2.1、新建项目，导入相关Jar包</h4><blockquote><p><strong>MyBatis是一种持久化技术，在普通Java项目和JavaWeb项目中都可以使用</strong>，这里我们新建一个普通Maven项目就可以。</p><p>新建Maven项目，导入相关依赖</p></blockquote><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>5.1.49<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.mybatis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mybatis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.4.6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.13<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token comment">&lt;!-- log4j依赖 --&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>log4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>log4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.2.17<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h4 id="_2-2-2、创建user表" tabindex="-1"><a class="header-anchor" href="#_2-2-2、创建user表" aria-hidden="true">#</a> 2.2.2、创建user表</h4><blockquote><p><strong>注意设置id自增</strong></p></blockquote><div class="language-mysql ext-mysql line-numbers-mode"><pre class="language-mysql"><code>CREATE TABLE `user`  (\n  `id` bigint(20) NOT NULL AUTO_INCREMENT,\n  `username` varchar(30) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\n  `password` varchar(30) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\n  `age` int(11) NULL DEFAULT NULL,\n  `gender` varchar(6) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\n  `addr` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,\n  PRIMARY KEY (`id`) USING BTREE\n) ENGINE = InnoDB AUTO_INCREMENT = 11 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = COMPACT;\n\nINSERT INTO `user` VALUES (1, &#39;zhangsan&#39;, &#39;123&#39;, 20, &#39;male&#39;, &#39;qd&#39;);\nINSERT INTO `user` VALUES (2, &#39;lisi&#39;, &#39;123&#39;, 21, &#39;male&#39;, &#39;bj&#39;);\nINSERT INTO `user` VALUES (4, &#39;tom&#39;, &#39;123&#39;, 19, &#39;male&#39;, &#39;nj&#39;);\nINSERT INTO `user` VALUES (5, &#39;wangwu&#39;, &#39;123&#39;, 20, &#39;male&#39;, &#39;sh&#39;);\nINSERT INTO `user` VALUES (6, &#39;weihua&#39;, &#39;111&#39;, 21, &#39;female&#39;, &#39;sz&#39;);\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h4 id="_2-2-3、编写user实体类" tabindex="-1"><a class="header-anchor" href="#_2-2-3、编写user实体类" aria-hidden="true">#</a> 2.2.3、编写User实体类</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**\n * 表示用户的实体类\n *\n * 属性名和数据库表名对应\n *\n * 符合JavaBean的规范\n */</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token class-name">Long</span> id<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> username<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token class-name">Integer</span> age<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> gender<span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token class-name">String</span> addr<span class="token punctuation">;</span>\n\n    <span class="token comment">//set和get方法</span>\n    <span class="token comment">//toString方法</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h4 id="_2-2-4、编写映射文件usermapper-xml" tabindex="-1"><a class="header-anchor" href="#_2-2-4、编写映射文件usermapper-xml" aria-hidden="true">#</a> 2.2.4、编写映射文件UserMapper.xml</h4><blockquote><p><strong>该文件放在<code>resources</code>目录下的<code>mappers</code>文件夹下</strong></p></blockquote><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span>\n<span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">mapper</span>\n        <span class="token name">PUBLIC</span> <span class="token string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span>\n        <span class="token string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>userMapper<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>findAll<span class="token punctuation">&quot;</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.qfedu.bean.User<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n        SELECT * FROM user\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h4 id="_2-2-5、编写核心配置文件sqlmapconfig-xml" tabindex="-1"><a class="header-anchor" href="#_2-2-5、编写核心配置文件sqlmapconfig-xml" aria-hidden="true">#</a> 2.2.5、编写核心配置文件SqlMapConfig.xml</h4><blockquote><p>该文件放在<code>resources</code>目录下</p></blockquote><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span>\n<span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">configuration</span>\n        <span class="token name">PUBLIC</span> <span class="token string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span>\n        <span class="token string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>\n    <span class="token comment">&lt;!-- 配置环境 --&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>environments</span> <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dev<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>environment</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dev<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transactionManager</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>JDBC<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>transactionManager</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dataSource</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>POOLED<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>driver<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.mysql.jdbc.Driver<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>url<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>jdbc:mysql://localhost:3306/test?useSSL=false<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>username<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>root<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>root<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dataSource</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>environment</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>environments</span><span class="token punctuation">&gt;</span></span>\n\n    <span class="token comment">&lt;!-- 加载映射配置文件 --&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mappers</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">resource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mappers/UserMapper.xml<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mappers</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h4 id="_2-2-6、编写日志配置文件" tabindex="-1"><a class="header-anchor" href="#_2-2-6、编写日志配置文件" aria-hidden="true">#</a> 2.2.6、编写日志配置文件</h4><blockquote><p>log4j.properties</p></blockquote><div class="language-properties ext-properties line-numbers-mode"><pre class="language-properties"><code><span class="token comment">#</span>\n<span class="token comment"># Hibernate, Relational Persistence for Idiomatic Java</span>\n<span class="token comment">#</span>\n<span class="token comment"># License: GNU Lesser General Public License (LGPL), version 2.1 or later.</span>\n<span class="token comment"># See the lgpl.txt file in the root directory or &lt;http://www.gnu.org/licenses/lgpl-2.1.html&gt;.</span>\n<span class="token comment">#</span>\n\n<span class="token comment">### direct log messages to stdout ###</span>\n<span class="token key attr-name">log4j.appender.stdout</span><span class="token punctuation">=</span><span class="token value attr-value">org.apache.log4j.ConsoleAppender</span>\n<span class="token key attr-name">log4j.appender.stdout.Target</span><span class="token punctuation">=</span><span class="token value attr-value">System.err</span>\n<span class="token key attr-name">log4j.appender.stdout.layout</span><span class="token punctuation">=</span><span class="token value attr-value">org.apache.log4j.PatternLayout</span>\n<span class="token key attr-name">log4j.appender.stdout.layout.ConversionPattern</span><span class="token punctuation">=</span><span class="token value attr-value">%d{ABSOLUTE} %5p %c{1}:%L - %m%n</span>\n\n<span class="token comment">### direct messages to file hibernate.log ###</span>\n<span class="token comment">#log4j.appender.file=org.apache.log4j.FileAppender</span>\n<span class="token comment">#log4j.appender.file.File=hibernate.log</span>\n<span class="token comment">#log4j.appender.file.layout=org.apache.log4j.PatternLayout</span>\n<span class="token comment">#log4j.appender.file.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L - %m%n</span>\n\n<span class="token comment">### set log levels - for more verbose logging change &#39;info&#39; to &#39;debug&#39; ###</span>\n\n<span class="token key attr-name">log4j.rootLogger</span><span class="token punctuation">=</span><span class="token value attr-value">debug, stdout</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><blockquote><p>这个文件编写不需要掌握，用的时候直接拷贝即可。</p></blockquote><table><thead><tr><th style="text-align:center;">级别</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:center;">ALL LEVEL</td><td style="text-align:left;">打开所有日志记录开关；是最低等级的，用于打开所有日志记录</td></tr><tr><td style="text-align:center;"><a href="">DEBUG</a></td><td style="text-align:left;">输出调试信息；指出细粒度信息事件对调试应用程序是非常有帮助的</td></tr><tr><td style="text-align:center;">INFO</td><td style="text-align:left;">输出提示信息；消息在粗粒度级别上突出强调应用程序的运行过程</td></tr><tr><td style="text-align:center;">WARN</td><td style="text-align:left;">输出警告信息；表明会出现潜在错误的情形</td></tr><tr><td style="text-align:center;">ERROR</td><td style="text-align:left;">输出错误信息；指出虽然发生错误事件，但仍然不影响系统的继续运行</td></tr><tr><td style="text-align:center;">FATAL</td><td style="text-align:left;">输出致命错误；指出每个严重的错误事件将会导致应用程序的退出</td></tr><tr><td style="text-align:center;">OFF LEVEL</td><td style="text-align:left;">关闭所有日志记录开关；是最高等级的，用于关闭所有日志记录</td></tr></tbody></table><h3 id="_2-3、编写测试代码" tabindex="-1"><a class="header-anchor" href="#_2-3、编写测试代码" aria-hidden="true">#</a> 2.3、编写测试代码</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyTest</span> <span class="token punctuation">{</span>\n    <span class="token annotation punctuation">@Test</span>\n    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>\n        <span class="token comment">//加载核心配置文件</span>\n        <span class="token class-name">InputStream</span> stream <span class="token operator">=</span> <span class="token class-name">Resources</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span><span class="token string">&quot;SqlMapConfig.xml&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t<span class="token comment">//获得sqlSession工厂对象</span>\n        <span class="token class-name">SqlSessionFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>stream<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">//获得sqlSession对象</span>\n        <span class="token class-name">SqlSession</span> sqlSession <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">//执行sql语句</span>\n        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span><span class="token string">&quot;userMapper.findAll&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">//打印结果</span>\n        list<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t<span class="token comment">//释放资源</span>\n        sqlSession<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><blockquote><p>运行测试方法，测试通过。</p></blockquote><h2 id="三、mybatis映射文件概述" tabindex="-1"><a class="header-anchor" href="#三、mybatis映射文件概述" aria-hidden="true">#</a> 三、MyBatis映射文件概述</h2><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span>\n<span class="token comment">&lt;!-- 映射文件DTD约束，用来约束XML中的标签，直接从素材中拷贝就可以，不需要去记。--&gt;</span>\n<span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">mapper</span>\n        <span class="token name">PUBLIC</span> <span class="token string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span>\n        <span class="token string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span><span class="token punctuation">&gt;</span></span>\n<span class="token comment">&lt;!-- 映射文件的根标签，其他的内容都要写在该标签的内部\n\tnamespace：命名空间，与下面语句的id一起组成查询的标识，唯一的确定要执行的SQL语句 \n--&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>userMapper<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token comment">&lt;!-- select标签表示这是一个查询操作，除了这个标签还可以有insert、delete、update\n\t\tid：语句的id，和上面的namespace一起组成查询的标识，唯一的确定要执行的SQL语句\n\t\tresultType：查询结果对应的实体类型，目前这里先写全类名（包名+类名）\n\t--&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>findAll<span class="token punctuation">&quot;</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.qfedu.bean.User<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n        <span class="token comment">&lt;!-- SQL语句 --&gt;</span>\n        SELECT * FROM user\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><blockquote><p><strong>关于映射文件，目前先了解这些就可以，还有其他的配置后面再讲解。</strong></p></blockquote><h2 id="四、mybatis进行增删改查操作" tabindex="-1"><a class="header-anchor" href="#四、mybatis进行增删改查操作" aria-hidden="true">#</a> 四、MyBatis进行增删改查操作</h2><h3 id="_4-1、插入数据" tabindex="-1"><a class="header-anchor" href="#_4-1、插入数据" aria-hidden="true">#</a> 4.1、插入数据</h3><h4 id="_4-1-1、编写usermapper映射文件" tabindex="-1"><a class="header-anchor" href="#_4-1-1、编写usermapper映射文件" aria-hidden="true">#</a> 4.1.1、编写UserMapper映射文件</h4><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token comment">&lt;!--\n\t插入操作使用insert标签\n\tparameterType：指定要插入的数据类型，这里暂时写全类名\n--&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>insert</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>add<span class="token punctuation">&quot;</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.qfedu.bean.User<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token comment">&lt;!-- #{xxx}：使用实体中的xxx属性值 --&gt;</span>\n    insert into user(username, password, age, gender, addr) \n    values(#{username}, #{password}, #{age}, #{gender}, #{addr})\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>insert</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h4 id="_4-1-2、提取出测试类中的公共代码" tabindex="-1"><a class="header-anchor" href="#_4-1-2、提取出测试类中的公共代码" aria-hidden="true">#</a> 4.1.2、提取出测试类中的公共代码</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token class-name">SqlSession</span> sqlSession<span class="token punctuation">;</span>\n\n<span class="token annotation punctuation">@Before</span>\n<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>\n    <span class="token comment">//加载核心配置文件</span>\n    <span class="token class-name">InputStream</span> stream <span class="token operator">=</span> <span class="token class-name">Resources</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span><span class="token string">&quot;SqlMapConfig.xml&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">//获得sqlSession工厂对象</span>\n    <span class="token class-name">SqlSessionFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>stream<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">//获得sqlSession对象</span>\n    sqlSession <span class="token operator">=</span> factory<span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token annotation punctuation">@After</span>\n<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">//释放资源</span>\n    sqlSession<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h4 id="_4-1-3、编写插入实体user的代码" tabindex="-1"><a class="header-anchor" href="#_4-1-3、编写插入实体user的代码" aria-hidden="true">#</a> 4.1.3、编写插入实体User的代码</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>\n<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testInsert</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">//创建User实体</span>\n    user<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token string">&quot;admin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    user<span class="token punctuation">.</span><span class="token function">setPassword</span><span class="token punctuation">(</span><span class="token string">&quot;123456&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    user<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    user<span class="token punctuation">.</span><span class="token function">setGender</span><span class="token punctuation">(</span><span class="token string">&quot;male&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    user<span class="token punctuation">.</span><span class="token function">setAddr</span><span class="token punctuation">(</span><span class="token string">&quot;qd&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token comment">//执行SQL语句</span>\n    sqlSession<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token string">&quot;userMapper.add&quot;</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token comment">//提交事务</span>\n    <span class="token comment">//插入操作涉及数据库的变化，要手动提交事务</span>\n    sqlSession<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="_4-2、删除数据" tabindex="-1"><a class="header-anchor" href="#_4-2、删除数据" aria-hidden="true">#</a> 4.2、删除数据</h3><h4 id="_4-2-1、编写usermapper映射文件" tabindex="-1"><a class="header-anchor" href="#_4-2-1、编写usermapper映射文件" aria-hidden="true">#</a> 4.2.1、编写UserMapper映射文件</h4><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token comment">&lt;!-- 删除操作使用delete标签\n\t#{任意字符串}方式引用传递的单个参数，如果传入的参数只有一个，大括号中的内容可以随意写，我们最好见名知意 \n--&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>delete</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>delete<span class="token punctuation">&quot;</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>java.lang.Integer<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    DELETE FROM user WHERE id=#{id}\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>delete</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h4 id="_4-2-2、编写删除数据的代码" tabindex="-1"><a class="header-anchor" href="#_4-2-2、编写删除数据的代码" aria-hidden="true">#</a> 4.2.2、编写删除数据的代码</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>\n<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testDelete</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    sqlSession<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">&quot;userMapper.delete&quot;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    sqlSession<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="_4-3、修改数据" tabindex="-1"><a class="header-anchor" href="#_4-3、修改数据" aria-hidden="true">#</a> 4.3、修改数据</h3><h4 id="_4-3-1、编写usermapper映射文件" tabindex="-1"><a class="header-anchor" href="#_4-3-1、编写usermapper映射文件" aria-hidden="true">#</a> 4.3.1、编写UserMapper映射文件</h4><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>update</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>chg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.qfedu.bean.User<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    UPDATE user SET username=#{username}, password=#{password} WHERE id=#{id}\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>update</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="_4-3-2、编写修改数据的代码" tabindex="-1"><a class="header-anchor" href="#_4-3-2、编写修改数据的代码" aria-hidden="true">#</a> 4.3.2、编写修改数据的代码</h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>\n<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    user<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token number">2L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    user<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token string">&quot;peter&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    user<span class="token punctuation">.</span><span class="token function">setPassword</span><span class="token punctuation">(</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    sqlSession<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token string">&quot;userMapper.chg&quot;</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    sqlSession<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="_4-4、总结" tabindex="-1"><a class="header-anchor" href="#_4-4、总结" aria-hidden="true">#</a> 4.4、总结</h3><blockquote><p><strong>映射配置+API</strong>实现增删改查。</p></blockquote><h2 id="五、mybatis核心配置文件" tabindex="-1"><a class="header-anchor" href="#五、mybatis核心配置文件" aria-hidden="true">#</a> 五、MyBatis核心配置文件</h2><h3 id="_5-1、mybatis配置文件层次关系" tabindex="-1"><a class="header-anchor" href="#_5-1、mybatis配置文件层次关系" aria-hidden="true">#</a> 5.1、MyBatis配置文件层次关系</h3><p><img src="'+l+'" alt="配置文件层级"></p><blockquote><p><strong>配置相关标签必须按照上图中的顺序，不然程序无法正常运行</strong></p></blockquote><h3 id="_5-2、核心配置文件常用配置解析" tabindex="-1"><a class="header-anchor" href="#_5-2、核心配置文件常用配置解析" aria-hidden="true">#</a> 5.2、核心配置文件常用配置解析</h3><h4 id="_5-2-1、environments标签" tabindex="-1"><a class="header-anchor" href="#_5-2-1、environments标签" aria-hidden="true">#</a> 5.2.1、environments标签</h4><blockquote><p>该标签用来配置数据库环境，支持多环境配置</p></blockquote><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token comment">&lt;!-- 配置环境\n\t default：指定默认环境，如果下面配置了多个id，通过delfault属性的值指定使用哪个环境\n--&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>environments</span> <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dev<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token comment">&lt;!-- id：环境的id --&gt;</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>environment</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dev<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n        <span class="token comment">&lt;!-- type：事务管理器类型，类型有如下两种。\n\t\t\tJDBC：这个配置就是直接使用了JDBC的提交和回滚设置，它依赖于从数据源得到的连接来管理事务作用域。\n \t\t\tMANAGED：这个配置几乎没做什么。它从来不提交或回滚一个连接，而是让容器来管理事务的整个生命周期。 \n\t\t\t\t\t默认情况下它会关闭连接，然而一些容器并不希望这样，因此需要将closeConnection属性设置\n\t\t\t\t\t为false来阻止它默认的关闭行为。\n\t\t--&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transactionManager</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>JDBC<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>transactionManager</span><span class="token punctuation">&gt;</span></span>\n        <span class="token comment">&lt;!-- type：指定数据源类型，类型有如下三种。\n\t\t\tUNPOOLED：这个数据源的实现只是每次被请求时打开和关闭连接。\n\t\t\tPOOLED：这种数据源的实现利用“池”的概念将 JDBC 连接对象组织起来。\n\t\t\tJNDI：这个数据源的实现是为了能在如EJB或应用服务器这类容器中使用，\n\t\t\t\t容器可以集中或在外部配置数据源，然后放置一个 JNDI 上下文的引用。\n \t\t--&gt;</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dataSource</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>POOLED<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n            <span class="token comment">&lt;!-- 配置数据源的基本参数 --&gt;</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>driver<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.mysql.jdbc.Driver<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>url<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>jdbc:mysql://localhost:3306/test?useSSL=false&amp;useUnicode=true&amp;characterEncpding=utf8<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>username<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>root<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>root<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dataSource</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>environment</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>environments</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h4 id="_5-2-2、mapper标签" tabindex="-1"><a class="header-anchor" href="#_5-2-2、mapper标签" aria-hidden="true">#</a> 5.2.2、mapper标签</h4><blockquote><p>该标签的作用是加载映射文件，加载方式有如下几种：</p><p>使用相对于类路径的资源引用，例如：</p></blockquote><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">resource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>org/mybatis/builder/AuthorMapper.xml<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote><p>使用完全限定资源定位符（URL），例如：</p></blockquote><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>file:///var/mappers/AuthorMapper.xml<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote><p>使用映射器接口实现类的完全限定类名，例如：</p></blockquote><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>org.mybatis.builder.AuthorMapper<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote><p>将包内的映射器接口实现全部注册为映射器，例如：</p></blockquote><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>package</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>org.mybatis.builder<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="_5-2-3、properties标签" tabindex="-1"><a class="header-anchor" href="#_5-2-3、properties标签" aria-hidden="true">#</a> 5.2.3、properties标签</h4><blockquote><p>实际开发中，习惯将数据源的配置信息单独抽取成一个properties文件，该标签可以加载额外配置的properties文件</p><p>创建配置数据源的配置文件jdbc.properties</p></blockquote><div class="language-properties ext-properties line-numbers-mode"><pre class="language-properties"><code><span class="token key attr-name">jdbc.driver</span><span class="token punctuation">=</span><span class="token value attr-value">com.mysql.jdbc.Driver</span>\n<span class="token key attr-name">jdbc.url</span><span class="token punctuation">=</span><span class="token value attr-value">jdbc:mysql://localhost:3306/test?useSSL=false</span>\n<span class="token key attr-name">jdbc.username</span><span class="token punctuation">=</span><span class="token value attr-value">root</span>\n<span class="token key attr-name">jdbc.password</span><span class="token punctuation">=</span><span class="token value attr-value">root</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><blockquote><p>修改核心配置文件</p></blockquote><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token comment">&lt;!-- 引入外部配置文件 --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span> <span class="token attr-name">resource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>jdbc.properties<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n\n<span class="token comment">&lt;!-- 配置环境 --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>environments</span> <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dev<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>environment</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dev<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transactionManager</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>JDBC<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>transactionManager</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dataSource</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>POOLED<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n            <span class="token comment">&lt;!-- 使用${key}引用properties文件中的值 --&gt;</span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>driver<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>${jdbc.driver}<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>url<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>${jdbc.url}<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>username<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>${jdbc.username}<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>${jdbc.password}<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dataSource</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>environment</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>environments</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h4 id="_5-2-4、typealiases标签" tabindex="-1"><a class="header-anchor" href="#_5-2-4、typealiases标签" aria-hidden="true">#</a> 5.2.4、typeAliases标签</h4><h5 id="_5-2-4-1、如何设置别名" tabindex="-1"><a class="header-anchor" href="#_5-2-4-1、如何设置别名" aria-hidden="true">#</a> 5.2.4.1、如何设置别名</h5><blockquote><p>配置类型别名，为全类名设置一个短名字</p><p>写法1</p></blockquote><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token comment">&lt;!-- 配置别名 --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>typeAliases</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>typeAlias</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.qfedu.bean.User<span class="token punctuation">&quot;</span></span> <span class="token attr-name">alias</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>user<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>typeAliases</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><blockquote><p>通过上面的配置为com.qfedu.bean包下的User类起了一个别名user。这种写法需要为每个类分别设置别名，如果类很多，这里的配置会很繁琐。</p><p>写法2</p></blockquote><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token comment">&lt;!-- 配置别名 --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>typeAliases</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>package</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.qfedu.bean<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>typeAliases</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><blockquote><p>这种写法为com.qfedu.bean下的所有类设置别名，别名为类名的首字母小写。</p></blockquote><h5 id="_5-2-4-2、如何使用别名" tabindex="-1"><a class="header-anchor" href="#_5-2-4-2、如何使用别名" aria-hidden="true">#</a> 5.2.4.2、如何使用别名</h5><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>findAll<span class="token punctuation">&quot;</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>user<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    SELECT * FROM user\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>update</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>chg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>user<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    UPDATE user SET username=#{username}, password=#{password} WHERE id=#{id}\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>update</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h5 id="_5-2-4-3、mybatis预先设置好的别名" tabindex="-1"><a class="header-anchor" href="#_5-2-4-3、mybatis预先设置好的别名" aria-hidden="true">#</a> 5.2.4.3、MyBatis预先设置好的别名</h5><blockquote><table><thead><tr><th style="text-align:center;">数据类型</th><th style="text-align:center;">别名</th></tr></thead><tbody><tr><td style="text-align:center;">java.lang.String</td><td style="text-align:center;">string</td></tr><tr><td style="text-align:center;">java.lang.Long</td><td style="text-align:center;">long</td></tr><tr><td style="text-align:center;">java.lang.Integer</td><td style="text-align:center;">int</td></tr><tr><td style="text-align:center;">java.lang.Double</td><td style="text-align:center;">double</td></tr><tr><td style="text-align:center;">……</td><td style="text-align:center;">……</td></tr></tbody></table></blockquote><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>delete</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>delete<span class="token punctuation">&quot;</span></span> <span class="token attr-name">parameterType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>int<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    DELETE FROM user WHERE id=#{id}\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>delete</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',94),o={},u=(0,a(83744).Z)(o,[["render",function(n,s){return c}]])}}]);