"use strict";(self.webpackChunkhuanglian=self.webpackChunkhuanglian||[]).push([[7071],{15775:(e,a,l)=>{l.r(a),l.d(a,{data:()=>s});const s={key:"v-426a94f7",path:"/tool/linux/06_Linux_%E9%98%B2%E7%81%AB%E5%A2%99FirewallD%E8%AE%BE%E7%BD%AE.html",title:"",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"一、简介",slug:"一、简介",children:[]},{level:2,title:"二、安装与管理FirewallD",slug:"二、安装与管理firewalld",children:[{level:3,title:"2.1、启动及开机启动",slug:"_2-1、启动及开机启动",children:[]},{level:3,title:"2.2、检查防火墙状态",slug:"_2-2、检查防火墙状态",children:[]},{level:3,title:"2.3、查看FirewallD守护进程的状态",slug:"_2-3、查看firewalld守护进程的状态",children:[]},{level:3,title:"2.4、重写加载FirewallD配置",slug:"_2-4、重写加载firewalld配置",children:[]}]},{level:2,title:"三、配置FirewallD",slug:"三、配置firewalld",children:[]},{level:2,title:"四、防火墙的区域",slug:"四、防火墙的区域",children:[{level:3,title:"4.1、与服务一起使用",slug:"_4-1、与服务一起使用",children:[]},{level:3,title:"4.2、允许或者拒绝任意端口/协议",slug:"_4-2、允许或者拒绝任意端口-协议",children:[]}]}],filePathRelative:"tool/linux/06_Linux_防火墙FirewallD设置.md",git:{updatedTime:1661237516e3,contributors:[{name:"黄健",email:"huang.jian@trs.com.cn",commits:1}]}}},2740:(e,a,l)=>{l.r(a),l.d(a,{default:()=>r});const s=(0,l(66252).uE)('<h2 id="一、简介" tabindex="-1"><a class="header-anchor" href="#一、简介" aria-hidden="true">#</a> 一、简介</h2><blockquote><p>FirewallD是iptables的前端控制器，用于实现持久的网络流量规则。它提供命令行和图形界面，在大多数 Linux 发行版的仓库中都有。与直接控制iptables相比，使用FirewallD有两个主要区别：</p><ul><li>FirewallD使用区域和服务而不是链式规则；</li><li>它动态管理规则集，允许更新规则而不破坏现有会话和连接。</li></ul><p>FirewallD是iptables的一个封装，可以让你更容易地管理iptables规则，它并<strong>不是</strong>iptables的替代品。虽然iptables命令仍可用于FirewallD，但建议使用FirewallD时仅使用FirewallD命令。</p></blockquote><h2 id="二、安装与管理firewalld" tabindex="-1"><a class="header-anchor" href="#二、安装与管理firewalld" aria-hidden="true">#</a> 二、安装与管理FirewallD</h2><blockquote><p>CentOS7已经包含了FirewallD，如果没有激活。可以像其它的systemd单元那样控制它。</p></blockquote><h3 id="_2-1、启动及开机启动" tabindex="-1"><a class="header-anchor" href="#_2-1、启动及开机启动" aria-hidden="true">#</a> 2.1、启动及开机启动</h3><blockquote><p>启动服务，并在系统引导时启动该服务</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 启动服务</span>\n<span class="token function">sudo</span> systemctl start firewalld\n<span class="token comment"># 设置开机启动</span>\n<span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> firewalld\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="_2-2、检查防火墙状态" tabindex="-1"><a class="header-anchor" href="#_2-2、检查防火墙状态" aria-hidden="true">#</a> 2.2、检查防火墙状态</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>firewall-cmd --state\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote><p>输出的应该是<code>running</code>或<code>not running</code>。</p></blockquote><h3 id="_2-3、查看firewalld守护进程的状态" tabindex="-1"><a class="header-anchor" href="#_2-3、查看firewalld守护进程的状态" aria-hidden="true">#</a> 2.3、查看FirewallD守护进程的状态</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>systemctl status firewalld\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote><p>示例输出</p></blockquote><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>● firewalld.service - firewalld - dynamic firewall daemon\n   Loaded: loaded (/usr/lib/systemd/system/firewalld.service; enabled; vendor preset: enabled)\n   Active: active (running) since Thu 2021-12-02 21:56:04 CST; 12h ago\n     Docs: man:firewalld(1)\n Main PID: 544 (firewalld)\n   CGroup: /system.slice/firewalld.service\n           └─544 /usr/bin/python2 -Es /usr/sbin/firewalld --nofork --nopid\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="_2-4、重写加载firewalld配置" tabindex="-1"><a class="header-anchor" href="#_2-4、重写加载firewalld配置" aria-hidden="true">#</a> 2.4、重写加载FirewallD配置</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>firewall-cmd --reload\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="三、配置firewalld" tabindex="-1"><a class="header-anchor" href="#三、配置firewalld" aria-hidden="true">#</a> 三、配置FirewallD</h2><blockquote><p>FirewallD使用XML进行配置。除非是非常特殊的配置，你不必处理它们，而应该使用<code>firewall-cmd</code>。</p><p>配置文件位于两个目录中：</p><ul><li><code>/usr/lib/FirewallD</code>下保存默认配置，如默认区域和公用服务。 避免修改它们，因为每次firewall软件包更新时都会覆盖这些文件。</li><li><code>/etc/firewalld</code>下保存系统配置文件。 这些文件将覆盖默认配置。</li></ul><p>FirewallD使用两个配置集：<code>运行时</code>和<code>持久</code>。 在系统重新启动或重新启动FirewallD时，不会保留运行时的配置更改，而对持久配置集的更改不会应用于正在运行的系统。</p><p>默认情况下，<code>firewall-cmd</code>命令适用于运行时配置，但使用<code>--permanent</code>标志将保存到持久配置中。要添加和激活持久性规则，你可以使用两种方法之一。</p><p>将规则同时添加到持久规则集和运行时规则集中：</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>firewall-cmd --zone<span class="token operator">=</span>public --add-service<span class="token operator">=</span>http\nfirewall-cmd --zone<span class="token operator">=</span>public --add-service<span class="token operator">=</span>http --permanent\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><blockquote><p>将规则添加到持久规则集中并重新加载FirewallD：</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>firewall-cmd --zone<span class="token operator">=</span>public --add-service<span class="token operator">=</span>http --permanent\nfirewall-cmd --reload\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><blockquote><p><code>reload</code>命令会删除所有运行时配置并应用永久配置。因为 firewalld 动态管理规则集，所以它不会破坏现有的连接和会话。</p></blockquote><h2 id="四、防火墙的区域" tabindex="-1"><a class="header-anchor" href="#四、防火墙的区域" aria-hidden="true">#</a> 四、防火墙的区域</h2><blockquote><p><code>区域</code>是针对给定位置或场景（例如家庭、公共、受信任等）可能具有的各种信任级别的预构建规则集。不同的区域允许不同的网络服务和入站流量类型，而拒绝其他任何流量。 首次启用 FirewallD 后，<code>public</code> 将是默认区域。</p><p>区域也可以用于不同的网络接口。例如，要分离内部网络和互联网的接口，你可以在 <code>internal</code> 区域上允许 DHCP，但在<code>external</code> 区域仅允许 HTTP 和 SSH。未明确设置为特定区域的任何接口将添加到默认区域。</p><p>获取默认区域：</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>firewall-cmd --get-default-zone\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote><p>修改默认区域：</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>firewall-cmd --set-default-zone<span class="token operator">=</span>internal\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote><p>查看网络接口使用的区域：</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>firewall-cmd --get-active-zones\n\n<span class="token comment"># 示例输出</span>\npublic\n  interfaces: eth0\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><blockquote><p>获取特定区域的所有配置：</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>firewall-cmd --zone<span class="token operator">=</span>public --list-all\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote><p>获取所有区域的配置：</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>firewall-cmd --list-all-zones\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="_4-1、与服务一起使用" tabindex="-1"><a class="header-anchor" href="#_4-1、与服务一起使用" aria-hidden="true">#</a> 4.1、与服务一起使用</h3><blockquote><p>FirewallD 可以根据特定网络服务的预定义规则来允许相关流量。你可以创建自己的自定义系统规则，并将它们添加到任何区域。 默认支持的服务的配置文件位于 <code>/usr/lib /firewalld/services</code>，用户创建的服务文件在 <code>/etc/firewalld/services</code> 中。</p><p>查看默认的可用服务：</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>firewall-cmd --get-services\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote><p>启用或禁用HTTP服务：</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>firewall-cmd --zone<span class="token operator">=</span>public --add-service<span class="token operator">=</span>http --permanent\nfirewall-cmd --zone<span class="token operator">=</span>public --remove-service<span class="token operator">=</span>http --permanent\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_4-2、允许或者拒绝任意端口-协议" tabindex="-1"><a class="header-anchor" href="#_4-2、允许或者拒绝任意端口-协议" aria-hidden="true">#</a> 4.2、允许或者拒绝任意端口/协议</h3><blockquote><p>允许或者禁用 12345 端口的 TCP 流量</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>firewall-cmd --zone<span class="token operator">=</span>public --add-port<span class="token operator">=</span><span class="token number">12345</span>/tcp --permanent\nfirewall-cmd --zone<span class="token operator">=</span>public --remove-port<span class="token operator">=</span><span class="token number">12345</span>/tcp --permanent\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>',41),n={},r=(0,l(83744).Z)(n,[["render",function(e,a){return s}]])}}]);