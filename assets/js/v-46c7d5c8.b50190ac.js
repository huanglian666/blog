"use strict";(self.webpackChunkhuanglian=self.webpackChunkhuanglian||[]).push([[3202],{14088:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-46c7d5c8",path:"/sql/mysql/12_%E5%8F%98%E9%87%8F_%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B_%E5%87%BD%E6%95%B0.html",title:"",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"一、变量",slug:"一、变量",children:[{level:3,title:"1.1、系统变量",slug:"_1-1、系统变量",children:[]},{level:3,title:"1.2、自定义变量",slug:"_1-2、自定义变量",children:[]}]},{level:2,title:"二、存储过程",slug:"二、存储过程",children:[{level:3,title:"2.1、创建语法",slug:"_2-1、创建语法",children:[]},{level:3,title:"2.2、调用语法",slug:"_2-2、调用语法",children:[]},{level:3,title:"2.3、删除存储过程",slug:"_2-3、删除存储过程",children:[]},{level:3,title:"2.4、查看存储过程的信息",slug:"_2-4、查看存储过程的信息",children:[]},{level:3,title:"2.5、举例",slug:"_2-5、举例",children:[]}]},{level:2,title:"三、函数",slug:"三、函数",children:[{level:3,title:"3.1、创建语法",slug:"_3-1、创建语法",children:[]},{level:3,title:"3.2、调用语法",slug:"_3-2、调用语法",children:[]},{level:3,title:"3.3、查看函数",slug:"_3-3、查看函数",children:[]},{level:3,title:"3.4、删除函数",slug:"_3-4、删除函数",children:[]},{level:3,title:"3.5、案例",slug:"_3-5、案例",children:[]}]}],filePathRelative:"sql/mysql/12_变量_存储过程_函数.md",git:{updatedTime:1661237516e3,contributors:[{name:"黄健",email:"huang.jian@trs.com.cn",commits:1}]}}},22209:(n,s,a)=>{a.r(s),a.d(s,{default:()=>t});const e=(0,a(66252).uE)('<h2 id="一、变量" tabindex="-1"><a class="header-anchor" href="#一、变量" aria-hidden="true">#</a> 一、变量</h2><blockquote><p>类似Java中的变量，MySQL也存在变量。变量分类：</p><ul><li>系统变量 <ul><li>全局变量</li><li>会话变量</li></ul></li><li>自定义变量 <ul><li>用户变量</li><li>局部变量</li></ul></li></ul></blockquote><h3 id="_1-1、系统变量" tabindex="-1"><a class="header-anchor" href="#_1-1、系统变量" aria-hidden="true">#</a> 1.1、系统变量</h3><blockquote><p>说明：变量由系统定义，不是用户定义，属于服务器层面。 注意：全局变量需要添加global关键字，会话变量需要添加session关键字，如果不写，默认会话级别。</p><p>常见操作如下：</p></blockquote><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token comment"># 查看所有系统变量</span>\n<span class="token keyword">show</span> <span class="token keyword">global</span><span class="token operator">|</span><span class="token keyword">session</span> variables<span class="token punctuation">;</span>\n<span class="token comment"># 查看满足条件的部分系统变量</span>\n<span class="token keyword">show</span> <span class="token keyword">global</span><span class="token operator">|</span><span class="token keyword">session</span> variables <span class="token operator">like</span> <span class="token string">&#39;xxx&#39;</span><span class="token punctuation">;</span>\n<span class="token comment"># 查看指定的系统变量的值</span>\n<span class="token keyword">select</span> @<span class="token variable">@global</span><span class="token operator">|</span><span class="token keyword">session</span><span class="token punctuation">.</span>系统变量名<span class="token punctuation">;</span>\n<span class="token comment"># 为某个系统变量赋值</span>\n<span class="token comment"># 方式一：</span>\n<span class="token keyword">set</span> <span class="token keyword">global</span><span class="token operator">|</span><span class="token keyword">session</span> 系统变量名<span class="token operator">=</span>值<span class="token punctuation">;</span>\n<span class="token comment"># 方式二：</span>\n<span class="token keyword">set</span> @<span class="token variable">@global</span><span class="token operator">|</span><span class="token keyword">session</span><span class="token punctuation">.</span>系统变量名<span class="token operator">=</span>值<span class="token punctuation">;</span>\n\n<span class="token comment"># 设置自动提交</span>\n<span class="token keyword">set</span> autocommit<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">#默认设置，设置会话的自动提交</span>\n<span class="token keyword">set</span> @<span class="token variable">@global.autocommit</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>\n\n<span class="token comment"># 查看自动提交</span>\n<span class="token keyword">select</span> @<span class="token variable">@autocommit</span><span class="token punctuation">;</span> <span class="token comment">#默认查询，查询会话的自动提交</span>\n<span class="token keyword">select</span> @<span class="token variable">@global.autocommit</span><span class="token punctuation">;</span> <span class="token comment">#查询全局的自动提交</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="_1-2、自定义变量" tabindex="-1"><a class="header-anchor" href="#_1-2、自定义变量" aria-hidden="true">#</a> 1.2、自定义变量</h3><blockquote><p>说明：变量由用户自定义，而不是系统提供的。 使用步骤：</p><ul><li><p>声明</p></li><li><p>赋值</p></li><li><p>使用（查看、比较、运算等）</p></li></ul></blockquote><h4 id="_1-2-1、用户变量" tabindex="-1"><a class="header-anchor" href="#_1-2-1、用户变量" aria-hidden="true">#</a> 1.2.1、用户变量</h4><blockquote><p>作用域：针对于当前会话（连接）有效，作用域同会话变量。</p><p>赋值操作符：=或:=</p></blockquote><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token comment"># 声明并初始化</span>\n<span class="token keyword">set</span> @变量名<span class="token operator">=</span>值<span class="token punctuation">;</span>\n<span class="token keyword">set</span> @变量名:<span class="token operator">=</span>值<span class="token punctuation">;</span>\n<span class="token keyword">select</span> @变量名:<span class="token operator">=</span>值<span class="token punctuation">;</span>\n\n<span class="token comment"># 赋值，更新变量的值</span>\n<span class="token comment"># 方式1</span>\n<span class="token keyword">set</span> @变量名<span class="token operator">=</span>值<span class="token punctuation">;</span>\n<span class="token keyword">set</span> @变量名:<span class="token operator">=</span>值<span class="token punctuation">;</span>\n<span class="token keyword">select</span> @变量名:<span class="token operator">=</span>值<span class="token punctuation">;</span>\n<span class="token comment"># 方式2，查询出的数据一定是单个值</span>\n<span class="token keyword">select</span> 字段 <span class="token keyword">into</span> @变量名 <span class="token keyword">from</span> 表<span class="token punctuation">;</span>\n\n<span class="token comment"># 使用，查看变量的值</span>\n<span class="token keyword">select</span> ＠变量名；\n\n<span class="token keyword">set</span> <span class="token variable">@name</span><span class="token operator">=</span><span class="token string">&#39;zs&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">set</span> <span class="token variable">@ct</span>:<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">;</span>\n<span class="token keyword">select</span> <span class="token variable">@ct</span>:<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>\n\n<span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">into</span> <span class="token variable">@ct</span> <span class="token keyword">from</span> emp<span class="token punctuation">;</span>\n<span class="token keyword">select</span> <span class="token variable">@ct</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h4 id="_1-2-2、局部变量" tabindex="-1"><a class="header-anchor" href="#_1-2-2、局部变量" aria-hidden="true">#</a> 1.2.2、局部变量</h4><blockquote><p>作用域：仅仅在定义它的<code>begin</code>、<code>end</code>块中有效。 应用在<code>begin</code>、<code>end</code>中的第一句话。</p></blockquote><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token comment"># 声明</span>\n<span class="token keyword">declare</span> 变量名 类型<span class="token punctuation">;</span>\n<span class="token keyword">declare</span> 变量名 类型 <span class="token punctuation">[</span><span class="token keyword">default</span> 值<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token comment"># 赋值</span>\n<span class="token comment"># 方式1</span>\n<span class="token keyword">set</span> 局部变量名<span class="token operator">=</span>值<span class="token punctuation">;</span>\n<span class="token keyword">set</span> 局部变量名:<span class="token operator">=</span>值<span class="token punctuation">;</span>\n<span class="token keyword">select</span> 局部变量名:<span class="token operator">=</span>值<span class="token punctuation">;</span>\n<span class="token comment"># 方式2</span>\n<span class="token keyword">select</span> 字段 <span class="token keyword">into</span> 变量名 <span class="token keyword">from</span> 表<span class="token punctuation">;</span>\n\n<span class="token comment"># 使用，查看变量的值</span>\n<span class="token keyword">select</span> 局部变量名<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h4 id="_1-2-3、用户变量和局部变量对比" tabindex="-1"><a class="header-anchor" href="#_1-2-3、用户变量和局部变量对比" aria-hidden="true">#</a> 1.2.3、用户变量和局部变量对比</h4><table><thead><tr><th></th><th>作用域</th><th>定义和使用的位置</th><th>语法</th></tr></thead><tbody><tr><td>用户变量</td><td>当前会话</td><td>会话中的任何地方</td><td>必须加@符号，不用限定类型</td></tr><tr><td>局部变量</td><td><code>begin</code>、<code>end</code>块中</td><td>只能在<code>begin</code>、<code>end</code>块中，且为第一句话</td><td>不用加@符号，需要限定类型</td></tr></tbody></table><h2 id="二、存储过程" tabindex="-1"><a class="header-anchor" href="#二、存储过程" aria-hidden="true">#</a> 二、存储过程</h2><blockquote><p>含义：一组预先编译好的SQL语句的集合，理解成批处理语句。</p><p>优势：</p><ul><li>提高代码的重用性；</li><li>简化操作；</li><li>减少了编译次数并且减少了和数据库服务器的连接次数，提高了效率。</li></ul></blockquote><h3 id="_2-1、创建语法" tabindex="-1"><a class="header-anchor" href="#_2-1、创建语法" aria-hidden="true">#</a> 2.1、创建语法</h3><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">procedure</span> 存储过程名<span class="token punctuation">(</span>参数列表<span class="token punctuation">)</span>\n<span class="token keyword">begin</span>\n\t存储过程体<span class="token punctuation">(</span>一组<span class="token keyword">SQL</span>语句<span class="token punctuation">)</span>\n<span class="token keyword">end</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><blockquote><p>说明：</p><ol><li><p>如果存储过程体仅仅只有一句话，<code>begin</code>、<code>end</code>可以省略；</p></li><li><p>存储过程体中的每条sql语句的结尾要求必须加分号；</p></li><li><p>由于存储过程体使用分号表示结束，那么存储过程必须使用其他字符表示结尾。存储过程使用<code>delimiter</code>重新设置结尾；</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token comment"># 语法</span>\n<span class="token keyword">delimiter</span> 结束标记\n<span class="token comment"># 案例</span>\n<span class="token keyword">delimiter</span> $\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li><li><p>参数列表包含三部分：</p><ul><li>参数模式 <ul><li>in：该参数可以作为输入，也就是该参数需要调用方传入值</li><li>out：该参数可以作为输出，也就是该参数可以作为返回值</li><li>inout：该参数既可以作为输入又可以作为输出，也就是该参数既需要传入值，又可以返回值</li></ul></li><li>参数名</li><li>参数类型</li></ul></li></ol></blockquote><h3 id="_2-2、调用语法" tabindex="-1"><a class="header-anchor" href="#_2-2、调用语法" aria-hidden="true">#</a> 2.2、调用语法</h3><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">call</span> 存储过程名<span class="token punctuation">(</span>实参列表<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="_2-3、删除存储过程" tabindex="-1"><a class="header-anchor" href="#_2-3、删除存储过程" aria-hidden="true">#</a> 2.3、删除存储过程</h3><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">drop</span> <span class="token keyword">procedure</span> 存储过程名<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="_2-4、查看存储过程的信息" tabindex="-1"><a class="header-anchor" href="#_2-4、查看存储过程的信息" aria-hidden="true">#</a> 2.4、查看存储过程的信息</h3><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">show</span> <span class="token keyword">create</span> proceduce 存储过程名<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="_2-5、举例" tabindex="-1"><a class="header-anchor" href="#_2-5、举例" aria-hidden="true">#</a> 2.5、举例</h3><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token comment"># 创建存储过程,在部门表中添加两条数据</span>\n<span class="token keyword">delimiter</span> $\n<span class="token keyword">create</span> <span class="token keyword">procedure</span> pro1<span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token keyword">begin</span>\n\t<span class="token keyword">insert</span> <span class="token keyword">into</span> dept<span class="token punctuation">(</span>dname<span class="token punctuation">,</span> loc<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">&#39;aaa&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;bj&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">&#39;bbb&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;tj&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">end</span> $\n<span class="token comment"># 调用存储过程</span>\n<span class="token keyword">call</span> pro1<span class="token punctuation">(</span><span class="token punctuation">)</span>$\n\n\n<span class="token comment"># 创建存储过程，根据部门名称查询部门名</span>\n<span class="token keyword">delimiter</span> $\n<span class="token keyword">create</span> <span class="token keyword">procedure</span> pro2<span class="token punctuation">(</span><span class="token operator">in</span> deptloc <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token keyword">begin</span>\n\t<span class="token keyword">select</span> dname <span class="token keyword">from</span> dept <span class="token keyword">where</span> loc<span class="token operator">=</span>deptloc<span class="token punctuation">;</span>\n<span class="token keyword">end</span> $\n<span class="token comment"># 调用存储过程</span>\n<span class="token keyword">call</span> pro2<span class="token punctuation">(</span><span class="token string">&#39;北京&#39;</span><span class="token punctuation">)</span>$\n\n\n<span class="token comment"># 创建存储过程，查询在特定部门从事特定工种的员工的信息和部门信息</span>\n<span class="token keyword">delimiter</span> $\n<span class="token keyword">create</span> <span class="token keyword">procedure</span> pro3<span class="token punctuation">(</span><span class="token operator">in</span> job <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">in</span> deptname <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token keyword">begin</span>\n\t<span class="token keyword">select</span>\n\t\te<span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">,</span> d<span class="token punctuation">.</span><span class="token operator">*</span>\n\t<span class="token keyword">from</span>\n\t\temp e<span class="token punctuation">,</span> dept d\n\t<span class="token keyword">where</span>\n\t\te<span class="token punctuation">.</span>deptno<span class="token operator">=</span>d<span class="token punctuation">.</span>deptno <span class="token operator">and</span> e<span class="token punctuation">.</span>job<span class="token operator">=</span>job <span class="token operator">and</span> d<span class="token punctuation">.</span>dname<span class="token operator">=</span>deptname<span class="token punctuation">;</span>\n<span class="token keyword">end</span> $\n<span class="token comment"># 调用存储过程</span>\n<span class="token keyword">call</span> pro3<span class="token punctuation">(</span><span class="token string">&#39;文员&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;市场部&#39;</span><span class="token punctuation">)</span>$\n\n\n<span class="token comment"># 创建存储过程，查询特定部门和特定工种的员工个数</span>\n<span class="token keyword">delimiter</span> $\n<span class="token keyword">create</span> <span class="token keyword">procedure</span> pro4<span class="token punctuation">(</span><span class="token operator">in</span> job <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">in</span> deptname <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token keyword">begin</span>\n\t<span class="token keyword">declare</span> result <span class="token keyword">int</span> <span class="token keyword">default</span> <span class="token number">0</span><span class="token punctuation">;</span>\n\t<span class="token keyword">select</span>\n\t\t<span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">into</span> result\n\t<span class="token keyword">from</span>\n\t\temp e<span class="token punctuation">,</span> dept d\n\t<span class="token keyword">where</span>\n\t\te<span class="token punctuation">.</span>deptno<span class="token operator">=</span>d<span class="token punctuation">.</span>deptno <span class="token operator">and</span> e<span class="token punctuation">.</span>job<span class="token operator">=</span>job <span class="token operator">and</span> d<span class="token punctuation">.</span>dname<span class="token operator">=</span>deptname<span class="token punctuation">;</span>\n\t\t\n\t<span class="token keyword">select</span> result <span class="token keyword">as</span> <span class="token string">&#39;个数&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">end</span> $\n<span class="token comment"># 调用存储过程</span>\n<span class="token keyword">call</span> pro4<span class="token punctuation">(</span><span class="token string">&#39;文员&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;市场部&#39;</span><span class="token punctuation">)</span>$\n\n\n<span class="token comment"># 创建存储过程，查询特定部门和特定工种的员工个数</span>\n<span class="token keyword">delimiter</span> $\n<span class="token keyword">create</span> <span class="token keyword">procedure</span> pro5<span class="token punctuation">(</span><span class="token operator">in</span> job <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">in</span> deptname <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">out</span> result <span class="token keyword">int</span><span class="token punctuation">)</span>\n<span class="token keyword">begin</span>\n\t<span class="token keyword">select</span>\n\t\t<span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">into</span> result\n\t<span class="token keyword">from</span>\n\t\temp e<span class="token punctuation">,</span> dept d\n\t<span class="token keyword">where</span>\n\t\te<span class="token punctuation">.</span>deptno<span class="token operator">=</span>d<span class="token punctuation">.</span>deptno <span class="token operator">and</span> e<span class="token punctuation">.</span>job<span class="token operator">=</span>job <span class="token operator">and</span> d<span class="token punctuation">.</span>dname<span class="token operator">=</span>deptname<span class="token punctuation">;</span>\n<span class="token keyword">end</span> $\n<span class="token comment"># 调用</span>\n<span class="token keyword">call</span> pro5<span class="token punctuation">(</span><span class="token string">&#39;文员&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;研发部&#39;</span><span class="token punctuation">,</span> <span class="token variable">@r</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">select</span> <span class="token variable">@r</span><span class="token punctuation">;</span>\n\n\n<span class="token comment"># 创建存储过程，传入a和b两个值，最终a和b都翻倍并返回</span>\n<span class="token keyword">delimiter</span> $\n<span class="token keyword">create</span> <span class="token keyword">procedure</span> pro6<span class="token punctuation">(</span><span class="token keyword">inout</span> num1 <span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">inout</span> num2 <span class="token keyword">int</span><span class="token punctuation">)</span>\n<span class="token keyword">begin</span>\n\t<span class="token keyword">set</span> num1<span class="token operator">=</span>num1<span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">;</span>\n\t<span class="token keyword">set</span> num2<span class="token operator">=</span>num2<span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">;</span>\n<span class="token keyword">end</span> $\n<span class="token keyword">set</span> <span class="token variable">@a</span><span class="token operator">=</span><span class="token number">2</span>$\n<span class="token keyword">set</span> <span class="token variable">@b</span><span class="token operator">=</span><span class="token number">3</span>$\n<span class="token comment"># 调用存储过程</span>\n<span class="token keyword">call</span> pro6<span class="token punctuation">(</span><span class="token variable">@a</span><span class="token punctuation">,</span> <span class="token variable">@b</span><span class="token punctuation">)</span>$\n<span class="token keyword">select</span> <span class="token variable">@a$</span>\n<span class="token keyword">select</span> <span class="token variable">@b$</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br></div></div><h2 id="三、函数" tabindex="-1"><a class="header-anchor" href="#三、函数" aria-hidden="true">#</a> 三、函数</h2><blockquote><p>含义：一组预先编译好的SQL语句的集合，理解成批处理语句。</p><p>优势：</p><ul><li>提高代码的重用性；</li><li>简化操作；</li><li>减少了编译次数并且减少了和数据库服务器的连接次数，提高了效率。</li></ul><p>与存储过程区别：</p><ul><li>存储过程：可以有0个返回，也可以有多个返回，适合做批量插入、批量更新；</li><li>函数：有且仅有1 个返回，适合做处理数据后返回一个结果。</li></ul></blockquote><h3 id="_3-1、创建语法" tabindex="-1"><a class="header-anchor" href="#_3-1、创建语法" aria-hidden="true">#</a> 3.1、创建语法</h3><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">function</span> 函数名<span class="token punctuation">(</span>参数列表<span class="token punctuation">)</span> <span class="token keyword">returns</span> 返回类型\n<span class="token keyword">begin</span>\n\t函数体\n<span class="token keyword">end</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><blockquote><p>说明：</p><ol><li>参数列表包含两部分：<code>参数名 参数类型</code>；</li><li>函数体肯定会有return语句，如果没有会报错；</li><li>函数体中仅有一句话，则可以省略<code>begin</code>、<code>end</code>；</li><li>使用<code>delimiter</code>语句设置结束标记。</li></ol></blockquote><h3 id="_3-2、调用语法" tabindex="-1"><a class="header-anchor" href="#_3-2、调用语法" aria-hidden="true">#</a> 3.2、调用语法</h3><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">select</span> 函数名<span class="token punctuation">(</span>参数列表<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="_3-3、查看函数" tabindex="-1"><a class="header-anchor" href="#_3-3、查看函数" aria-hidden="true">#</a> 3.3、查看函数</h3><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">show</span> <span class="token keyword">create</span> <span class="token keyword">function</span> 函数名<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="_3-4、删除函数" tabindex="-1"><a class="header-anchor" href="#_3-4、删除函数" aria-hidden="true">#</a> 3.4、删除函数</h3><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">drop</span> <span class="token keyword">function</span> 函数名<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="_3-5、案例" tabindex="-1"><a class="header-anchor" href="#_3-5、案例" aria-hidden="true">#</a> 3.5、案例</h3><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token comment"># 定义函数，查询员工数量</span>\n<span class="token keyword">delimiter</span> $\n<span class="token keyword">create</span> <span class="token keyword">function</span> myfun1<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">returns</span> <span class="token keyword">int</span>\n<span class="token keyword">begin</span>\n\t<span class="token keyword">declare</span> c <span class="token keyword">int</span> <span class="token keyword">default</span> <span class="token number">0</span><span class="token punctuation">;</span>\n\t<span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">into</span> c <span class="token keyword">from</span> emp<span class="token punctuation">;</span>\n\t<span class="token keyword">return</span> c<span class="token punctuation">;</span>\n<span class="token keyword">end</span> $\n<span class="token comment"># 调用函数</span>\n<span class="token keyword">select</span> myfun1<span class="token punctuation">(</span><span class="token punctuation">)</span>$\n\n\n<span class="token comment"># 定义函数，根据工种查询员工数量</span>\n<span class="token keyword">delimiter</span> $\n<span class="token keyword">create</span> <span class="token keyword">function</span> myfun2<span class="token punctuation">(</span>job <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">returns</span> <span class="token keyword">int</span>\n<span class="token keyword">begin</span>\n\t<span class="token keyword">declare</span> c <span class="token keyword">int</span> <span class="token keyword">default</span> <span class="token number">0</span><span class="token punctuation">;</span>\n\t<span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">into</span> c <span class="token keyword">from</span> emp <span class="token keyword">where</span> emp<span class="token punctuation">.</span>job<span class="token operator">=</span>job<span class="token punctuation">;</span>\n\t<span class="token keyword">return</span> c<span class="token punctuation">;</span>\n<span class="token keyword">end</span> $\n<span class="token comment"># 调用函数</span>\n<span class="token keyword">select</span> myfun2<span class="token punctuation">(</span><span class="token string">&#39;研发部&#39;</span><span class="token punctuation">)</span>$\n\n\n<span class="token comment"># 定义函数，根据部门名称，查询平均工资</span>\n<span class="token keyword">delimiter</span> $\n<span class="token keyword">create</span> <span class="token keyword">function</span> myfun3<span class="token punctuation">(</span>dname <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">returns</span> <span class="token keyword">double</span>\n<span class="token keyword">begin</span>\n\t<span class="token keyword">declare</span> avgsal <span class="token keyword">double</span> <span class="token keyword">default</span> <span class="token number">0</span><span class="token punctuation">;</span>\n\t<span class="token keyword">select</span>\n\t\ta<span class="token punctuation">.</span>a <span class="token keyword">into</span> avgsal\n\t<span class="token keyword">from</span>\n\t\tdept d<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">select</span> deptno<span class="token punctuation">,</span> <span class="token function">avg</span><span class="token punctuation">(</span>sal<span class="token punctuation">)</span> a <span class="token keyword">from</span> emp <span class="token keyword">group</span> <span class="token keyword">by</span> deptno<span class="token punctuation">)</span> a\n\t<span class="token keyword">where</span>\n\t\td<span class="token punctuation">.</span>deptno<span class="token operator">=</span>a<span class="token punctuation">.</span>deptno <span class="token operator">and</span> d<span class="token punctuation">.</span>dname<span class="token operator">=</span>dname<span class="token punctuation">;</span>\n\t<span class="token keyword">return</span> avgsal<span class="token punctuation">;</span>\n<span class="token keyword">end</span> $\n<span class="token comment"># 调用函数</span>\n<span class="token keyword">select</span> myfun3<span class="token punctuation">(</span><span class="token string">&#39;研发部&#39;</span><span class="token punctuation">)</span>$\n\n<span class="token comment"># 定义函数，求两数的和</span>\n<span class="token keyword">delimiter</span> $\n<span class="token keyword">create</span> <span class="token keyword">function</span> myfun4<span class="token punctuation">(</span>num1 <span class="token keyword">int</span><span class="token punctuation">,</span> num2 <span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token keyword">returns</span> <span class="token keyword">int</span>\n<span class="token keyword">begin</span>\n\t<span class="token keyword">declare</span> sum <span class="token keyword">int</span> <span class="token keyword">default</span> <span class="token number">0</span><span class="token punctuation">;</span>\n\t<span class="token keyword">set</span> sum:<span class="token operator">=</span>num1<span class="token operator">+</span>num2<span class="token punctuation">;</span>\n\t<span class="token keyword">return</span> sum<span class="token punctuation">;</span>\n<span class="token keyword">end</span> $\n<span class="token comment"># 调用函数</span>\n<span class="token keyword">select</span> myfun4<span class="token punctuation">(</span><span class="token number">11</span>，<span class="token number">21</span><span class="token punctuation">)</span>$\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br></div></div>',41),p={},t=(0,a(83744).Z)(p,[["render",function(n,s){return e}]])}}]);