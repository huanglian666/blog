"use strict";(self.webpackChunkhuanglian=self.webpackChunkhuanglian||[]).push([[1624],{9305:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-36d64172",path:"/tool/nginx/Nginx.html",title:"",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"一、Nginx概述",slug:"一、nginx概述",children:[]},{level:2,title:"二、Nginx安装",slug:"二、nginx安装",children:[{level:3,title:"2.1、下载",slug:"_2-1、下载",children:[]},{level:3,title:"2.2、Windows下安装",slug:"_2-2、windows下安装",children:[]},{level:3,title:"2.3、Linux下安装",slug:"_2-3、linux下安装",children:[]},{level:3,title:"2.4、nginx常用命令",slug:"_2-4、nginx常用命令",children:[]}]},{level:2,title:"三、反向代理",slug:"三、反向代理",children:[{level:3,title:"3.1、正向代理和反向代理",slug:"_3-1、正向代理和反向代理",children:[]},{level:3,title:"3.2、实现",slug:"_3-2、实现",children:[]}]},{level:2,title:"四、负载均衡",slug:"四、负载均衡",children:[{level:3,title:"4.1、基于轮询的负载均衡",slug:"_4-1、基于轮询的负载均衡",children:[]},{level:3,title:"4.2、基于权重的负载均衡",slug:"_4-2、基于权重的负载均衡",children:[]},{level:3,title:"4.3、基于ip_hash的负载均衡",slug:"_4-3、基于ip-hash的负载均衡",children:[]}]},{level:2,title:"五、动静分离",slug:"五、动静分离",children:[{level:3,title:"5.1、准备工作",slug:"_5-1、准备工作",children:[]},{level:3,title:"5.2、前端代码",slug:"_5-2、前端代码",children:[]},{level:3,title:"5.3、nginx配置",slug:"_5-3、nginx配置",children:[]}]},{level:2,title:"六、关于跨域",slug:"六、关于跨域",children:[{level:3,title:"6.1、概念",slug:"_6-1、概念",children:[]},{level:3,title:"6.2、处理",slug:"_6-2、处理",children:[]}]}],filePathRelative:"tool/nginx/Nginx.md",git:{updatedTime:1661237516e3,contributors:[{name:"黄健",email:"huang.jian@trs.com.cn",commits:1}]}}},45976:(n,s,a)=>{a.r(s),a.d(s,{default:()=>b});var e=a(66252);const t=a.p+"assets/img/image-20210623220657570.ac56863c.png",p=a.p+"assets/img/image-20210623221608714.14d47e31.png",l=a.p+"assets/img/image-20210623225328478.592225a4.png",c=a.p+"assets/img/1586512751639.07f6d0be.png",o=a.p+"assets/img/1586513061851.b91dfc2a.png",r=a.p+"assets/img/9487719-d9eb2035e204d817.4b8ed1d0.png",u=(0,e.uE)('<h2 id="一、nginx概述" tabindex="-1"><a class="header-anchor" href="#一、nginx概述" aria-hidden="true">#</a> 一、Nginx概述</h2><blockquote><p><strong>Nginx</strong> (engine x) 是一个高性能的HTTP和反向代理web服务器，同时也提供了IMAP/POP3/SMTP服务。Nginx是由伊戈尔·赛索耶夫为俄罗斯访问量第二的Rambler.ru站点（俄文：Рамблер）开发的，第一个公开版本0.1.0发布于2004年10月4日。</p><p>其将源代码以类BSD许可证的形式发布，因它的稳定性、丰富的功能集、简单的配置文件和低系统资源的消耗而闻名。2011年6月1日，nginx 1.0.4发布。</p><p>Nginx是一款轻量级的Web服务器/反向代理服务器及电子邮件（IMAP/POP3）代理服务器，在BSD-like 协议下发行。其特点是占有内存少，并发能力强，事实上nginx的并发能力在同类型的网页服务器中表现较好，中国大陆使用nginx网站用户有：百度、京东、新浪、网易、腾讯、淘宝等。</p><p>主要功能：</p><ul><li>反向代理；</li><li>负载均衡；</li><li>动静分离。</li></ul></blockquote><h2 id="二、nginx安装" tabindex="-1"><a class="header-anchor" href="#二、nginx安装" aria-hidden="true">#</a> 二、Nginx安装</h2><h3 id="_2-1、下载" tabindex="-1"><a class="header-anchor" href="#_2-1、下载" aria-hidden="true">#</a> 2.1、下载</h3><blockquote><p><code>http://nginx.org/en/download.html</code></p></blockquote><p><img src="'+t+'" alt="image-20210623220657570"></p><h3 id="_2-2、windows下安装" tabindex="-1"><a class="header-anchor" href="#_2-2、windows下安装" aria-hidden="true">#</a> 2.2、Windows下安装</h3><blockquote><p>解压nginx的压缩包。</p><p>打开cmd，切换到nginx的安装目录。</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 启动nginx</span>\n$ start nginx\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><blockquote><p>在浏览器中访问：<code>http://localhost:80</code>，出现如下内容证明nginx安装成功</p></blockquote><p><img src="'+p+'" alt="image-20210623221608714"></p><h3 id="_2-3、linux下安装" tabindex="-1"><a class="header-anchor" href="#_2-3、linux下安装" aria-hidden="true">#</a> 2.3、Linux下安装</h3><h4 id="_2-3-1、准备工作" tabindex="-1"><a class="header-anchor" href="#_2-3-1、准备工作" aria-hidden="true">#</a> 2.3.1、准备工作</h4><blockquote><p>安装gcc，gcc是c语言编译器，后面会用到。</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ yum -y <span class="token function">install</span> gcc\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote><p>pcre、pcre-devel安装，pcre是一个perl库，包括perl兼容的正则表达式库，nginx的http模块使用pcre来解析正则表达式，所以需要安装pcre库。</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ yum <span class="token function">install</span> -y pcre pcre-devel\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote><p>zlib安装，zlib库提供了很多种压缩和解压缩方式nginx使用zlib对http包的内容进行gzip，所以需要安装。</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ yum <span class="token function">install</span> -y zlib zlib-devel\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote><p>openssl是web安全通信的基石，没有openssl，可以说我们的信息都是在裸奔。</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ yum <span class="token function">install</span> -y openssl openssl-devel\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="_2-3-2、安装nginx" tabindex="-1"><a class="header-anchor" href="#_2-3-2、安装nginx" aria-hidden="true">#</a> 2.3.2、安装Nginx</h4><blockquote><p>上传从官网下载的nginx安装包到Linux，解压。</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">tar</span> -zxvf nginx-1.20.1.tar.gz\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote><p>进入解压后的目录，执行下面三个命令</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ ./configure\n$ <span class="token function">make</span>\n$ <span class="token function">make</span> <span class="token function">install</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="_2-3-3、linux下运行及验证" tabindex="-1"><a class="header-anchor" href="#_2-3-3、linux下运行及验证" aria-hidden="true">#</a> 2.3.3、Linux下运行及验证</h4><blockquote><p>进入nginx的安装目录的<code>/sbin</code>，经过上面的操作，nginx被安装在了<code>/usr/local/nginx</code>目录下。</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token builtin class-name">cd</span> /usr/local/nginx/sbin\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote><p>运行nginx</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ ./nginx\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote><p>在浏览器中访问：<code>http://linux的ip地址:80</code>，出现如下内容证明nginx安装成功</p></blockquote><p><img src="'+l+'" alt="image-20210623225328478"></p><h3 id="_2-4、nginx常用命令" tabindex="-1"><a class="header-anchor" href="#_2-4、nginx常用命令" aria-hidden="true">#</a> 2.4、nginx常用命令</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 启动Nginx</span>\n$ ./nginx\n<span class="token comment"># 重新载入配置文件</span>\n$ ./nginx -s reload\n<span class="token comment"># 重启 Nginx</span>\n$ ./nginx -s reopen\n<span class="token comment"># 停止 Nginx</span>\n$ ./nginx -s stop   \n<span class="token comment"># 停止 Nginx</span>\n$ ./nginx -s quit \n<span class="token comment"># 测试配置文件是否正确</span>\n$ ./nginx -t\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="三、反向代理" tabindex="-1"><a class="header-anchor" href="#三、反向代理" aria-hidden="true">#</a> 三、反向代理</h2><h3 id="_3-1、正向代理和反向代理" tabindex="-1"><a class="header-anchor" href="#_3-1、正向代理和反向代理" aria-hidden="true">#</a> 3.1、正向代理和反向代理</h3><blockquote><p>正向代理：</p><ul><li>正向代理服务是由客户端设立的。</li><li>客户端了解代理服务器和目标服务器都是谁。</li><li>帮助咱们实现突破访问权限，提高访问的速度，对目标服务器隐藏客户端的ip地址。</li></ul></blockquote><p><img src="'+c+'" alt="1586512751639"></p><blockquote><p>反向代理：</p><ul><li>反向代理服务器是配置在服务端的。</li><li>客户端是不知道访问的到底是哪一台服务器。</li><li>达到负载均衡，并且可以隐藏服务器真正的ip地址。</li></ul></blockquote><p><img src="'+o+'" alt="1586513061851"></p><h3 id="_3-2、实现" tabindex="-1"><a class="header-anchor" href="#_3-2、实现" aria-hidden="true">#</a> 3.2、实现</h3><blockquote><p>按照如下方式修改nginx配置文件（conf目录下的nginx.conf文件）</p></blockquote><div class="language-properties ext-properties line-numbers-mode"><pre class="language-properties"><code><span class="token key attr-name">server</span> <span class="token value attr-value">{</span>\n<span class="token key attr-name">    listen</span> <span class="token value attr-value">      80;</span>\n<span class="token key attr-name">    server_name</span> <span class="token value attr-value"> localhost;</span>\n\t\n<span class="token comment">\t# 基于反向代理访问到Tomcat服务器</span>\n<span class="token key attr-name">    location</span> <span class="token value attr-value">/ {</span>\n<span class="token key attr-name">    \tproxy_pass</span> <span class="token value attr-value">http://localhost:9999/;</span>\n    }\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><blockquote><p>此时我们准备一个应用在tomcat中运行（可以是之前ssm的应用），访问<code>http://localhost:80/应用名</code>，此时可以访问到部署到tomcat中的应用。</p></blockquote><h2 id="四、负载均衡" tabindex="-1"><a class="header-anchor" href="#四、负载均衡" aria-hidden="true">#</a> 四、负载均衡</h2><blockquote><p>Nginx为我们默认提供了三种负载均衡的策略：</p><ul><li>轮询：将客户端发起的请求，平均的分配给每一台服务器。</li><li>权重：会将客户端的请求，根据服务器的权重值不同，分配不同的数量。</li><li>ip_hash：基于发起请求的客户端的ip地址不同，他始终会将请求发送到指定的服务器上。</li></ul><p>此时我们需要在两个不同端口（9999、9900）上分别开启一个应用。</p></blockquote><h3 id="_4-1、基于轮询的负载均衡" tabindex="-1"><a class="header-anchor" href="#_4-1、基于轮询的负载均衡" aria-hidden="true">#</a> 4.1、基于轮询的负载均衡</h3><blockquote><p>轮询方式是Nginx负载默认的方式，顾名思义，所有请求都按照时间顺序分配到不同的服务上。</p><p>基于轮询的负载均衡需要进行如下的配置：</p></blockquote><div class="language-properties ext-properties line-numbers-mode"><pre class="language-properties"><code><span class="token key attr-name">upstream</span> <span class="token value attr-value">名字 {</span>\n<span class="token key attr-name">    server</span> <span class="token value attr-value">ip:port;</span>\n<span class="token key attr-name">    server</span> <span class="token value attr-value">ip:port;</span>\n}\n<span class="token key attr-name">server</span> <span class="token value attr-value">{</span>\n<span class="token key attr-name">    listen</span> <span class="token value attr-value">80;</span>\n<span class="token key attr-name">    server_name</span> <span class="token value attr-value">localhost;</span>\n\n<span class="token key attr-name">    location</span> <span class="token value attr-value">/ {</span>\n<span class="token key attr-name">    \tproxy_pass</span> <span class="token value attr-value">http://upstream的名字/;</span>\n    }\n}\n\n<span class="token comment"># -----------------------------------------------</span>\n<span class="token comment"># 案例</span>\n<span class="token key attr-name">upstream</span> <span class="token value attr-value">mytest {</span>\n<span class="token key attr-name">    server</span> <span class="token value attr-value">localhost:9999;</span>\n<span class="token key attr-name">    server</span> <span class="token value attr-value">localhost:9900;</span>\n}\n<span class="token key attr-name">server</span> <span class="token value attr-value">{</span>\n<span class="token key attr-name">    listen</span> <span class="token value attr-value">80;</span>\n<span class="token key attr-name">    server_name</span> <span class="token value attr-value">localhost;</span>\n\n<span class="token key attr-name">    location</span> <span class="token value attr-value">/ {</span>\n<span class="token key attr-name">    \tproxy_pass</span> <span class="token value attr-value">http://mytest/;</span>\n    }\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h3 id="_4-2、基于权重的负载均衡" tabindex="-1"><a class="header-anchor" href="#_4-2、基于权重的负载均衡" aria-hidden="true">#</a> 4.2、基于权重的负载均衡</h3><blockquote><p>指定每个服务的权重比例，weight和访问比率成正比，通常用于后端服务机器性能不统一，将性能好的分配权重高来发挥服务器最大性能。</p></blockquote><div class="language-properties ext-properties line-numbers-mode"><pre class="language-properties"><code><span class="token key attr-name">upstream</span> <span class="token value attr-value">名字 {</span>\n<span class="token key attr-name">\tserver</span> <span class="token value attr-value">ip:port weight=权重比例;</span>\n<span class="token key attr-name">\tserver</span> <span class="token value attr-value">ip:port weight=权重比例;</span>\n}\n<span class="token key attr-name">server</span> <span class="token value attr-value">{</span>\n<span class="token key attr-name">\tlisten</span> <span class="token value attr-value">80;</span>\n<span class="token key attr-name">\tserver_name</span> <span class="token value attr-value">localhost;</span>\n  \n<span class="token key attr-name">\tlocation</span> <span class="token value attr-value">/ {</span>\n<span class="token key attr-name">\t\tproxy_pass</span> <span class="token value attr-value">http://upstream的名字/;</span>\n\t}\n}\n\n<span class="token comment"># -----------------------------------------------</span>\n<span class="token comment"># 案例</span>\n<span class="token key attr-name">upstream</span> <span class="token value attr-value">mytest {</span>\n<span class="token key attr-name">    server</span> <span class="token value attr-value">localhost:9999 weight=1;</span>\n<span class="token key attr-name">    server</span> <span class="token value attr-value">localhost:9900 weight=3;</span>\n}\n<span class="token key attr-name">server</span> <span class="token value attr-value">{</span>\n<span class="token key attr-name">    listen</span> <span class="token value attr-value">80;</span>\n<span class="token key attr-name">    server_name</span> <span class="token value attr-value">localhost;</span>\n\n<span class="token key attr-name">    location</span> <span class="token value attr-value">/ {</span>\n<span class="token key attr-name">    \tproxy_pass</span> <span class="token value attr-value">http://mytest/;</span>\n    }\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h3 id="_4-3、基于ip-hash的负载均衡" tabindex="-1"><a class="header-anchor" href="#_4-3、基于ip-hash的负载均衡" aria-hidden="true">#</a> 4.3、基于ip_hash的负载均衡</h3><blockquote><p>每个请求都根据访问ip的hash结果分配，经过这样的处理，每个访客固定访问一个后端服务。</p></blockquote><div class="language-properties ext-properties line-numbers-mode"><pre class="language-properties"><code><span class="token key attr-name">upstream</span> <span class="token value attr-value">名字 {</span>\n    ip_hash;\n<span class="token key attr-name">    server</span> <span class="token value attr-value">ip:port;</span>\n<span class="token key attr-name">    server</span> <span class="token value attr-value">ip:port;</span>\n}\n<span class="token key attr-name">server</span> <span class="token value attr-value">{</span>\n<span class="token key attr-name">    listen</span> <span class="token value attr-value">80;</span>\n<span class="token key attr-name">    server_name</span> <span class="token value attr-value">localhost;</span>\n\n<span class="token key attr-name">    location</span> <span class="token value attr-value">/ {</span>\n<span class="token key attr-name">    \tproxy_pass</span> <span class="token value attr-value">http://upstream的名字/;</span>\n    }\n}\n\n<span class="token comment"># -----------------------------------------------</span>\n<span class="token comment"># 案例</span>\n<span class="token key attr-name">upstream</span> <span class="token value attr-value">mytest {</span>\n\tip_hash;\n<span class="token key attr-name">    server</span> <span class="token value attr-value">localhost:9999;</span>\n<span class="token key attr-name">    server</span> <span class="token value attr-value">localhost:9900;</span>\n}\n<span class="token key attr-name">server</span> <span class="token value attr-value">{</span>\n<span class="token key attr-name">    listen</span> <span class="token value attr-value">80;</span>\n<span class="token key attr-name">    server_name</span> <span class="token value attr-value">localhost;</span>\n\n<span class="token key attr-name">    location</span> <span class="token value attr-value">/ {</span>\n<span class="token key attr-name">    \tproxy_pass</span> <span class="token value attr-value">http://mytest/;</span>\n    }\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><h2 id="五、动静分离" tabindex="-1"><a class="header-anchor" href="#五、动静分离" aria-hidden="true">#</a> 五、动静分离</h2><blockquote><p>在弄清动静分离之前，我们要先明白什么是动，什么是静。</p><p>在Web开发中，通常来说，<strong>动态资源其实就是指那些后台资源(servlet、jsp...)，而静态资源就是指HTML，JavaScript，CSS，img等文件</strong>。</p><p>一般来说，都需要将动态资源和静态资源分开，将静态资源部署在Nginx上，当一个请求来的时候，如果是静态资源的请求，就直接到nginx配置的静态资源目录下面获取资源，如果是动态资源的请求，nginx利用反向代理的原理，把请求转发给后台应用去处理，从而实现<strong>动静分离</strong>。</p><p>在使用前后端分离之后，可以很大程度的提升静态资源的访问速度，同时在开发过程中也可以让前后端开发并行可以有效的提高开发效率，也可以有些的减少联调时间 。</p></blockquote><h3 id="_5-1、准备工作" tabindex="-1"><a class="header-anchor" href="#_5-1、准备工作" aria-hidden="true">#</a> 5.1、准备工作</h3><blockquote><p>服务端：一个基于springboot的web应用。</p><p>前端：使用vue，通过axios为服务端发送请求。</p></blockquote><h3 id="_5-2、前端代码" tabindex="-1"><a class="header-anchor" href="#_5-2、前端代码" aria-hidden="true">#</a> 5.2、前端代码</h3><blockquote><p>前端代码如下：</p></blockquote><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>\n\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>\n\t\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>utf-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n\t\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>axios<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>\n\t\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/javascript<span class="token punctuation">&quot;</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>js/vue.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\t\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/javascript<span class="token punctuation">&quot;</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>js/axios.min.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>\n\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>\n\t\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n\t\t\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>testGet<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>TestGet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n\t\t\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>testPost<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>TestPost<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n\t\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>\n\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/javascript<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n\t\t<span class="token keyword">var</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n\t\t\t<span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&quot;#app&quot;</span><span class="token punctuation">,</span>\n\t\t\t<span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n\t\t\t\t\n\t\t\t<span class="token punctuation">}</span><span class="token punctuation">,</span>\n\t\t\t<span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n\t\t\t\t<span class="token function-variable function">testGet</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token comment">//axios请求的服务器地址是经过nginx反向代理的</span>\n\t\t\t\t\taxios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;http://localhost:80/ssm/user/queryById&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n\t\t\t\t\t\t<span class="token literal-property property">params</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n\t\t\t\t\t\t\t<span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">1</span>\n\t\t\t\t\t\t<span class="token punctuation">}</span>\n\t\t\t\t\t<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n\t\t\t\t\t\tconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t\t\t\t<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\t\t\t\t<span class="token punctuation">}</span><span class="token punctuation">,</span>\n\t\t\t\t<span class="token function-variable function">testPost</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token comment">//axios请求的服务器地址是经过nginx反向代理的</span>\n\t\t\t\t\taxios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&quot;http://localhost:80/ssm/user/queryAll&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n\t\t\t\t\t\t\n\t\t\t\t\t<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n\t\t\t\t\t    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t\t\t\t<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t\t\t\t<span class="token punctuation">}</span><span class="token punctuation">,</span>\n\t\t\t<span class="token punctuation">}</span>\n\t\t<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> \n\t</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br></div></div><p>将前端代码放置在电脑的任意目录下。</p><h3 id="_5-3、nginx配置" tabindex="-1"><a class="header-anchor" href="#_5-3、nginx配置" aria-hidden="true">#</a> 5.3、nginx配置</h3><blockquote><p>nginx.conf配置</p></blockquote><div class="language-properties ext-properties line-numbers-mode"><pre class="language-properties"><code><span class="token key attr-name">upstream</span> <span class="token value attr-value">mytest {</span>\n<span class="token key attr-name">    server</span> <span class="token value attr-value">localhost:9999;</span>\n<span class="token key attr-name">    server</span> <span class="token value attr-value">localhost:9900;</span>\n}\n\n<span class="token key attr-name">server</span> <span class="token value attr-value">{</span>\n<span class="token key attr-name">    listen</span> <span class="token value attr-value">      80;</span>\n<span class="token key attr-name">    server_name</span> <span class="token value attr-value"> localhost;</span>\n\n<span class="token comment">    #拦截静态资源</span>\n<span class="token key attr-name">    location</span> <span class="token value attr-value">~ .*\\.(html|htm|gif|jpg|jpeg|bmp|png|ico|js|css|map|eot|svg|ttf|woff|woff2)$ {</span>\n<span class="token key attr-name">\t\troot</span> <span class="token value attr-value">/home/pages;</span>\n<span class="token key attr-name">\t\tindex</span> <span class="token value attr-value">index.html index.htm;</span>\n\t}\n\n<span class="token comment">\t# 反向代理服务器资源</span>\n<span class="token key attr-name">    location</span> <span class="token value attr-value">/ {</span>\n<span class="token key attr-name">    \tproxy_pass</span> <span class="token value attr-value">http://mytest/;</span>\n    }\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h2 id="六、关于跨域" tabindex="-1"><a class="header-anchor" href="#六、关于跨域" aria-hidden="true">#</a> 六、关于跨域</h2><h3 id="_6-1、概念" tabindex="-1"><a class="header-anchor" href="#_6-1、概念" aria-hidden="true">#</a> 6.1、概念</h3><blockquote><p>**跨域：**指的是浏览器不能执行其他网站的脚本。它是由浏览器的同源策略造成的，是浏览器对javascript施加的安全限制。</p><p>例如：a页面想获取b页面资源，如果a、b页面的协议、域名、端口、子域名不同，所进行的访问行动都是跨域的，而浏览器为了安全问题一般都限制了跨域访问，也就是不允许跨域请求资源。注意：跨域限制访问，其实是<strong>浏览器的限制</strong>。理解这一点很重要。</p><p><strong>同源策略：是指协议，域名，端口都要相同，其中有一个不同都会产生跨域。</strong></p></blockquote><p><img src="'+r+'" alt="img"></p><blockquote><p>假设有两个网站，A网站部署在：http://localhost:81 即本地ip端口81上；B网站部署在：http://localhost:82 即本地ip端口82上。现在A网站的页面想去访问B网站的信息，就会产生跨域问题。在控制台会输出如下信息：</p></blockquote><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Access to XMLHttpRequest at &#39;xxxxxxxxxxxxxxxxxx&#39; from origin &#39;xxxxxxxxxxx&#39; has been blocked by CORS policy: No &#39;Access-Control-Allow-Origin&#39; header is present on the requested\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="_6-2、处理" tabindex="-1"><a class="header-anchor" href="#_6-2、处理" aria-hidden="true">#</a> 6.2、处理</h3><blockquote><p>在Controller上添加<code>@CrossOrigin</code>。</p></blockquote>',75),i={},b=(0,a(83744).Z)(i,[["render",function(n,s){return u}]])}}]);