"use strict";(self.webpackChunkhuanglian=self.webpackChunkhuanglian||[]).push([[9141],{97113:(a,e,s)=>{s.r(e),s.d(e,{data:()=>n});const n={key:"v-6575eafc",path:"/javase/basic/01_Java%E5%85%A5%E9%97%A8%E4%B8%8E%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.html",title:"",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"一、计算机基础知识",slug:"一、计算机基础知识",children:[{level:3,title:"1.1、软件开发",slug:"_1-1、软件开发",children:[]},{level:3,title:"1.2、人机交互方式",slug:"_1-2、人机交互方式",children:[]},{level:3,title:"1.3、计算机语言",slug:"_1-3、计算机语言",children:[]}]},{level:2,title:"二、Java语言概述",slug:"二、java语言概述",children:[{level:3,title:"2.1、Java语言简介",slug:"_2-1、java语言简介",children:[]},{level:3,title:"2.2、Java语言平台版本",slug:"_2-2、java语言平台版本",children:[]},{level:3,title:"2.3、Java语言特点",slug:"_2-3、java语言特点",children:[]},{level:3,title:"2.4、Java应用领域",slug:"_2-4、java应用领域",children:[]},{level:3,title:"2.5、为什么要学习Java",slug:"_2-5、为什么要学习java",children:[]}]},{level:2,title:"三、Java开发环境搭建",slug:"三、java开发环境搭建",children:[{level:3,title:"3.1、搭建过程",slug:"_3-1、搭建过程",children:[]},{level:3,title:"3.2、需要明确的几个问题",slug:"_3-2、需要明确的几个问题",children:[]}]},{level:2,title:"四、第一个Java程序",slug:"四、第一个java程序",children:[{level:3,title:"4.1、编辑",slug:"_4-1、编辑",children:[]},{level:3,title:"4.2、编译",slug:"_4-2、编译",children:[]},{level:3,title:"4.3、运行",slug:"_4-3、运行",children:[]}]}],filePathRelative:"javase/basic/01_Java入门与开发环境搭建.md",git:{updatedTime:1661237516e3,contributors:[{name:"黄健",email:"huang.jian@trs.com.cn",commits:1}]}}},58282:(a,e,s)=>{s.r(e),s.d(e,{default:()=>J});var n=s(66252);const l=s.p+"assets/img/Java之父.a421b5db.jpeg",t=s.p+"assets/img/TIOBE排行.5338c551.jpg",o=s.p+"assets/img/Gitee编程语言排行.827c89c5.jpg",i=s.p+"assets/img/JDK版本.d6d1fa08.jpg",d=s.p+"assets/img/01_jdk安装.96f2e397.jpg",r=s.p+"assets/img/02_jdk安装.d2be9d68.jpg",c=s.p+"assets/img/03_jdk安装.3c88ab8c.jpg",p=s.p+"assets/img/04_jdk安装.fed8a850.jpg",h=s.p+"assets/img/05_配置环境变量.deee9333.jpg",u=s.p+"assets/img/06_配置环境变量.7049cafe.jpg",v=s.p+"assets/img/Java的跨平台性.4887abb8.jpg",b=(0,n.uE)('<h2 id="一、计算机基础知识" tabindex="-1"><a class="header-anchor" href="#一、计算机基础知识" aria-hidden="true">#</a> 一、计算机基础知识</h2><h3 id="_1-1、软件开发" tabindex="-1"><a class="header-anchor" href="#_1-1、软件开发" aria-hidden="true">#</a> 1.1、软件开发</h3><blockquote><p>什么是软件？</p><p><strong>软件</strong>（Software）是一系列按照特定顺序组织的计算机<strong>数据</strong>和<strong>指令</strong>的集合</p><p>软件分类：</p><ul><li>系统软件（Windows、Linux、Android、IOS）</li><li>应用软件（QQ、迅雷、微信...）</li></ul><p>什么是软件开发？</p><ul><li>软件开发是根据用户要求建造出软件系统或者系统中的软件部分的过程；</li><li>软件一般是用<strong>某种程序设计语言</strong>来实现的。</li></ul></blockquote><h3 id="_1-2、人机交互方式" tabindex="-1"><a class="header-anchor" href="#_1-2、人机交互方式" aria-hidden="true">#</a> 1.2、人机交互方式</h3><h4 id="_1-2-1、分类" tabindex="-1"><a class="header-anchor" href="#_1-2-1、分类" aria-hidden="true">#</a> 1.2.1、分类</h4><blockquote><ul><li>图形用户界面方式（GUI：Graphical User Interface ）：简单直观，使用者易于接受，容易上手操作；</li><li>命令行方式（CLI：Command Line Interface ）：需要有一个控制台，输入特定的指令，让计算机完成一些操作。较为麻烦，需要记录住一些命令。</li></ul></blockquote><h4 id="_1-2-2、打开dos窗口方式" tabindex="-1"><a class="header-anchor" href="#_1-2-2、打开dos窗口方式" aria-hidden="true">#</a> 1.2.2、打开DOS窗口方式</h4><blockquote><ul><li>Win+R，然后输入<code>cmd</code>，确定；</li><li>开始-windows系统-命令提示符；</li><li>进入文件夹，在地址栏输入<code>cmd</code>。</li></ul></blockquote><h4 id="_1-2-3、常用dos命令" tabindex="-1"><a class="header-anchor" href="#_1-2-3、常用dos命令" aria-hidden="true">#</a> 1.2.3、常用DOS命令</h4><table><thead><tr><th>命令</th><th>功能</th></tr></thead><tbody><tr><td><code>dir</code></td><td>列出当前目录下的文件以及目录</td></tr><tr><td><code>md</code></td><td>创建目录</td></tr><tr><td><code>rd</code></td><td>删除目录<br><code>/s</code>除目录本身外，还将删除指定目录下的所有子目录和文件。用于删除目录树。<br><code>/q</code>安静模式，带<code>/s</code>删除目录树时不要求确认</td></tr><tr><td><code>cd</code></td><td>进入指定目录<br><code>.</code>当前目录<br><code>..</code>上一级目录<br><code>\\</code>根目录</td></tr><tr><td><code>del</code></td><td>删除文件</td></tr><tr><td><code>exit</code></td><td>退出dos命令行</td></tr><tr><td><code>cls</code></td><td>清屏</td></tr></tbody></table><blockquote><p>常用快捷键：</p><ul><li><p><code>tab</code>：自动补全；</p></li><li><p><code>← →</code>：移动光标 ；</p></li><li><p><code>↑ ↓</code>：调阅历史操作命令;</p></li><li><p><code>Delete</code>和<code>Backspace</code>：删除字符。</p></li></ul></blockquote><h3 id="_1-3、计算机语言" tabindex="-1"><a class="header-anchor" href="#_1-3、计算机语言" aria-hidden="true">#</a> 1.3、计算机语言</h3><blockquote><p><strong>语言</strong>：人与人之间用于沟通的一种方式。例如，中国人与中国人用中文沟通。<strong>语言可以理解成双方都理解的一种约定。</strong></p><p><strong>计算机语言</strong>：人与计算机交流的方式。要和计算机交流，那么就要学习计算机可以理解的语言，计算机的语言有很多，C、C++、Java、.Net、Python，我们选择学习Java。</p></blockquote><h2 id="二、java语言概述" tabindex="-1"><a class="header-anchor" href="#二、java语言概述" aria-hidden="true">#</a> 二、Java语言概述</h2><h3 id="_2-1、java语言简介" tabindex="-1"><a class="header-anchor" href="#_2-1、java语言简介" aria-hidden="true">#</a> 2.1、Java语言简介</h3><blockquote><p>推出公司：Sun Microsystems（Sun公司），后被Oracle收购。</p><p>主要作者：**James Gosling（詹姆斯·高斯林）**和同事。</p><p>历史：</p><ul><li>1991年为消费类电子产品研发，最初名为Oak；</li><li><strong>1995年正式推出，更名为Java；</strong></li><li>1996年，发布JDK 1.0，约8.3万个网页应用Java技术来制作；</li><li>1997年，发布JDK 1.1，JavaOne会议召开，创当时全球同类会议规模之最；</li><li>1998年，发布JDK 1.2，同年发布企业平台J2EE；</li><li>1999年，Java分成J2SE、J2EE和J2ME，JSP/Servlet技术诞生；</li><li><strong>2004年，发布里程碑式版本：JDK 1.5，为突出此版本的重要性，更名为JDK 5.0；</strong></li><li>2005年，J2SE -&gt; JavaSE，J2EE -&gt; JavaEE，J2ME -&gt; JavaME；</li><li>2009年，Oracle公司收购SUN，交易价格74亿美；</li><li>2011年，发布JDK 7.0</li><li><strong>2014年，发布JDK8.0，是继JDK 5.0以来变化最大的版本；</strong></li><li>...</li><li><strong>2021年，发布JDK17</strong></li><li>...</li></ul></blockquote><p><img src="'+l+'" alt="Java之父"></p><h3 id="_2-2、java语言平台版本" tabindex="-1"><a class="header-anchor" href="#_2-2、java语言平台版本" aria-hidden="true">#</a> 2.2、Java语言平台版本</h3><blockquote><p><strong>JavaSE（Java Standard Edition）标准版（本阶段需要学习）</strong></p><ul><li>支持面向桌面级应用（如Windows下的应用程序）的Java平台，提供了完整的Java核心API，此版本以前称为J2SE。</li></ul><p><strong>JavaEE（Java Enterprise Edition）企业版（要深入学习的内容）</strong></p><ul><li>为开发企业环境下的应用程序提供的一套解决方案。该技术体系中包含的技术如：Servlet 、Jsp等，主要针对于Web应用程序开发。版本以前称为J2EE。</li></ul><p><strong>JavaME（Java Micro Edition）小型版（不需要学习）</strong></p><ul><li>支持Java程序运行在移动终端（手机、PDA）上的平台，对Java API有所精简，并加入了针对移动终端的支持，此版本以前称为J2ME</li></ul></blockquote><h3 id="_2-3、java语言特点" tabindex="-1"><a class="header-anchor" href="#_2-3、java语言特点" aria-hidden="true">#</a> 2.3、Java语言特点</h3><blockquote><ul><li>Java语言是简单的</li><li>Java语言是面向对象的</li><li>Java语言是健壮的</li><li><strong>Java语言跨平台的（后面会解释）</strong></li><li>Java是高性能的</li><li>Java语言是分布式的</li></ul></blockquote><h3 id="_2-4、java应用领域" tabindex="-1"><a class="header-anchor" href="#_2-4、java应用领域" aria-hidden="true">#</a> 2.4、Java应用领域</h3><blockquote><p>**企业级应用：**主要指复杂的大企业的软件系统、各种类型的网站。Java的安全机制以及 它的跨平台的优势，使它在分布式系统领域开发中有广泛应用。应用领域包括金融、电 信、交通、电子商务等。</p><p>**Android平台应用：**Android应用程序使用Java语言编写。Android开发水平的高低很大程度上取决于Java语言核心能力是否扎实。</p><p>**大数据平台开发：**各类框架有Hadoop，spark，storm，flink等，就这类技术生态 圈来讲，还有各种中间件如flume，kafka等 ，这些框架以及工具大多数 是用Java编写而成，但提供诸如Java，scala，Python，R等各种语言API供编程。</p></blockquote><h3 id="_2-5、为什么要学习java" tabindex="-1"><a class="header-anchor" href="#_2-5、为什么要学习java" aria-hidden="true">#</a> 2.5、为什么要学习Java</h3><blockquote><p>上面的特点及应用领域；</p><p>市场占有率：</p><ul><li>TIOBE排行榜长期占据前三的位置；</li><li>国内代码托管平台Gitee，Java开源项目占有率长期处于第一的位置</li></ul></blockquote><p><img src="'+t+'" alt=""></p><p><img src="'+o+'" alt=""></p><h2 id="三、java开发环境搭建" tabindex="-1"><a class="header-anchor" href="#三、java开发环境搭建" aria-hidden="true">#</a> 三、Java开发环境搭建</h2><h3 id="_3-1、搭建过程" tabindex="-1"><a class="header-anchor" href="#_3-1、搭建过程" aria-hidden="true">#</a> 3.1、搭建过程</h3><blockquote><p>严格按照教程，一步步完成安装。</p><p>下载：<code>https://www.oracle.com/java/technologies/javase/javase8u211-later-archive-downloads.html</code></p><p>下载时选择正确的版本。</p></blockquote><p><img src="'+i+'" alt=""></p><h4 id="_3-1-1、安装jdk" tabindex="-1"><a class="header-anchor" href="#_3-1-1、安装jdk" aria-hidden="true">#</a> 3.1.1、安装JDK</h4><blockquote><p>单击“下一步”</p></blockquote><p><img src="'+d+'" alt=""></p><blockquote><p>注意选择JDK安装路径，<strong>一定要安装在一个没有中文和特殊符号的路径下</strong>。</p></blockquote><p><img src="'+r+'" alt=""></p><blockquote><p>安装图示的要求，选择<strong>不安装JRE</strong>，为什么不安装，后面会解释。</p></blockquote><p><img src="'+c+'" alt=""></p><blockquote><p>单击“关闭”完成安装。</p></blockquote><p><img src="'+p+'" alt=""></p><h4 id="_3-1-2、配置环境变量" tabindex="-1"><a class="header-anchor" href="#_3-1-2、配置环境变量" aria-hidden="true">#</a> 3.1.2、配置环境变量</h4><blockquote><p>此电脑 - 右键 - 属性 - 高级系统设置 - 环境变量，打开环境变量窗口</p><p>新建<code>JAVA_HOME</code>环境变量，变量值填写<strong>jdk安装目录的bin的上一级目录</strong>。</p></blockquote><p><img src="'+h+'" alt=""></p><blockquote><p>配置<code>Path</code>环境变量</p></blockquote><p><img src="'+u+'" alt=""></p><h4 id="_3-1-3、验证安装配置是否成功" tabindex="-1"><a class="header-anchor" href="#_3-1-3、验证安装配置是否成功" aria-hidden="true">#</a> 3.1.3、验证安装配置是否成功</h4><blockquote><p><strong>重新打开</strong>一个CMD窗口，分别输入下面两条命令，如果<strong>有版本信息输出</strong>并且<strong>版本值相同</strong>证明JDK安装配置成功。</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token operator">&gt;</span> javac -version\n<span class="token operator">&gt;</span> java -version\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_3-2、需要明确的几个问题" tabindex="-1"><a class="header-anchor" href="#_3-2、需要明确的几个问题" aria-hidden="true">#</a> 3.2、需要明确的几个问题</h3><h4 id="_3-2-1、为什么要配置path环境变量" tabindex="-1"><a class="header-anchor" href="#_3-2-1、为什么要配置path环境变量" aria-hidden="true">#</a> 3.2.1、为什么要配置Path环境变量</h4><blockquote><p>当在命令行中执行一个程序时，Windows系统首先在当前目录下查找该程序，如果程序不存在，则系统会在系统中已有的一个名为Path的环境变量指定的目录中查找该程序，如果没有找到，就会出现错误提示。</p><p><code>执行程序查找过程：当前目录 - Path环境变量指定的目录</code></p><p>后续的开发中我们会频繁的使用<code>javac</code>和<code>java</code>两个命令，如果我们每一次都去JDK安装目录的bin目录下去执行<code>javac</code>和<code>java</code>两个命令，会非常麻烦。根据Windows系统在查找可执行程序的原理，可以将Java工具所在路径定义到Path环境变量中，让系统帮我们去找运行执行的程序。</p></blockquote><h4 id="_3-2-2、jdk、jre、jvm的关系" tabindex="-1"><a class="header-anchor" href="#_3-2-2、jdk、jre、jvm的关系" aria-hidden="true">#</a> 3.2.2、JDK、JRE、JVM的关系</h4><blockquote><p><strong>JDK</strong>： Java Development Kit，Java开发包，是Sun提供的一套用于开发Java应用程序的开发包，它提供了编译、运行 Java 程序所需要的各种工具和资源，包括 Java 编译器、Java 运行时环境（JRE），以及常用的Java类库等。</p><p><strong>JRE</strong>：Java Runtime Environment，Java 运行时环境，它是运行 Java 程序的必要条件。</p><p><strong>JVM</strong>：Java Virtual Machine，Java虚拟机，JVM是可以运行Java字节码文件的虚拟计算机。</p><p>三者关系：</p><ul><li>JDK包含JRE，JRE包含JVM；</li><li>如果我们仅仅运行一个Java编写的程序，只需要安装JRE；</li><li>如果我们需要进行Java语言相关的开发，则需要安装JDK；</li><li>Java语言最初是sun公司开发的，后来被oracle公司收购，我们下载JDK、JRE需要到oracle官网下载，oracle不提供JVM的下载。</li></ul></blockquote><h4 id="_3-2-3、java的跨平台性是如何实现的" tabindex="-1"><a class="header-anchor" href="#_3-2-3、java的跨平台性是如何实现的" aria-hidden="true">#</a> 3.2.3、Java的跨平台性是如何实现的</h4><blockquote><p><strong>平台</strong>：操作系统</p><p>Java的跨平台性：通过Java语言编写的应用程序在不同的系统平台上都可以运行。</p><p>如何实现：</p><p><img src="'+v+'" alt=""></p><p>只要在需要运行Java应用程序的操作系统上，先安装一个Java虚拟机(JVM Java Virtual Machine)即可。</p><p>由JVM来负责Java程序在该系统中的运行。</p><p>因为有了JVM，所以同一个Java程序在三个不同的操作系统中都可以执行。这样就实现了Java程序的跨平台性。也称为Java具有良好的可移植性。</p><p><strong>将各自平台的JVM想象成只会一门外语的翻译。</strong></p><p>注意：我们说的Java跨平台是指的Java语言跨平台，编写好的Java程序通过编译可以在不同的操作系统上运行。JVM不是跨平台的，不同的操作系统上需要安装不同的JVM才能保证Java的跨平台性。</p></blockquote><h2 id="四、第一个java程序" tabindex="-1"><a class="header-anchor" href="#四、第一个java程序" aria-hidden="true">#</a> 四、第一个Java程序</h2><h3 id="_4-1、编辑" tabindex="-1"><a class="header-anchor" href="#_4-1、编辑" aria-hidden="true">#</a> 4.1、编辑</h3><blockquote><p>新建一个<code>txt</code>文件，将文件名修改为<code>HelloWorld.java</code>。</p><p>注意：一定要设置让Windows操作系统显示文件的扩展名。</p><p>使用文本编辑工具编辑这个文件，输入如下的内容，并<strong>保存</strong>。</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//在控制台打印Hello World！\t</span>\n<span class="token comment">//定义一个类，注意大括号是成对的</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloWorld</span> <span class="token punctuation">{</span>\n    <span class="token comment">//类中的内容都要写在大括号内</span>\n    <span class="token comment">//定义一个main方法，main方法是整个程序的入口</span>\n\t<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">//在控制台输出内容，注意双引号，分号，输入法</span>\n\t\t<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Hello World!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><blockquote><p>由于我们刚刚接触Java，上面案例的很多内容我们暂时无法深入展开，大家先把这段程序<strong>背下来</strong>。</p></blockquote><h3 id="_4-2、编译" tabindex="-1"><a class="header-anchor" href="#_4-2、编译" aria-hidden="true">#</a> 4.2、编译</h3><blockquote><p>打开<code>cmd</code>，进入上面文件所在的文件夹，输入如下的命令：</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>javac HelloWorld.java\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote><p>这一步的作用是编译Java程序，我们能够看到文件夹下生成了一个<code>.class</code>文件。</p><p>编译通俗的说就是将人们能够看懂的代码（上面的<code>.java</code>文件）转换成计算机能够识别的代码（生成的<code>.class</code>文件）。</p></blockquote><h3 id="_4-3、运行" tabindex="-1"><a class="header-anchor" href="#_4-3、运行" aria-hidden="true">#</a> 4.3、运行</h3><blockquote><p>执行如下的命令：</p></blockquote><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>java HelloWorld\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',67),g={},J=(0,s(83744).Z)(g,[["render",function(a,e){return b}]])}}]);