"use strict";(self.webpackChunkhuanglian=self.webpackChunkhuanglian||[]).push([[2364],{82278:(e,a,t)=>{t.r(a),t.d(a,{data:()=>l});const l={key:"v-9ac88072",path:"/web/javaweb/01_Web%E5%BC%80%E5%8F%91%E5%9F%BA%E7%A1%80.html",title:"",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"一、常见软件系统体系结构",slug:"一、常见软件系统体系结构",children:[{level:3,title:"1.1、C/S架构",slug:"_1-1、c-s架构",children:[]},{level:3,title:"1.2、B/S架构",slug:"_1-2、b-s架构",children:[]}]},{level:2,title:"二、Web资源",slug:"二、web资源",children:[{level:3,title:"2.1、静态资源",slug:"_2-1、静态资源",children:[]},{level:3,title:"2.2、动态资源",slug:"_2-2、动态资源",children:[]}]},{level:2,title:"三、Web服务器",slug:"三、web服务器",children:[{level:3,title:"3.1、常见Web服务器",slug:"_3-1、常见web服务器",children:[]},{level:3,title:"3.2、Tomcat服务器",slug:"_3-2、tomcat服务器",children:[]},{level:3,title:"3.3、IDEA集成Tomcat",slug:"_3-3、idea集成tomcat",children:[]}]},{level:2,title:"四、HTTP协议",slug:"四、http协议",children:[{level:3,title:"4.1、概述",slug:"_4-1、概述",children:[]},{level:3,title:"4.2、请求协议",slug:"_4-2、请求协议",children:[]},{level:3,title:"4.3、响应协议",slug:"_4-3、响应协议",children:[]}]},{level:2,title:"五、IDEA创建Web项目",slug:"五、idea创建web项目",children:[{level:3,title:"5.1、新建普通Java项目",slug:"_5-1、新建普通java项目",children:[]},{level:3,title:"5.2、修改普通Java项目为JavaWeb项目",slug:"_5-2、修改普通java项目为javaweb项目",children:[]},{level:3,title:"5.3、项目部署",slug:"_5-3、项目部署",children:[]},{level:3,title:"5.4、项目运行",slug:"_5-4、项目运行",children:[]},{level:3,title:"5.5、其他操作",slug:"_5-5、其他操作",children:[]}]}],filePathRelative:"web/javaweb/01_Web开发基础.md",git:{updatedTime:1661237516e3,contributors:[{name:"黄健",email:"huang.jian@trs.com.cn",commits:1}]}}},52318:(e,a,t)=>{t.r(a),t.d(a,{default:()=>O});var l=t(66252);const i=t.p+"assets/img/image-20210905233047383.c0d6e23c.png",s=t.p+"assets/img/image-20210905234021264.647da18e.png",n=t.p+"assets/img/image-20210906003847048.222d5901.png",r=t.p+"assets/img/image-20210906004013585.09a16149.png",p=t.p+"assets/img/image-20210906004049383.c34104c7.png",o=t.p+"assets/img/请求报文.b9df1270.png",c=t.p+"assets/img/响应报文.0b75c99c.png",d=t.p+"assets/img/image-20210906002401086.ffb638b3.png",b=t.p+"assets/img/image-20210906002811360.fa82c4dc.png",h=t.p+"assets/img/image-20210906002948105.6e83973e.png",u=t.p+"assets/img/image-20210906003126293.a25319e8.png",g=t.p+"assets/img/image-20210906003250782.b0feb0d3.png",m=t.p+"assets/img/image-20210906004437099.6759ee58.png",q=t.p+"assets/img/image-20210906004525203.9de64e6d.png",k=t.p+"assets/img/image-20210906004613241.de7c895d.png",v=t.p+"assets/img/image-20210906005147219.1cbe3147.png",_=t.p+"assets/img/image-20210906005254292.c761ab61.png",x=t.p+"assets/img/image-20210906005402507.06f67ae7.png",T=t.p+"assets/img/image-20210906005602709.3256a7db.png",f=t.p+"assets/img/image-20210906010314577.27f1c799.png",w=t.p+"assets/img/image-20210906012103948.c959ae43.png",W=t.p+"assets/img/image-20210906012351899.48e32580.png",J=t.p+"assets/img/image-20210906012451882.0bc761b8.png",j=t.p+"assets/img/image-20210906012634767.3e870c99.png",S=(0,l.uE)('<h2 id="一、常见软件系统体系结构" tabindex="-1"><a class="header-anchor" href="#一、常见软件系统体系结构" aria-hidden="true">#</a> 一、常见软件系统体系结构</h2><blockquote><p>C/S和B/S是软件发展过程中出现的两种软件架构方式。</p></blockquote><h3 id="_1-1、c-s架构" tabindex="-1"><a class="header-anchor" href="#_1-1、c-s架构" aria-hidden="true">#</a> 1.1、C/S架构</h3><blockquote><p>C/S结构即客户端/服务器（Client/Server），例如QQ；</p><p>需要编写服务器端程序，以及客户端程序，例如我们安装的就是QQ的客户端程序；</p><p>缺点：软件更新时需要同时更新客户端和服务器端两端，比较麻烦；</p><p>优点：安全性比较好。</p></blockquote><h3 id="_1-2、b-s架构" tabindex="-1"><a class="header-anchor" href="#_1-2、b-s架构" aria-hidden="true">#</a> 1.2、B/S架构</h3><blockquote><p>B/S结构即浏览器/服务器（Browser/Server）；</p><p>优点：只需要编写服务器端程序，不需要安装专门的客户端软件，只需要浏览器就行；</p><p>缺点：安全性较差。</p></blockquote><h2 id="二、web资源" tabindex="-1"><a class="header-anchor" href="#二、web资源" aria-hidden="true">#</a> 二、Web资源</h2><blockquote><p>Web(World Wide Web) 称为万维网，简单理解就是网站，它用来表示Internet主机上供外界访问的资源。</p><p>Internet上供外界访问的资源分为：</p><ul><li>静态资源</li><li>动态资源</li></ul></blockquote><h3 id="_2-1、静态资源" tabindex="-1"><a class="header-anchor" href="#_2-1、静态资源" aria-hidden="true">#</a> 2.1、静态资源</h3><blockquote><p>供人们浏览的数据始终是不变；</p><p>浏览器能直接看懂</p><p>例如：HTML、CSS、JavaScript、各种图片</p></blockquote><h3 id="_2-2、动态资源" tabindex="-1"><a class="header-anchor" href="#_2-2、动态资源" aria-hidden="true">#</a> 2.2、动态资源</h3><blockquote><p>供人们浏览的数据是由程序产生的，不同时间点访问WEB页面看到的内容各不相同。</p><p><strong>客户端请求的页面如果是静态网页，那么服务器会直接把静态网页的内容响应给客户端。如果客户端请求的是动态网页，服务器需要先把动态网页转换成静态网页，然后再把转换后的静态网页响应给客户端。</strong></p><p>注：从广义上讲，用户看到的都是静态网页。</p><p>例如：Servlet、JSP、ASP、PHP，但是在Java里面只涉及JSP/Servlet</p><p><strong>在Java中，动态web资源开发技术统称为JavaWeb</strong></p></blockquote><h2 id="三、web服务器" tabindex="-1"><a class="header-anchor" href="#三、web服务器" aria-hidden="true">#</a> 三、Web服务器</h2><blockquote><p>Web服务器是运行及发布Web应用的容器，只有将开发的Web项目放置到该容器中，才能使网络中的所有用户通过浏览器进行访问。</p></blockquote><h3 id="_3-1、常见web服务器" tabindex="-1"><a class="header-anchor" href="#_3-1、常见web服务器" aria-hidden="true">#</a> 3.1、常见Web服务器</h3><blockquote><p>开源：</p><ul><li>Tomcat：主流Web服务器之一，适合初学者</li><li>Jetty：运行效率比Tomcat高</li><li>Resin：所有开源服务器软件中，运行效率最高的</li><li>三者的用法从代码角度完全相同，只有在开启、关闭服务器软件时对应的命令稍有区别。掌握一个即掌握所有</li></ul><p>收费：</p><ul><li>WebLogic：Oracle</li><li>WebSphere：IBM</li><li>提供相应的服务与支持，软件大，耗资源</li></ul></blockquote><h3 id="_3-2、tomcat服务器" tabindex="-1"><a class="header-anchor" href="#_3-2、tomcat服务器" aria-hidden="true">#</a> 3.2、Tomcat服务器</h3><blockquote><p>Tomcat是Apache 软件基金会（Apache Software Foundation）的Jakarta 项目中的一个核心项目，免费开源、并支持Servlet 和JSP 规范。目前Tomcat最新版本为9.0。</p><p>Tomcat 技术先进、性能稳定，深受Java 爱好者喜爱并得到了部分软件开发商的认可，成为目前比较流行的Web 应用服务器。</p></blockquote><h4 id="_3-2-1、tomcat安装" tabindex="-1"><a class="header-anchor" href="#_3-2-1、tomcat安装" aria-hidden="true">#</a> 3.2.1、Tomcat安装</h4><h5 id="_3-2-1-1、下载" tabindex="-1"><a class="header-anchor" href="#_3-2-1-1、下载" aria-hidden="true">#</a> 3.2.1.1、下载</h5>',20),y=(0,l.Uk)("官网："),E={href:"https://tomcat.apache.org/index.html",target:"_blank",rel:"noopener noreferrer"},P=(0,l.Uk)("Apache Tomcat® - Welcome!"),A=(0,l.Uk)("Tomcat8下载地址："),I={href:"https://tomcat.apache.org/download-80.cgi",target:"_blank",rel:"noopener noreferrer"},H=(0,l.Uk)("Apache Tomcat® - Apache Tomcat 8 Software Downloads"),B=(0,l.uE)('<p><img src="'+i+'" alt="image-20210905233047383" title=":size=60%"></p><blockquote><p>根据自己电脑情况，选择32位版本或64位版本下载。为了统一，一定要下载压缩版本。</p></blockquote><h5 id="_3-2-1-2、解压安装" tabindex="-1"><a class="header-anchor" href="#_3-2-1-2、解压安装" aria-hidden="true">#</a> 3.2.1.2、解压安装</h5><blockquote><p>将Tomcat解压到一个没有特殊符号的目录中，纯英文路径就可以。</p></blockquote><h5 id="_3-2-1-3、tomcat目录结构" tabindex="-1"><a class="header-anchor" href="#_3-2-1-3、tomcat目录结构" aria-hidden="true">#</a> 3.2.1.3、Tomcat目录结构</h5><blockquote><table><thead><tr><th>文件夹</th><th style="text-align:left;">说明</th><th>备注</th></tr></thead><tbody><tr><td><strong>bin</strong></td><td style="text-align:left;">该目录下存放的是二进制可执行文件</td><td>startup.bat启动Tomcat、shutdown.bat停止Tomcat</td></tr><tr><td><strong>conf</strong></td><td style="text-align:left;">这是一个非常重要的目录，这个目录下有两个最为重要的文件server.xml和web.xml</td><td>server.xml：配置整个服务器信息。例如修改端口号，编码格式等。web.xml：项目部署描述符文件，这个文件中注册了很多MIME类型，即文档类型。</td></tr><tr><td>lib</td><td style="text-align:left;">Tomcat的类库，里面存放Tomcat运行所需要的jar文件。</td><td></td></tr><tr><td>logs</td><td style="text-align:left;">存放日志文件，记录了Tomcat启动和关闭的信息，如果启动Tomcat时有错误，异常也会记录在日志文件中。</td><td></td></tr><tr><td>temp</td><td style="text-align:left;">Tomcat的临时文件，这个目录下的东西在停止Tomcat后删除。</td><td></td></tr><tr><td><strong>webapps</strong></td><td style="text-align:left;">存放web项目的目录，其中每个文件夹都是一个项目；其中ROOT是一个特殊的项目，在地址栏中没有给出项目目录时，对应的就是ROOT项目。</td><td></td></tr><tr><td><strong>work</strong></td><td style="text-align:left;">运行时生成的文件，最终运行的文件都在这里。</td><td>当客户端用户访问一个JSP文件时，Tomcat会通过JSP生成Java文件，然后再编译Java文件生成class文件，生成的java和class文件都会存放到这个目录下。</td></tr></tbody></table></blockquote><h4 id="_3-2-2、启动和停止" tabindex="-1"><a class="header-anchor" href="#_3-2-2、启动和停止" aria-hidden="true">#</a> 3.2.2、启动和停止</h4><h5 id="_3-2-2-1、启动" tabindex="-1"><a class="header-anchor" href="#_3-2-2-1、启动" aria-hidden="true">#</a> 3.2.2.1、启动</h5><blockquote><p>进入Tomcat安装目录bin下，双击startup.bat启动程序，直到控制台出现xxxms，表示启动完成。</p></blockquote><h5 id="_3-2-2-2、验证" tabindex="-1"><a class="header-anchor" href="#_3-2-2-2、验证" aria-hidden="true">#</a> 3.2.2.2、验证</h5><blockquote><p>打开浏览器，在地址栏输入<code>http://localhost:8080</code>，出现如下界面表示启动成功。</p></blockquote><p><img src="'+s+'" alt="image-20210905234021264" title=":size=30%"></p><h5 id="_3-2-2-3、停止" tabindex="-1"><a class="header-anchor" href="#_3-2-2-3、停止" aria-hidden="true">#</a> 3.2.2.3、停止</h5><blockquote><p>双击shutdown.bat即可关闭Tomcat启动窗口。</p><p>注意：一定不要点击控制台的关闭按钮，可能导致停止失败。</p></blockquote><h4 id="_3-2-3、项目部署及访问" tabindex="-1"><a class="header-anchor" href="#_3-2-3、项目部署及访问" aria-hidden="true">#</a> 3.2.3、项目部署及访问</h4><blockquote><p>静态网站：</p><ul><li>在webapps目录下创建一个目录hello（命名必须不包含中文和空格），这个目录称之为项目目录；</li><li>在项目目录下创建一个html文件，例如index.html；</li><li>启动tomcat；</li><li>打开浏览器访问：<code>http://localhost:8080/hello/index.html</code></li></ul><p>动态网站：</p><ul><li>在webapps目录下创建一个项目目录hello1；</li><li>在项目目录下创建如下内容： <ul><li>WEB-INF目录； <ul><li>在WEB-INF目录下创建web.xml文件（到ROOT项目下的WEB-INF复制即可）；</li><li>创建classes，用于存放.class文件；</li><li>创建lib，用于存放jar文件。</li></ul></li><li>创建动态页面index.jsp和WEB-INF同级目录；</li></ul></li><li>打开浏览器访问：<code>http://localhost:8080/hello1/index.jsp</code></li></ul><p>index.jsp内容如下</p></blockquote><div class="language-jsp ext-jsp line-numbers-mode"><pre class="language-jsp"><code>&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;Index&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n      &lt;%\n\t\tString name = &quot;张三&quot;;\n\t\tout.print(&quot;&lt;p&gt;&quot; + name + &quot;&lt;/p&gt;&quot;);\n\t  %&gt;\n      &lt;p&gt;Hello JavaWeb&lt;/p&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><blockquote><p>关于访问路径：<code>协议://主机名:端口号/项目名/资源</code></p><ul><li>协议：一般是http或https</li><li>主机名：localhost或者一个其他的域名</li><li>端口号：Tomcat默认的是8080</li><li>项目名：和webapps下项目所在目录的目录名一致</li><li>资源：静态资源或动态资源位置，如果资源在某个目录中，此处也要包含目录的名字。</li></ul><p>注意：WEB-INF目录中的资源无法直接访问。</p></blockquote><h4 id="_3-2-4、常见问题" tabindex="-1"><a class="header-anchor" href="#_3-2-4、常见问题" aria-hidden="true">#</a> 3.2.4、常见问题</h4><blockquote><p>启动Tomcat控制台闪退，一般是由于没有配置<code>JAVA_HOME</code>。</p><p>之前在配置JDK的环境变量时，配置<code>JAVA_HOME</code>就是为了此处准备的。</p><p><code>JAVA_HOME</code>的值是JDK中bin的上一级目录。</p></blockquote><h3 id="_3-3、idea集成tomcat" tabindex="-1"><a class="header-anchor" href="#_3-3、idea集成tomcat" aria-hidden="true">#</a> 3.3、IDEA集成Tomcat</h3><p><img src="'+n+'" alt="image-20210906003847048"></p><p><img src="'+r+'" alt="image-20210906004013585"></p><p><img src="'+p+'" alt="image-20210906004049383"></p><h2 id="四、http协议" tabindex="-1"><a class="header-anchor" href="#四、http协议" aria-hidden="true">#</a> 四、HTTP协议</h2><h3 id="_4-1、概述" tabindex="-1"><a class="header-anchor" href="#_4-1、概述" aria-hidden="true">#</a> 4.1、概述</h3><blockquote><p>HTTP(hypertext transport protocol)，即超文本传输协议。这个协议详细规定了浏览器和万维网服务器之间互相通信的规则。</p><p>HTTP就是一个通信规则，通信规则规定了客户端发送给服务器的内容格式，也规定了服务器发送给客户端的内容格式。我们要学习的就是这个两个格式。客户端发送给服务器的格式叫“请求协议”；服务器发送给客户端的格式叫“响应协议”。</p><p>HTTP协议的特点：</p><ul><li>支持客户端（浏览器）/服务器模式。</li><li>简单快速：客户端只向服务器发送请求方法和路径，服务器即可响应数据，因而通信速度很快。请求方法常用的有GET、POST等。</li><li>灵活：HTTP允许传输任意类型的数据，传输的数据类型由Content-Type标识。</li><li>无连接：无连接指的是每次TCP连接只处理一个或多个请求，服务器处理完客户的请求后，即断开连接。采用这种方式可以节省传输时间。 <ul><li>HTTP1.0版本是一个请求响应之后，直接就断开了。称为短连接。</li><li>HTTP1.1版本不是响应后直接就断开了，而是等几秒钟,这几秒钟之内有新的请求，那么还是通过之前的连接通道来收发消息，如果过了这几秒钟用户没有发送新的请求，就会断开连接。称为长连接。</li></ul></li></ul><ul><li><p>无状态：HTTP协议是无状态协议。</p><ul><li>无状态是指协议对于事务处理没有记忆能力。</li></ul></li></ul></blockquote><h3 id="_4-2、请求协议" tabindex="-1"><a class="header-anchor" href="#_4-2、请求协议" aria-hidden="true">#</a> 4.2、请求协议</h3><blockquote><p>客户端发送给服务器的格式</p><p>格式：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>请求首行\n请求头信息\n空行\n请求体\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>分类：</p><ul><li>GET <ul><li>可以在请求的URL地址后以?的形式带上交给服务器的数据，多个数据之间以&amp;进行分隔；</li><li>在URL地址后附带的参数是有限制的，其数据容量通常不能超过1K；</li><li>GET请求没有请求体。</li></ul></li><li>POST <ul><li>传送的数据量无限制；</li><li>传输的数据在请求体内。</li></ul></li></ul></blockquote><p><img src="'+o+'" alt="请求报文"></p><h3 id="_4-3、响应协议" tabindex="-1"><a class="header-anchor" href="#_4-3、响应协议" aria-hidden="true">#</a> 4.3、响应协议</h3><blockquote><p>服务器发送给客户端的格式</p><p>格式：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>响应首行\n响应头信息\n空行\n响应体\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>常见响应码</p><ul><li>200：请求成功，浏览器会把响应体内容（通常是html）显示在浏览器中</li><li><strong>404：请求的资源没有找到，说明客户端错误的请求了不存在的资源</strong></li><li><strong>500：请求资源找到了，但服务器内部出现了错误</strong></li><li>302：重定向</li><li>304：如果再次访问的页面没有经过修改，返回304</li></ul></blockquote><p><img src="'+c+'" alt="响应报文"></p><h2 id="五、idea创建web项目" tabindex="-1"><a class="header-anchor" href="#五、idea创建web项目" aria-hidden="true">#</a> 五、IDEA创建Web项目</h2><blockquote><p>此处以Idea 2020.3举例</p></blockquote><h3 id="_5-1、新建普通java项目" tabindex="-1"><a class="header-anchor" href="#_5-1、新建普通java项目" aria-hidden="true">#</a> 5.1、新建普通Java项目</h3><p><img src="'+d+'" alt="image-20210906002401086" title=":size=70%"></p><blockquote><p>注意：Idea2020无法直接新建JavaWeb项目，只能通过新建普通Java项目的方式间接新建JavaWeb项目。</p><p>选择项目位置和普通Java项目相同，此处略过。</p></blockquote><h3 id="_5-2、修改普通java项目为javaweb项目" tabindex="-1"><a class="header-anchor" href="#_5-2、修改普通java项目为javaweb项目" aria-hidden="true">#</a> 5.2、修改普通Java项目为JavaWeb项目</h3><blockquote><p>项目根目录-&gt;右键-&gt;Add Framework Support</p></blockquote><p><img src="'+b+'" alt="image-20210906002811360" title=":size=70%"></p><blockquote><p>选择JavaEE版本</p></blockquote><p><img src="'+h+'" alt="image-20210906002948105" title=":size=70%"></p><blockquote><p>勾选左侧的Web Application</p></blockquote><p><img src="'+u+'" alt="image-20210906003126293" title=":size=70%"></p><blockquote><p>完成之后，可以看到项目下新建了web目录，并包含如下内容。</p></blockquote><p><img src="'+g+'" alt="image-20210906003250782"></p><blockquote><p>添加相关依赖<code>File-&gt;Project Structure</code></p></blockquote><p><img src="'+m+'" alt="image-20210906004437099"></p><p><img src="'+q+'" alt="image-20210906004525203"></p><p><img src="'+k+'" alt="image-20210906004613241"></p><blockquote><p>执行上述操作之后，Tomcat相关Jar包就添加到了项目中，不添加后续很多开发无法进行。</p></blockquote><h3 id="_5-3、项目部署" tabindex="-1"><a class="header-anchor" href="#_5-3、项目部署" aria-hidden="true">#</a> 5.3、项目部署</h3><blockquote><p>此处指的是将Idea中开发的Web项目在Tomcat中部署。</p></blockquote><p><img src="'+v+'" alt="image-20210906005147219"></p><p><img src="'+_+'" alt="image-20210906005254292"></p><p><img src="'+x+'" alt="image-20210906005402507"></p><p><img src="'+T+'" alt="image-20210906005602709"></p><blockquote><p>修改index.jsp的代码</p></blockquote><div class="language-jsp ext-jsp line-numbers-mode"><pre class="language-jsp"><code>&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;Index&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n      &lt;%\n\t\tString name = &quot;张三&quot;;\n\t\tout.print(&quot;&lt;p&gt;&quot; + name + &quot;&lt;/p&gt;&quot;);\n\t  %&gt;\n      &lt;p&gt;Hello JavaWeb&lt;/p&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="_5-4、项目运行" tabindex="-1"><a class="header-anchor" href="#_5-4、项目运行" aria-hidden="true">#</a> 5.4、项目运行</h3><blockquote><p>单击运行按钮，运行项目，默认会在浏览器中打开index.jsp</p></blockquote><p><img src="'+f+'" alt="image-20210906010314577"></p><blockquote><p><strong>在以后的开发中，多数时候都是重复上述步骤进行JavaWeb项目的开发。</strong></p></blockquote><h3 id="_5-5、其他操作" tabindex="-1"><a class="header-anchor" href="#_5-5、其他操作" aria-hidden="true">#</a> 5.5、其他操作</h3><h4 id="_5-5-1、关联第三方jar包" tabindex="-1"><a class="header-anchor" href="#_5-5-1、关联第三方jar包" aria-hidden="true">#</a> 5.5.1、关联第三方Jar包</h4><blockquote><ol><li>在项目WEB-INF目录下新建lib目录；</li><li>将第三方Jar包（例如：MySQL驱动Jar包，druid连接池Jar包）拷贝到lib目录下；</li><li>在lib上右键<code>Add as Library</code>；</li><li>选择Project Library，完成 <ul><li>Global Library表示所有工程都可以使用</li><li>Project Library表示当前工程中所有模块都可以使用</li><li>Module Library表示当前模块可以使用</li></ul></li></ol></blockquote><h4 id="_5-5-2、导出war包" tabindex="-1"><a class="header-anchor" href="#_5-5-2、导出war包" aria-hidden="true">#</a> 5.5.2、导出war包</h4><blockquote><p>项目完成后，有时候需要打成war方便部署。war包可以直接放入Tomcat的webapps目录中，启动Tomcat后自动解压，即可访问。</p></blockquote><p><img src="'+w+'" alt="image-20210906012103948"></p><p><img src="'+W+'" alt="image-20210906012351899"></p><p><img src="'+J+'" alt="image-20210906012451882"></p><blockquote><p>执行上述操作，后在项目根目录下生成out目录，内部包含的war包就是我们需要的war包。</p></blockquote><p><img src="'+j+'" alt="image-20210906012634767"></p><blockquote><p>将该war包拷贝到tomcat的webapps目录下，双击运行startup.bat，tomcat会<strong>自动解压</strong>该war包并发布项目，发布之后我们就可以访问。</p></blockquote>',75),F={},O=(0,t(83744).Z)(F,[["render",function(e,a){const t=(0,l.up)("OutboundLink");return(0,l.wg)(),(0,l.iD)(l.HY,null,[S,(0,l._)("blockquote",null,[(0,l._)("p",null,[y,(0,l._)("a",E,[P,(0,l.Wm)(t)])]),(0,l._)("p",null,[A,(0,l._)("a",I,[H,(0,l.Wm)(t)])])]),B],64)}]])}}]);